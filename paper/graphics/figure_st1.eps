%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Roman
%%Title: figure_st1.pdf
%%Creator: Adobe Acrobat 15.7.0
%%For: yrkey
%%CreationDate: 2018/2/28, 2:27:42
%%BoundingBox: 0 0 771 346
%%HiResBoundingBox: 0 0 770.1093 345.8750
%%CropBox: 0 0 770.1093 345.8750
%%LanguageLevel: 2
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentNeededFeatures: (atend)
%%DocumentSuppliedFeatures: (atend)
%%DocumentData: Clean7Bit
%%Pages: (atend)
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: (atend)
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$None SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
[/NamespacePush pdfmark_5
[/_objdef {Doc_Metadata} /type /stream /OBJ pdfmark_5
[{Doc_Metadata} 967 (% &end XMP packet& %) ReadBypdfmark_5_string
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c015 81.157285, 2014/12/12-00:43:15        ">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:dc="http://purl.org/dc/elements/1.1/"
    xmlns:xmp="http://ns.adobe.com/xap/1.0/"
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
   dc:format="application/pdf"
   xmp:CreateDate="2018-02-28T14:27:22+08:00"
   xmp:CreatorTool="Microsoft® Visio® 2016"
   xmp:ModifyDate="2018-02-28T14:27:22+08:00"
   pdf:Keywords=""
   pdf:Producer="Microsoft® Visio® 2016">
   <dc:creator>
    <rdf:Seq>
     <rdf:li>51174500056@stu.ecnu.edu.cn</rdf:li>
    </rdf:Seq>
   </dc:creator>
   <dc:description>
    <rdf:Alt>
     <rdf:li xml:lang="x-default"/>
    </rdf:Alt>
   </dc:description>
   <dc:title>
    <rdf:Alt>
     <rdf:li xml:lang="x-default"/>
    </rdf:Alt>
   </dc:title>
  </rdf:Description>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Doc_Metadata} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT pdfmark_5
[/Document 1 dict begin /Metadata {Doc_Metadata} def currentdict end /BDC pdfmark_5
[/NamespacePop pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Core/capture_mysetup gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%%EndPageSetup
1 -1 scale 0 -345.875 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
1.52588e-5 0 mo
1.52588e-5 345.875 li
770.109 345.875 li
770.109 0 li
cp
clp
gsave
-.821636 346.26 mo
770.178 346.26 li
770.178 -.740029 li
-.821636 -.740029 li
-.821636 346.26 li
clp
2.25 lw
1 lc
1 lj
10 ml
[] 0 dsh
true sadj
79.8284 217.48 mo
654.948 217.48 li
false sop
/0 
<<
/Name (Black)
/0 
[/DeviceCMYK] /CSA add_res
/CSA /0 get_csa_by_name
/MappedCSA /0 /CSA get_res
/TintMethod /Subtractive
/TintProc null
/NComponents 4 
/Components [ 0 0 0 1 ] 
>>
/CSD add_res
1 /0 /CSD get_res sepcs
1 sep
@
653.758 212.71 mo
668.068 217.48 li
653.758 222.25 li
653.758 212.71 li
cp
ef
%ADOBeginSubsetFont: WGJAAA+Calibri Initial
ct_T42Dict begin
-0.5 -0.313 1.238 1.023
 256 array 0 1 255 {1 index exch /.notdef put} for  /WGJAAA+Calibri
Type42DictBegin
[<00010000000c000c000c000c4f532f3299c232ed000000cc000000606376
7420b970d8350000012c000005bc6670676d7ede0337000006e800000d2b
676c79665f1872750000f3580000a90a68656164f69a8519000014140000
0036686865610dad15480000144c00000024686d7478925e3e6500001470
000056666c6f6361e312b9b900006ad80000325a6d6178702c0f262c0000
9d34000000206e616d6588c0c43500009d54000031157072657013672219
0000ce6c000024eb676469720000000000000000000000000003042b0190
00050008059905330000011e05990533000003d0008602000800020f0502
020204030204e0002affc000247b00000009000000004d53202000400000
fb040600fe0001c4079e0226200001ff0000000003b7050e000000200014
0000079e0000fe930000000000000000000000000050006a007300800080
0086008d009300bf00db006200830093009900a000a600a900b000c100c9
00d700000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000fe79056d000c03b700060013
0000fffaffedfea6ffedfeb8050e000600130000fffaffedfe93050e0013
0420000600130000fffaffedff10ffee050e00130420000600130000fffa
ffeefe93ff10feb80612000a050e0006000d02d2fffafff301fdfffa023f
0006000dff36fffafff302870006000f0000fffafff1079efeaffea70000
0000000000000000000000500051005a005b005c005d0060006100620064
00680069006a006b006c006d006e00680069006e00600067006e00660068
005f00610063006400660068006a006b006c006d006e006f0070006f0072
0074007500760076007000720073007400750076006f0070007100720073
00750077007700780079007a007b007c007d007b007c007d00770079007a
007c0078007a007c007d0078007d007e007f008000810082007e007f0081
0082007e007f008000810082008300840085008600870088008900830084
008500860087008800890083008400850086008700880089008900860087
00880089008a008b008c008d008e008f008a008b008c008d008e008f008a
008b008c008d008e008f008d008a008b008c008d008e008f009000900091
0092009300940095009600980099009b009c009000910092009300940095
0096009700980099009a009e009f00a60090009100950098009f00900091
0096009700bc00c600b500ae00af00b6006800690063006a006f00700071
006f0070007100720066006c006d00700079007c007f0083008600870088
0089008a0074007500760077007a007b007c007d007e008200850086008a
0088008900830078007b00820083008600870088008900760079007a007c
007d007e0083008500880089008a0073007400750077007a007d00880089
008a008b008c008d008e00900094008b008c008d00910092009300940095
008c008d00910095008f009000910092009300940095008b008c008d008e
008f009000910092009300940095008b008c008d008e008f009000910092
00930096009700980099009c0096009700980099009a009b009c00960099
009a009c0096009700980099009a009b009c009700980099009a009b009c
009700980099009a009b009c0096009d00a000a1009d009e009f00a000a1
00a2009d009f00a000a1009f00a2009d009e009f00a000a100a2009d009e
00a000a1009d009e00a000a2009d00a300a400a500a600a700a300a400a6
00a700a300a400a500a600a700a600a300a700a800a900aa00ab00ac00ac
00a800a900aa00ab00ac00a800a900aa00ab00ac00a800aa00ab00ac00ae
00ad00ae00af00b000b100b200b300b400b500b600b700b800ad00ae00ad
00ae00af00b000b100b200b300b400b500b600b700b800ad00ae00af00b0
00b100b200b300b400b500b600b700b800b300ae00af00b000b200b500b6
00b700b800b900ba00bb00bc00be00c000c100c200c200b900ba00bb00bc
00bd00be00bf00c000c100c200c400ba00bb00be00bf00c000c200c300c4
00b900ba00bf00c000c200c600c700c900ca00cb00cc00cf00c500c700ce
00c500c700c800cf00d000d200d300d7010d00d000d100e900d000fd00d0
05e4000e0041000005ba009c009c005e005e000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000051a001500a0fff8ff77
fff803480066015401cc00ac00a200b4008c0101006e0000000000000000
0000011f000a04e2001400b4fff6035c00140028fdda0568fea2ffef405a
868574737271706f6e6d6c6b6a696867666564625f5e5d5c5b5a59585554
535251504f4e4d4c4b4a494847464544434241403f3e3d3c3b3a39383736
352f2e2d2c2826252423221f181411100f0d0b0a09080706050403020100
2c4523466020b02660b004262348482d2c452346236120b02661b0042623
48482d2c45234660b0206120b04660b004262348482d2c4523462361b020
6020b02661b02061b004262348482d2c45234660b0406120b06660b00426
2348482d2c4523462361b0406020b02661b04061b004262348482d2c0110
203c003c2d2c20452320b0cd442320b8015a51582320b08d44235920b0ed
51582320b04d44235920b0042651582320b00d44235921212d2c20204518
684420b001602045b04676688a4560442d2c01b10b0a432343650a2d2c00
b10a0b4323430b2d2c00b0282370b101283e01b0282370b10228453ab102
00080d2d2c2045b00325456164b050515845441b2121592d2c2045b00043
60442d2c01b00643b00743650a2d2c2069b04061b0008b20b12cc08a8cb8
100062602b0c642364615c58b00361592d2c8a03458a8a87b0112bb02923
44b0297ae4182d2c4565b02c234445b02b23442d2c4b525845441b212159
2d2c01b005251023208af500b0016023edec2d2c01b005251023208af500
b0016123edec2d2c01b0062510f500edec2d2c20b001600110203c003c2d
2c20b001610110203c003c2d2c00b00743b006430b2d2c21210c6423648b
b84000622d2c21b08051580c6423648bb82000621bb200402f2b59b00260
2d2c21b0c051580c6423648bb81555621bb200802f2b59b002602d2c0c64
23648bb84000626023212d2c4523456023456023456023766818b0806220
2d2cb00426b00426b00425b0042545234520b003266062636820b0032661
658a2344442d2c2045b0005458b040442045b04061441b2121592d2c45b1
302f4523456160b0016069442d2c4b5158b02f2370b01423421b2121592d
2c4b515820b0032545695358441b2121591b2121592d2c45b01443b00060
63b0016069442d2cb02f45442d2c452320458a60442d2c45234560442d2c
4b235158b90033ffe0b134201bb3330034005944442d2cb0164358b00326
458a586466b01f601b64b020606620581b21b04059b001615923586559b0
2923442310b029e01b2121212121592d2cb0164358b004254564b0206066
20581b21b04059b0016123586559b0292344b00425b00725082058021b03
59b0052510b004252046b0042523423cb0072510b006252046b00425b001
6023423c2058011b0059b0052510b00425b029e0b0072510b00625b029e0
b00425b00725082058021b0359b00425b003254348b00625b00325b00160
43481b2159212121212121212d2cb0164358b004254564b020606620581b
21b04059b0016123581b6559b0292344b00525b00825082058021b0359b0
042510b005252046b0042523423cb00425b0072508b0072510b006252046
b00425b0016023423c2058011b0059b0042510b00525b029e0b029204565
44b0072510b00625b029e0b00525b00825082058021b0359b00525b00325
4348b00425b0072508b00625b00325b0016043481b215921212121212121
2d2c02b00425202046b004252342b0052508b003254548212121212d2c02
b0032520b0042508b0022543482121212d2c452320451820b00050205823
652359236820b040505821b04059235865598a60442d2c4b53234b515a58
20458a60441b2121592d2c4b545820458a60441b2121592d2c4b53234b51
5a58381b2121592d2cb000214b5458381b2121592d2cb002435458b0462b
1b21212121592d2cb002435458b0472b1b212121592d2cb002435458b048
2b1b21212121592d2cb002435458b0492b1b212121592d2c2320b000508a
8a64b10003255458b0401bb10103255458b005438b59b04f2b5923b0622b
2321235865592d2cb108000c215460432d2c014623466023466123201020
468a61b8ff80628ab140408a704560683a2d2c208a2349648a2353583c1b
21592d2c4b52587d1b7a592d2cb012004b014b54422d2cb1020042b12301
8851b1400188535a58b910000020885458b202010243604259b124018851
58b920000040885458b2020202436042b12401885458b202200243604200
4b014b5258b2020802436042591bb940000080885458b202040243604259
b94000008063b80100885458b202080243604259b94000010063b8020088
5458b202100243604259b12601885158b94000020063b80400885458b202
400243604259b94000040063b80800885458b202800243604259b1280188
5158b94000080063b81000885458ba000201000002436042595959595959
59b10002435458400a0540084009400c020d021bb10102435458b2054008
ba010000090100b30c010d011bb18002435258b2054008b80180b109401b
b901000002435258b2054008ba0180000901401bb901800002435258b205
4008b80200b109401bb2054008ba010000090100595959b9400000808855
b94000020063b8040088555a58b30c000d011bb30c000d01595959424242
42422d2c451868234b51582320452064b04050587c59688a6059442d2cb0
0016b00225b0022501b001233e00b002233eb10102060cb00a236542b00b
234201b001233f00b002233fb10102060cb006236542b0072342b0011601
2d2c20b82000628a6023622d2cb0072558001b0159b0042510b00325b002
2520b8ffff545821cd1bed5921b006255cb006255a58b0092b5920b00525
4ab0042547b004254760b0062547b0806361b00225b0005558b00325b007
25496359b0082558001b0159b00425b0062549b009255cb009255a58b009
2b59b0072546b0806361b0032520b0005558631b2159612320b0005558b0
80631b21b08059b0592bb006255c586959b00425202010b00048233ab006
2658001b0159b0052658b003252f598a12233221212d2cb00625b00a2587
b00625b009254ab0005358b00625b00a251bb00925b0072559b00225b002
25070cb005256323b00625636020b94000040063535821b00426b00426b0
0a1bb94000040063655158b0042665b0042665b00a1bb00426b00426b000
b00325b003250b0d0ab0092eb00725b007250b0d0ab00b2eb00525b00525
07595920b0005558b00525b0052587b00725b007250bb0092510b00b25b0
092620b8ffff545821cd1bed59b00525b0052507b00825b00b254923b006
25b0062587b00a2510b00b25c15920b00051b800522378b00161b00225b0
0725b0072507b00a25b00d254961b08062b00525b005250bb00a252338b0
0625b0062587b00825b008250bb00a2510b00b25c4b00625b0062507b009
25b00c2549b0032554b8ffa723792121212121212121212121212d2c23b0
005458b9400000001bb900004000598ab0005458b9400000001bb9000040
0059b05b2b2d2c08b0005458b9400000001bb900004000590db05b2b2d2c
8a8a080d8ab0005458b9400000001bb90000400059b05b2b2d2cb00426b0
0426080db00426b00426080db05b2b2d2cb0022563b0206066b00225b820
00626023622d2c204569442d2c234ab1024e2b2d2c234ab1014e2b2d2c23
8a4a234564b0022564b002256164b00343525821206459b1024e2b23b000
505865592d2c238a4a234564b0022564b002256164b00343525821206459
b1014e2b23b000505865592d2c20b003254ab1024e2b8a103b2d2c20b003
254ab1014e2b8a103b2d2cb00325b003258ab0672b8a103b2d2cb00325b0
03258ab0682b8a103b2d2cb0032546b003254660b004252eb00425b00425
b0042620b000505821b06a1bb06c592bb0032546b00325466061b0806220
8a2010233a232010233a2d2cb0032547b003254760b0052547b0806361b0
0225b00625496323b005254ab080632058621b2159b0042646608a468a46
60b02063612d2cb00426b00425b00425b00426b06e2b208a2010233a2320
10233a2d2c2320b001545821b00225b1024e2bb0805020605920606020b0
01515821211b20b005515821206661b0402361b100032550b00325b00325
505a5820b00325618a535821b000591b21591bb00754582066616523211b
2121b000595959b1024e2b2d2cb00225b004254ab0005358b0001b8a8a23
8ab00159b004254620666120b00526b0062649b00526b00526b0702b2361
65b02060206661b02061652d2cb0022546208a20b000505821b1024e2b1b
452321596165b00225103b2d2cb0042620b802006220b80200638a236120
b05d602bb00525118a128a20398a58ba005d10000004266356602b232120
10204620b1024e2b23611b2321208a201049b1024e2b593b2d2cba005d10
000009256356602bb00525b00525b00526b06d2bb15d0725602bb00525b0
0525b00525b00525b06f2bba005d10000008266356602b20b0005258b050
2bb00525b00525b00725b00725b00525b0712bb0021738b00052b00225b0
01525a58b00425b0062549b00325b00525496020b0405258211bb0005258
20b0025458b00425b00425b00725b0072549b00217381bb00425b00425b0
0425b0062549b0021738595959595921212121212d2cb12801885158b940
00040063b8080088545c1bb001592d2cb12801885158b94000040063b808
0088545c1bb001592d000001000000063333b2fc09aa5f0f3cf500190800
00000000bbeb7ccc00000000d5968a66fbfafd8009ec0836000000090002
000000000000000100000600fe0001c40aa0fbfafaa009ec000100000000
000000000000000000001207040e0000000000000000000001cf00000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000004ec00ac0000000000000000
0000000003e800ac00000000000000000000000000000000000000000000
000000000000000000000000000003ad00ac000000000000000000000000
0000000000000000000000000000000000000000020400ac000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000006d700ac000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
042200ac0000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000003f40010
000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000003cb006d00000000
00000000000000000000000000000000046500a100000000000000000000
0000038000a1000000000000000000000000000000000000000000000000
000000000000000000000000035000a10000000000000000000000000000
00000000000000000000000000000000000001ec00a10000000000000000
000000000000000000000000000000000000000001ec0011000000000000
0000000000000000000003c900a10000000002e000a10000000000000000
000000000000000000000000060600a1049100a100000000000000000000
0000000000000000000004aa006600000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000003c5
00a1000000000000000003ed00a1000000000000000000000000034f0049
00000000000000000000000000000000000000000359001c000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000038300100000000000000000
00000000000000000000000000000000000000000000000003d5005c0000
000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000362005a000000000000
00000000000000000000000000000000000006dd005a0601005a00000000
0434006000000000000000000000000003fb005d00000000000000000000
000000000000000000000000000000000000000000000000000002710025
000000000000000004ab00250000000000000000043c0025000000000000
000000000000000000000000000000000000000000000000000000000000
067600250000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000609002508430025
043c00250000000000000000000000000676002504ed0025000000000000
000007280025000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000001d6
008500000000000000000000000000000000000000000000000000000000
0000000001d60099000000000000000000000000000000000000000003a3
0099000000000000000001d6009900000000000000000000000000000000
000000000000000004340099000000000000000000000000000000000000
0000000000000438005a0000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
00000000000002ca00990000000000000000000000000321005100000000
0000000000000000000000000000000005ae005100000000000000000000
000002ae002100000000000000000000000004e600210475002100000000
000000000000000000000000000000000000000000000000000000000475
002105130021074b002106d9002100000000000000000000000000000000
0000000000000000000000000000000006d9002100000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000039f0022000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000002ac004400000000024e
004402e5004802b8004701c1002400000000000000000163006100000000
0297006c015e006c0000000002e6006c02e60045000000000000000001f6
006c0230004201e30023000000000000000000000000000000000286001f
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000001d6000001ce000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000029b010a000000000000
000000000000000000000000000000000000026000ed0000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000284005602840075000000000000000000000000000000000000
000000000000000000000000000002840056028400750000000000000000
000000000000000000000000000000000000000000000000000000000335
008b00000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000494005f02cb002303ec0062
03ec005104550022000000000436007e03b200350436006300000000040e
0048040e00ae040e0072040e0067040e002000000000040e006b040e0063
040e00520000000004430067028d00190381005c0373005903ac00260000
000003b7006e0349002f03b5004b00000000039f0050039f008d039f0065
039f0062039f003a00000000039f0061039f005e039f0051000000000494
005f02cb002303ec006203ec005104280022000000000436007e03b20035
0436006300000000040e0048040e00ae040e0072040e0067040e00300000
0000040e006b040e0063040e0052000000000321004801f8002302b0004b
02ad004102db00250000000002df005b0291003202e1004b000000000000
00000000000002d0005700000000000000000321004801f8002302b0004b
02ad004102db00250000000002df005b0291003202e1004b000000000000
00000000000002d000570000000000000000029d003801f500310252003c
0249002d024a00140000000002510030023800220257002500000000029d
003801f500310252003c0249002d024a0014000000000251003002380022
025700250000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000003fc005e0000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000004c10066000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000034b
008e02a8008e028c008e000000000000000001a6008e0000000000000000
00000000046d008e000000000000000002d8008e00000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000034b008e
02a8008e00000000000000000000000001a6008e00000000000000000000
0000046d008e0000000000000000000000000000000002d8008e00000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000199000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
00000000027000120270003702700025027000260270001e000000000270
00190270001b027000140000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000266003e0266005e0266004f0266004f
0266002e0000000002660044026600470266004000000000000000000000
00000000000000000000000000000000ffa8000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000>
<000000bf00bf00bf00bf00bf00bf00bf00bf00bf00bf00bf00bf00bf00bf
00bf00bf00bf00bf00bf00bf00bf00bf00bf00bf013c013c013c013c01d4
01d401d401d401d401d401d401d401d401d4025002500250025002500250
02500250025002a302a302a302a302a302a302a302a302a302a302a302a3
02a302a302a302a302a302a302a302a302a3036503650365036503650365
036503650365036503650365036503650365036503650365036503f103f1
03f103f103f103f103f103f103f103f103f103f103f103f103f103f103f1
03f103f103f103f103f103f103f103f103f103f103f103f103f103f103f1
03f103f103f103f103f103f103f103f103f103f103f103f1046a046a046a
046a046a046a046a046a046a046a046a046a046a046a04e804e804e804e8
04e804e8053805380538053805a505a505a505a505a505a505a505a505a5
05a506030603060306030603060306030603060306380638063806380638
0638063806380643064306430643064306c606c607070707070707070707
0707078f080a080a080a080a080a080a0868086808680868086808680868
0868086808680868086808d008d008d0095d095d095d095d0a000a000a00
0a000a000a000a4f0a4f0a4f0a4f0a4f0a4f0a4f0a4f0a4f0a4f0a4f0a4f
0a4f0a4f0a4f0a4f0a4f0a4f0a4f0a4f0a4f0a4f0aad0aad0aad0aad0aad
0aad0aad0aad0aad0b7f0b7f0b7f0b7f0b7f0b7f0b7f0b7f0b7f0b7f0b7f
0b7f0b7f0b7f0c2a0c2a0c2a0c2a0c2a0c2a0c2a0d360e430e430ef20ef2
0ef20ef20fb10fb10fb10fb10fb10fb10fb10fb10fb10fb1104610461046
11081108110811b111b111b111b111b111b111b111b111b111b112aa12aa
12aa12aa12aa12aa12aa12aa12aa12aa12aa12aa12aa139314c415611561
156115611649171417141714183018301830183018301830183018301830
1830183018301830183018b618b618b618b618b618b618b618b618b618eb
18eb18eb18eb18eb18eb19941994199419df19df19df19df19df19df19df
1a821a821a821a821a821a821a821b211b211b211b211b211b211b211b21
1b211b211b211b211b211b211b211bab1bab1bab1bab1c921c921c921c92
1c921c921dc11dc11dc11dc11e531e531e531e531f1e1f2a1f2a1f2a1f2a
1f2a1f2a1f2a1f2a1f2a1fb6208b21a721b321b321b321b321b321b321b3
21b321b32297229722972297229722972297229722972297229722972297
229722972297229722972297230c230c230c230c230c230c230c230c230c
230c230c230c23a223a2240d24872508257c257c257c25ce25ce2647267c
267c26e3273a273a273a279d283528a428a428a428a428a4290929092909
290929092909290929092909290929092909290929092909290929092909
290929092909290929092909290929092909290929092909290929092909
290929092909290929092909290929092909290929092909290929092909
290929092909290929092909290929092909290929372965296529652965
296529652965296529652965296529652965296529652965296529652965
296529652965296529652965296529652965296529652965296529652965
296529652965296529652965296529652965296529652965296529652965
296529652965296529652965296529652965296529652965296529652965
296529652965296529652965296529652965296529652965296529652965
296529652965296529652965296529652965296529652965296529652965
296529652965296529652965296529652965296529652965296529652965
296529652965296529652965296529652965296529652965296529652965
296529652965296529652965296529652965296529652965296529652965
296529652965296529652965296529652965296529652965296529652965
296529652965296529652965296529652965296529652965296529652965
296529652965296529652965296529652965296529652965296529652965
296529652965296529652965296529652965296529652965296529652965
296529652965296529652965296529652965296529652965296529652965
296529652965296529652965296529652965296529652965296529652965
296529652965296529652965296529652965296529652965296529652965
296529652965296529652965296529652965296529652965296529652965
296529652965296529652965296529652965296529652965296529652965
296529652965296529652965296529652965296529652965296529652965
29652965296529b629b629b629b629b629b629b62a102a102a102a102a10
2a102a102a102a102a102a102a102a102a102a102a102a102a102a102a10
2a102a102a102a102a102a102a102a102a102a102a102a102a102a102a10
2a102a102a102a102a102a102a102a102a102a102a102a102a102a102a9f
2b302b302b302b302b302b302b302b302b302b382b402b402b402b402b40
2b402b402b402b402b402b922b922b922b922b922b922b922b922b922b92
2b922b922b922b922b922b922b922b922b922b922b922b922b922b922b92
2b922b922b922b922b922b922b922b922b922b922bf02c422cd22d8d2e03
2e032e962eec2f842f842fe2304f30d1318a31ff31ff32c33316344d344d
34ab34fb3585363836b136b137443797383c383c38973902390a39123988
39883a133a683b003b003b603bad3c403cf93d733d733d7b3dd13dd93dd9
3e9d3f674022413742114211421942c642ce42ce42d742e042e942f242fb
42fb4304430d4316431643164316431f431f431f437843c9443a44e04555
455545e0463346ca46ca46ca46ca471047104710476947b8482e48e04956
495649de4a304ac94ac94ad24adb4ae44aed4af64af64aff4b084b114b11
4b114b114b114b114b114b114b114b114b114b114b114b114b114b114b11
4b114b114b114b114b114b114b114b114b114b114b5c4b5c4b5c4b5c4b5c
4b5c4b5c4b5c4b5c4b5c4b5c4b5c4b5c4b5c4b5c4b5c4b5c4b5c4b5c4b5c
4b5c4b5c4b5c4b5c4b5c4b5c4b5c4b5c4b5c4b5c4b5c4b5c4b5c4b5c4b5c
4b5c4b5c4b5c4b5c4b5c4b5c4b5c4b5c4b5c4b5c4b5c4b5c4b5c4b5c4b5c
4b5c4b5c4b5c4b5c4b5c4b5c4b5c4b5c4b5c4b5c4b5c4b5c4b5c4b5c4b5c
4b5c4b5c4b5c4b5c4b5c4b5c4b5c4b5c4b5c4b5c4b5c4b5c4b5c4b5c4b5c
4b5c4b5c4b5c4b5c4b5c4b5c4b5c4b5c4b5c4b5c4b5c4b5c4b5c4b5c4b5c
4b5c4b5c4b5c4b5c4b5c4b5c4b5c4b5c4b5c4b5c4b5c4b5c4b5c4b5c4b5c
4b5c4b5c4b5c4b5c4b5c4b5c4b5c4b5c4b5c4b5c4b5c4b5c4b5c4b5c4b5c
4b5c4b5c4b5c4b5c4b5c4b5c4b5c4b5c4b5c4b5c4b5c4b5c4b5c4b5c4b5c
4b5c4b5c4b5c4b5c4b5c4b5c4b5c4b5c4b5c4b5c4b5c4b5c4b5c4b5c4b5c
4b5c4b5c4b5c4b5c4b5c4b5c4b5c4b5c4b5c4b5c4b5c4b5c4b5c4b5c4b5c
4b5c4b5c4b5c4b5c4b5c4b5c4b5c4b5c4b5c4b5c4b5c4b5c4b5c4b5c4b5c
4b5c4b5c4b5c4b5c4b5c4b5c4b5c4b5c4b5c4b5c4b5c4b5c4b5c4b5c4b5c
4ca94ca94ca94ca94ca94ca94ca94ca94ca94ca94ca94ca94ca94ca94ca9
4ca94ca94ca94ca94ca94cb14cb94d0b4d0b4d0b4d134d134d134d134d1b
4d1b4d1b4d234d234d234d234d234d234d234d234d234d234d234d234d23
4d234d234d234d234d234d234d234d234d234d234d234d234d234d234d23
4d234d234d234d234d234d234d234d234d234d234d234d234d234d234d23
4d234d234d234d234d234d234d234d234d234d234d234d234d234d234d23
4d234d234d234d234d234d234d234d234d234d234d234d234d234d234d23
4d234d234d234d234d234d234d234d234d234d234d234d234d234d234d23
4d234d234d234d234d234d234d234d234d234d234d234d234d234d234d23
4d234d234d234d234d234d234d234d234d234d234d234d234d234d234d23
4d234d234d234d234d234d234d234d234d234d234d234d234d234d234d23
4d234d234d234d234d234d234d234d234d234d234d234d234d234d234d23
4d234d234d234d234d234d234d234d234d234d234d234d234d234d234d23
4d234d234d234d234d234d234d234d234d234d234d234d234d234d234d23
4d234d234d234d234d234d234d234d234d234d234d234d234d234d234d23
4d234d234d234d234d234d234d234d234d234d234d234d234d234d234d23
4d234d234d234d234d234d234d234d234d234d234d234d234d234d234d23
4d234d234d234d234d234d234d234d234d234d234d234d234d234d234d23
4d234d234d234d234d234d234d234d234d234d234d234d234d234d234d23
4d234d234d234d234d234d234d234d234d234d234d234d234d234d234d23
4d234d234d234d234d234d234d234d234d234d234d234d234d234d234d23
4d234d234d234d234d234d234d234d234d234d234d234d234d234d234d23
4d234d234d234d234d234d234d234d234d234d234d234d234d234d234d23
4d234d234d234d234d234d234d234d234d234d234d234d234d234d234d23
4d234d234d234d234d234d234d234d234d234d234d234d234d234d234d23
4d234d234d234d234d234d234d234d234d234d234d234d234d234d234d23
4d234d234d234d234d234d234d234d234d234d234d234d234d234d234d23
4d234d234d234d234d234d234d234d234d234d234d234d234d234d234d23
4d234d234d234d234d234d234d234d234d234d234d234d234d234d234d23
4d234d234d234d234d234d234d234d234d234d234d234d234d234d234d23
4d234d234d234d234d234d234d234d234d234d234d234d234d234d234d23
4d234d234d234d234d234d234d234d234d234d234d234d234d234d234d23
4d234d234d234d234d234d234d234d234d234d234d234d234d234d234d23
4d234d234d234d234d234d234d234d234d234d234d234d234d234d234d23
4d234d234d234d234d234d234d234d234d234d234d234d234d234d234d23
4d234d234d234d234d234d234d234d234d234d234d234d234d234d234d23
4d234d234d234d234d234d234d234d234d234d234d234d234d234d234d23
4d234d234d234d234d234d234d234d234d234d234d234d234d234d234d23
4d234d234d234d234d234d234d234d234d234d234d234d234d234d234d23
4d234d234d234d234d234d234d234d234d234d234d234d234d234d234d23
4d234d234d234d234d234d234d234d234d234d234d234d234d234d234d23
4d234d234d234d234d234d234d234d234d234d234d234d234d234d234d23
4d234d234d234d234d234d234d234d234d234d234d234d234d234d234d23
4d234d234d234d234d234d234d234d234d234d234d234d234d234d234d23
4d234d234d234d234d234d234d234d234d234d234d234d234d234d234d23
4d234d234d234d234d234d234d234d234d234d234d234d234d234d234d23
4d234d234d234d234d234d234d234d234d234d234d234d234d234d234d23
4d234d234d234d234d234d234d234d234d234d234d234d234d234d234d23
4d234d234d234d234d234d234d234d234d234d234d234d234d234d234d23
4d234d234d234d234d234d234d234d234d234d234d234d234d234d234d23
4d234d234d234d234d234d234d234d234d234d234d234d234d234d234d23
4d234d234d234d234d234d234d234d234d234d234d234d234d234d234d23
4d234d234d234d234d234d234d234d234d234d234d234d234d234d234d23
4d234d234d234d234d234d234d234d234d234d234d234d234d234d234d23
4d234d234d234d234d234d234d234d234d234d234d234d234d234d234d23
4d234d234d234d234d234d234d234d234d234d234d234d234d234d234d23
4d234d234d234d234d234d234d234d234d234d234d234d234d234d234d23
4d234d234d234d234d234d234d234d234d234d234d234d234d234d234d23
4d234d234d234d234d234d234d234d234d234d234d234d234d234d234d23
4d234d234d234d234d234d234d234d234d234d234d234d234d234d234d23
4d234d234d234d234d234d234d234d234d234d234d234d234d234d234d23
4d234d234d234d234d234d234d234d234d234d234d234d234d234d234d23
4d234d234d234d234d234d234d234d234d234d234d234d234d744de64de6
4de64de64e1e4e1e4e1e4e1e4ea34ea34ea34ea34ea34f094f094f094f09
4f094f094f094f094f094f094f094f094f094f094f094f094f094f094f09
4f094f094f094f094f094f094f094f094f094f094f094f094f094f094f09
4f094f094f094f094f094f094f094f094f094f094f094f094f094f094f09
4f094f094f094f094f094f094f094f094f094f094f094f094f094f094f09
4f094f094f094f094f094f094f094f094f094f094f094f094f094f094f09
4f094f094f094f094f094f094f094f094f094f094f094f094f094f094f09
4f094f094f094f094f094f094f094f094f094f094f094f094f094f094f09
4f094f094f094f094f094f094f094f094f094f094f094f094f094f094f09
4f094f094f094f094f094f094f094f094f094f094f094f094f094f094f09
4f094f094f094f094f094f094f094f094f094f094f094f094f094f094f09
4f094f094f094f094f094f094f094f094f094f094f094f094f094f094f09
4f094f094f094f094f094f094f094f094f094f094f094f094f094f094f09
4f094f094f094f094f094f094f094f094f094f094f094f094f094f094f09
4f094f094f094f094f094f094f094f094f094f094f094f094f094f094f09
4f094f094f094f094f094f094f094f094f094f094f094f094f094f094f09
4f094f094f094f094f094f094f094f094f094f094f094f094f094f094f09
4f094f094f094f094f094f094f094f094f094f094f094f094f094f094f09
4f094f094f094f094f094f094f094f094f094f094f094f094f094f094f09
4f094f094f094f094f094f094f094f094f094f094f094f094f094f094f09
4f094f094f094f094f094f094f094f094f094f094f094f094f094f094f09
4f094f094f094f094f094f094f094f094f094f094f094f094f094f094f09
4f094f094f094f094f094f094f094f094f094f094f094f094f094f094f09
4f094f094f094f094f094f094f094f094f094f094f094f094f094f094f09
4f094f094f094f094f094f094f094f094f094f094f094f094f094f094f09
4f094f094f094f094f094f094f094f094f094f094f094f094f094f094f09
4f094f094f094f094f094f094f094f094f094f094f094f094f094f094f09
4f094f094f094f094f094f094f094f094f094f094f094f094f094f094f09
4f094f094f094f094f094f094f094f094f094f094f094f094f094f094f09
4f094f094f094f094f094f094f094f094f094f094f094f094f094f094f09
4f094f094f094f094f094f094f094f094f094f094f094f094f094f094f09
4f094f094f094f094f094f094f094f094f094f094f094f094f094f094f09
4f094f094f094f094f094f094f094f094f094f094f094f094f094f094f09
4f094f094f094f094f094f094f094f094f094f094f094f094f094f094f09
4f094f094f094f094f094f094f094f094f094f094f094f094f094f094f09
4f094f094f094f094f094f094f094f094f094f094f094f094f094f094f09
4f094f094f094f094f094f094f094f094f094f094f094f094f094f094f09
4f094f094f094f094f094f094f094f094f094f094f094f094f094f094f09
4f094f094f094f094f094f094f094f094f094f094f094f094f094f094f09
4f094f094f094f094f094f094f094f094f094f094f094f094f094f094f09
4f094f094f094f094f094f094f094f094f094f094f094f094f094f094f09
4f094f094f094f094f094f094f094f094f094f094f094f094f094f094f09
4f094f094f094f094f094f094f094f094f094f094f094f094f094f094f09
4f094f094f094f094f094f094f094f094f094f094f094f094f094f094f09
4f094f094f094f094f094f094f094f094f094f094f094f094f094f094f09
4f094f094f094f094f094f094f094f094f094f094f094f094f094f094f09
4f094f094f094f094f094f094f094f094f094f094f094f094f094f094f09
4f094f094f094f094f094f094f094f094f094f094f094f094f094f094f09
4f094f094f094f094f094f094f094f094f094f094f094f094f094f094f09
4f094f094f094f094f094f094f094f094f094f094f094f094f094f094f09
4f094f094f094f094f094f094f094f094f094f094f094f094f094f094f09
4f094f094f094f094f094f094f094f094f094f094f094f094f094f094f09
4f094f094f094f094f094f094f094f094f094f094f094f094f094f094f09
4f094f094f094f094f094f094f094f094f094f094f094f094f094f094f09
4f094f094f094f094f094f094f094f094f094f094f094f094f094f094f09
4f094f094f094f094f094f094f094f094f094f094f094f094f094f094f09
4f094f094f094f094f094f094f094f094f094f094f094f094f094f094f09
4f094f094f094f094f094f094f094f094f094f094f094f094f094f094f09
4f094f094f094f094f094f094f094f094f094f094f094f094f094f094f09
4f094f094f094f094f094f094f094f094f094f094f094f094f094f094f09
4f094f094f094f094f094f094f094f094f094f094f094f094f094f094f09
4f094f094f094f094f094f094f094f094f094f094f094f094f094f094f09
4f094f094f094f094f094f094f094f094f094f094f094f094f094f094f09
4f094f094f094f094f094f094f094f094f094f094f094f094f094f094f09
4f094f094f094f094f094f094f094f094f094f094f094f094f094f094f09
4f094f094f094f094f094f094f094f094f094f094f094f094f094f094f09
4f094f094f094f094f094f094f094f094f094f094f094f094f094f094f09
4f094f094f094f094f094f094f094f094f094f094f094f094f094f094f09
4f094f094f094f094f094f094f094f094f094f094f094f094f094f094f09
4f094f094f094f094f094f094f094f094f094f094f094f094f094f094f09
4f094f094f094f094f094f094f094f094f094f094f094f094f094f094f09
4f094f094f094f094f094f094f094f094f094f094f094f094f094f094f09
4f094f094f094f094f094f094f094f094f094f094f094f094f094f094f09
4f094f094f094f094f094f094f094f094f094f094f094f094f094f094f09
4f094f094f094f094f094f094f094f094f094f094f094f094f094f094f09
4f094f094f094f094f094f094f094f094f094f094f094f094f094f094f09
4f094f094f174f174f174f174f174f174f174f174f174f174f174f174f17
4f174f174f174f174f174f174f174f174f174f174f174f174f174f174f17
4f174f174f174f174f174f174f174f174f174f174f174f174f174f174f17
4f174f174f174f174f174f174f174f174f174f174f174f174f174f174f17
4f174f174f174f174f174f174f174f174f174f174f174f174f174f174f17
4f174f174f174f174f174f174f174f174f174f174f174f174f174f174f17
4f174f174f174f174f174f174f174f174f174f174f174f174f174f174f17
4f174f174f174f174f174f174f174f174f174f174f174f174f174f174f17
4f174f174f174f174f174f174f174f174f174f174f174f174f174f174f17
4f174f174f174f174f174f174f174f174f174f174f174f174f174f174f17
4f174f174f174f174f174f174f174f174f174f174f174f174f174f174f17
4f174f174f174f174f174f174f174f174f174f174f174f174f174f174f17
4f174f174f174f174f174f174f174f174f174f174f174f174f174f174f17
4f174f174f174f174f174f174f174f174f174f174f174f174f174f174f17
4f174f174f174f174f174f174f174f174f174f174f174f174f174f174f17
4f174f174f174f174f174f174f174f174f174f174f174f174f174f174f17
4f174f174f174f174f174f174f174f174f174f174f174f174f174f174f17
4f174f174f174f174f174f174f174f174f174f174f174f174f174f174f17
4f174f174f174f174f174f174f174f174f174f174f174f174f174f174f17
4f174f174f174f174f174f174f174f174f174f174f174f174f174f174f17
4f174f174f174f174f174f174f174f174f174f174f174f174f174f174f17
4f174f174f174f174f174f174f174f174f174f174f174f174f174f174f17
4f174f174f174f174f174f174f174f174f174f174f174f174f174f174f17
4f174f174f174f174f174f174f174f174f174f174f174f174f174f174f17
4f174f174f174f174f174f174f174f174f174f174f174f174f174f174f17
4f174f174f174f174f174f174f174f174f174f174f174f174f174f174f17
4f174f174f174f174f174f174f174f174f174f174f174f174f174f174f17
4f174f174f174f174f174f174f174f174f174f174f174f174f174f174f17
4f174f174f174f174f174f174f174f174f174f174f174f174f174f174f17
4f174f174f174f174f174f174f174f174f174f174f174f174f174f174f17
4f174f174f174f174f174f174f174f174f174f174f174f174f174f174f17
4f174f174f174f174f174f174f174f174f174f174f174f174f174f174f17
4f174f174f174f174f174f174f174f174f174f174f174f174f174f174f17
4f174f174f174f174f174f174f174f174f174f174f174f174f174f174f17
4f174f174f174f174f174f174f174f174f174f174f174f174f174f174f17
4f174f174f174f174f174f174f174f174f174f174f174f174f174f174f17
4f174f174f174f174f174f174f174f174f174f174f174f174f174f174f17
4f174f174f174f174f174f174f174f174f174f174f174f174f174f174f17
4f174f174f174f174f174f174f174f174f174f174f174f174f174f174f17
4f174f174f174f174f174f174f174f174f174f174f174f174f174f174f17
4f174f174f174f174f174f174f174f174f174f174f174f174f174f174f17
4f174f174f174f174f174f174f174f174f174f174f174f174f174f174f17
4f174f174f174f174f174f174f174f174f174f174f174f174f174f174f17
4f174f174f174f174f174f174f174f174f174f174f174f174f174f174f17
4f174f174f174f174f174f174f174f174f174f174f174f174f174f174f17
4f174f174f174f174f174f174f174f174f174f174f174f174f174f174f17
4f174f174f174f174f174f174f174f174f174f174f174f174f174f174f17
4f174f174f174f174f174f174f174f174f174f174f174f174f174f174f17
4f174f174f174f174f174f174f174f174f174f174f174f174f174f174f17
4f174f174f174f174f174f174f174f174f174f174f174f174f174f174f17
4f174f174f174f174f174f174f174f174f174f174f174f174f174f174f17
4f174f174f174f174f174f174f174f174f174f174f174f174f174f174f17
4f174f174f174f174f174f174f174f174f174f174f174f174f174f174f17
4f174f174f174f174f174f174f174f174f174f174f174f174f174f174f17
4f174f174f174f174f174f174f174f174f174f174f174f174f174f174f17
4f174f174f174f174f174f174f174f174f174f174f174f174f174f174f17
4f174f174f174f174f174f174f174f174f174f174f174f174f174f174f17
4f174f174f174f174f174f174f174f174f174f174f174f174f174f174f17
4f174f174f174f174f174f174f174f174f174f174f174f174f174f174f17
4f174f174f174f174f174f174f174f174f174f174f174f174f174f174f17
4f174f174f174f174f174f174f174f174f174f174f174f174f174f174f17
4f174f174f174f174f174f174f174f174f174f174f174f174f174f174f17
4f174f174f174f174f174f174f174f174f174f174f174f174f174f174f17
4f174f174f174f174f174f174f174f174f174f174f174f174f174f174f17
4f174f174f174f174f174f174f174f174f174f174f174f174f174f174f17
4f174f174f174f174f174f174f174f174f174f174f174f174f174f174f17
4f174f174f174f174f174f174f174f174f174f174f174f174f174f174f17
4f174f174f174f174f174f174f174f174f174f174f174f174f174f174f17
4f174f174f174f174f174f174f174f174f174f174f174f174f174f174f17
4f174f174f174f174f174f174f174f174f174f174f174f174f174f174f17
4f174f174f174f174f174f174f174f174f174f174f174f174f174f174f17
4f174f174f174f174f174f174f174f174f174f174f174f174f174f174f17
4f174f174f174f174f174f174f174f174f174f174f174f174f174f174f17
4f174f174f174f174f174f174f174f174f174f174f174f174f174f174f17
4f174f174f174f174f174f174f174f174f174f174f174f174f174f174f17
4f174f174f174f174f174f174f174f174f174f174f174f174f174f174f17
4f174f174f174f174f174f174f174f174f174f174f174f174f174f174f17
4f174f174f174f174f174f174f174f174f174f174f174f174f174f174f17
4f174f174f174f174f174f174f174f174f174f174f174f174f174f174f17
4f174f174f174f174f174f174f174f174f174f174f174f174f174f174f5f
4f9a4fed506d50b350b3511e515351b751b751b751b751b751b751b751b7
51b751b751b751b751b751b751b751b751b75201523e52935307534d534d
53b653e85449544954495449546854685468548554855485548554855485
548554855485548554855485548554855485548554855485548554855485
548554855485548554855485548554855485548554855485548554855485
548554855485548554855485548554855485548554855485548554855485
548554855485548554855485548554855485548554855485548554855485
548554855485548554855485548554855485548554855485548554855485
548554855485548554855485548554855485548554855485548554855485
548554855485548554855485548554855485548554855485548554855485
548554855485548554855485548554855485548554855485548554855485
548554855485548554855485548554855485548554855485548554855485
548554855485548554855485548554855485548554855485548554855485
548554855485548554855485548554855485548554855485548554855485
548554855485548554855485548554855485548554855485548554855485
548554855485548554855485548554855485548554855485548554855485
548554855485548554855485548554855485548554855485548554855485
548554855485548554855485548554855485548554855485548554855485
548554855485548554855485548554855485548554855485548554855485
548554855485548554855485548554855485548554855485548554855485
548554855485548554855485548554855485548554855485548554855485
548554855485548554855485548554855485548554855485548554855485
548554855485548554855485548554855485548554855485548554855485
548554855485548554855485548554855485548554855485548554855485
548554855485548554855485548554855485548554855485548554855485
548554855485548554855485548554855485548554855485548554855485
548554855485548554855485548554855485548554855485548554855485
548554855485548554855485548554855485548554855485548554855485
548554855485548554855485548554855485548554855485548554855485
548554855485548554855485548554855485548554855485548554855485
548554855485548554855485548554855485548554855485548554855485
548554855485548554855485548554855485548554855485548554855485
548554855485548554855485548554855485548554855485548554855485
548554855485548554855485548554855485548554855485548554855485
548554855485548554855485548554855485548554855485548554855485
548554855485548554855485548554855485548554855485548554855485
548554855485548554855485548554855485548554855485548554855485
548554855485548554855485548554855485548554855485548554855485
548554855485548554855485548554855485548554855485548554855485
548554855485548554855485548554855485548554855485548554855485
548554855485548554855485548554855485548554855485548554855485
548554855485548554855485548554855485548554855485548554855485
548554855485548554855485548554855485548554855485548554855485
548554855485548554855485548554855485548554855485548554855485
548554855485548554855485548554855485548554855485548554855485
548554855485548554855485548554855485548554855485548554855485
548554855485548554855485548554855485548554855485548554855485
548554855485548554855485548554855485548554855485548554855485
548554855485548554855485548554855485548554855485548554855485
548554855485548554855485548554855485548554855485548554855485
548554855485548554855485548554855485548554855485548554855485
548554855485548554855485548554855485548554855485548554855485
548554855485548554855485548554855485548554855485548554855485
548554855485548554855485548554855485548554855485548554855485
548554855485548554855485548554855485548554855485548554855485
548554855485548554855485548554855485548554855485548554855485
548554855485548554855485548554855485548554855485548554855485
548554855485548554855485548554855485548554855485548554855485
548554855485548554855485548554855485548554855485548554855485
548554855485548554855485548554855485548554855485548554855485
548554855485548554855485548554855485548554855485548554855485
548554855485548554855485548554855485548554855485548554855485
548554855485548554855485548554855485548554855485548554855485
548554855485548554855485548554855485548554855485548554855485
548554855485548554855485548554855485548554855485548554855485
548554855485548554855485548554855485548554855485548554855485
548554855485548554855485548554855485548554855485548554855485
548554855485548554855485548554855485548554855485548554855485
548554855485548554855485548554855485548554855485548554855485
548554855485548554855485548554855485548554855485548554855485
548554855485548554855485548554855485548554855485548554855485
548554855485548554855485548554855485548554855485548554855485
548554855485548554855485548554855485548554855485548554855485
548554855485548554855485548554855485548554855485548554855485
548554855485548554855485548554855485548554855485548554855485
548554855485548554855485548554855485548554855485548554855485
548554855485548554855485548554855485548554855485548554855485
548554855485548554855485548554855485548554855485548554855485
548554855485548554855485548554855485548554855485548554855485
548554855485548554855485548554855485548554855485548554855485
548554855485548554855485548554855485548554855485548554855485
548554855485548554855485548554855485548554855485548554855485
548554855485548554855485548554855485548554855485548554855485
548554855485548554855485548554855485548554855485548554855485
548554855485548554855485548554855485548554855485548554855485
548554855485548554855485548554855485548554855485548554855485
548554855485548554855485548554855485548554855485548554855485
548554855485548554855485548554855485548554855485548554855485
548554855485548554855485548554855485548554855485548554855485
548554855485548554855485548554855485548554855485548554855485
548554855485548554855485548554855485548554855485548554855485
548554855485548554855485548554855485548554855485548554855485
548554855485548554855485548554855485548554855485548554855485
548554855485548554855485548554855485548554855485548554855485
548554855485548554855485548554855485548554855485548554855485
548554855485548554855485548554855485548554855485548554855485
548554855485548554855485548554855485548554855485548554855485
548554855485548554855485548554855485548554855485548554855485
548554855485548554855485548554855485548554855485548554855485
548554855485548554855485548554855485548554855485548554855485
548554855485548554855485548554855485548554855485548554855485
548554855485548554855485548554855485548554855485548554855485
548554855485548554855485548554855485548554855485548554855485
548554855485548554855485548554855485548554855485548554855485
548554855485548554855485548554855485548554855485548554855485
548554855485548554855485548554855485548554855485548554855485
548554855485548554855485548554855485548554855485548554855485
548554855485548554855485548554855485548554855485548554855485
548554855485548554855485548554855485548554855485548554855485
548554855485548554855485548554855485548554855485548554855485
548554855485548554855485548554855485548554855485548554855485
548554855485548554855485548554855485548554855485548554855485
548554855485548554855485548554855485548554855485548554855485
548554855485548554855485548554855485548554855485548554855485
548554855485548554855485548554855485548554855485548554855485
548554855485548554855485548554855485548554855485548554855485
548554855485548554855485548554855485548554855485548554855485
548554855485548554855485548554855485548554855485548554855485
548554855485548554855485548554855485548554855485548554855485
548554855485548554855485548554855485548554855485548554855485
548554855485548554855485548554855485548554855485548554855485
548554855485548554855485548554855485548554855485548554855485
548554855485548554855485548554855485548554855485548554855485
548554855485548554855485548554855485548554855485548554855485
5485548554855485548554855485548554855485000000010000192c0097
00100078000300020010002f00870000123624eb000200010000002d0222
0000000300000000021000000000000300000001000e0210000000030000
0002000e04b00000000300000003002404be0000000300000004000e0210
0000000300000005001804e20000000300000006000e0210000000030000
0007007604fa0000000300000008002a057e000000030000000900200782
000000030000000a02a00210000000030000000b005607a2000000030000
000c002a07f8000000030000000d0e060822000000030000000e006c1628
00010000000000000108169400010000000000010007179c000100000000
0002000718ec0001000000000003001818f300010000000000040007179c
0001000000000005000c190b00010000000000060007179c000100000000
0007003b191700010000000000080015169b000100000000000900101952
000100000000000a0150179c000100000000000b002b1962000100000000
000c0015198d000100000000000d070319a2000100000000000e003620a5
0003000104090000021205700003000104090001000e0210000300010409
0002000e04b00003000104090003002404be0003000104090004000e0210
0003000104090005001804e20003000104090006000e0210000300010409
0007007604fa0003000104090008002a057e000300010409000900200782
000300010409000a02a00210000300010409000b005607a2000300010409
000c002a07f8000300010409000d0e1820db000300010409000e006c1628
00a9002000320030003100370020004d006900630072006f0073006f0066
007400200043006f00720070006f0072006100740069006f006e002e0020
0041006c006c002000520069006700680074007300200052006500730065
0072007600650064002e000d0048006500620072006500770020004f0070
0065006e00540079007000650020004c00610079006f007500740020006c
006f00670069006300200063006f00700079007200690067006800740020
00a9002000320030003000330020002600200032003000300037002c0020
00520061006c00700068002000480061006e0063006f0063006b00200026
0020004a006f0068006e00200048007500640073006f006e002e00200054
0068006900730020006c00610079006f007500740020006c006f00670069
006300200066006f00720020004200690062006c006900630061006c0020
0048006500620072006500770020006900730020006f00700065006e0020
0073006f007500720063006500200073006f006600740077006100720065
00200075006e00640065007200200074006800650020004d004900540020
004c006900630065006e00730065003b002000730065006500200065006d
0062006500640064006500640020006c006900630065006e007300650020
006400650073006300720069007000740069006f006e00200066006f0072
002000640065007400610069006c0073002e00430061006c006900620072
0069002000690073002000610020006d006f006400650072006e00200073
0061006e0073002000730065007200690066002000660061006d0069006c
00790020007700690074006800200073007500620074006c006500200072
006f0075006e00640069006e006700730020006f006e0020007300740065
006d007300200061006e006400200063006f0072006e006500720073002e
002000490074002000660065006100740075007200650073002000720065
0061006c0020006900740061006c006900630073002c00200073006d0061
006c006c00200063006100700073002c00200061006e00640020006d0075
006c007400690070006c00650020006e0075006d006500720061006c0020
0073006500740073002e0020004900740073002000700072006f0070006f
007200740069006f006e007300200061006c006c006f0077002000680069
0067006800200069006d007000610063007400200069006e002000740069
006700680074006c007900200073006500740020006c0069006e00650073
0020006f0066002000620069006700200061006e006400200073006d0061
006c006c0020007400650078007400200061006c0069006b0065002e0020
00430061006c0069006200720069002700730020006d0061006e00790020
00630075007200760065007300200061006e006400200074006800650020
006e00650077002000720061007300740065007200690073006500720020
007400650061006d00200075007000200069006e00200062006900670067
00650072002000730069007a0065007300200074006f0020007200650076
00650061006c002000610020007700610072006d00200061006e00640020
0073006f006600740020006300680061007200610063007400650072002e
0052006500670075006c00610072004d006900630072006f0073006f0066
0074003a002000430061006c006900620072006900560065007200730069
006f006e00200036002e0032003000430061006c00690062007200690020
0069007300200061002000740072006100640065006d00610072006b0020
006f006600200074006800650020004d006900630072006f0073006f0066
0074002000670072006f007500700020006f006600200063006f006d0070
0061006e006900650073002e00a9002000320030003100370020004d0069
00630072006f0073006f0066007400200043006f00720070006f00720061
00740069006f006e002e00200041006c006c002000520069006700680074
0073002000520065007300650072007600650064002e000d000a00480065
00620072006500770020004f00700065006e00540079007000650020004c
00610079006f007500740020006c006f00670069006300200063006f0070
007900720069006700680074002000a90020003200300030003300200026
00200032003000300037002c002000520061006c00700068002000480061
006e0063006f0063006b002000260020004a006f0068006e002000480075
00640073006f006e002e002000540068006900730020006c00610079006f
007500740020006c006f00670069006300200066006f0072002000420069
0062006c006900630061006c002000480065006200720065007700200069
00730020006f00700065006e00200073006f007500720063006500200073
006f00660074007700610072006500200075006e00640065007200200074
006800650020004d004900540020004c006900630065006e00730065003b
002000730065006500200065006d0062006500640064006500640020006c
006900630065006e00730065002000640065007300630072006900700074
0069006f006e00200066006f0072002000640065007400610069006c0073
002e004c007500630028006100730029002000640065002000470072006f
006f00740068007400740070003a002f002f007700770077002e006d0069
00630072006f0073006f00660074002e0063006f006d002f007400790070
006f006700720061007000680079002f006300740066006f006e00740073
0068007400740070003a002f002f006c00750063006100730066006f006e
00740073002e0063006f006d004d006900630072006f0073006f00660074
00200073007500700070006c00690065006400200066006f006e0074002e
00200059006f00750020006d006100790020007500730065002000740068
0069007300200066006f006e007400200074006f00200063007200650061
00740065002c00200064006900730070006c00610079002c00200061006e
00640020007000720069006e007400200063006f006e00740065006e0074
0020006100730020007000650072006d0069007400740065006400200062
007900200074006800650020006c006900630065006e0073006500200074
00650072006d00730020006f00720020007400650072006d00730020006f
00660020007500730065002c0020006f006600200074006800650020004d
006900630072006f0073006f00660074002000700072006f006400750063
0074002c00200073006500720076006900630065002c0020006f00720020
0063006f006e00740065006e007400200069006e00200077006800690063
00680020007400680069007300200066006f006e00740020007700610073
00200069006e0063006c0075006400650064002e00200059006f00750020
006d006100790020006f006e006c0079002000280069002900200065006d
0062006500640020007400680069007300200066006f006e007400200069
006e00200063006f006e00740065006e0074002000610073002000700065
0072006d0069007400740065006400200062007900200074006800650020
0065006d00620065006400640069006e0067002000720065007300740072
0069006300740069006f006e007300200069006e0063006c007500640065
006400200069006e0020007400680069007300200066006f006e0074003b
00200061006e006400200028006900690029002000740065006d0070006f
0072006100720069006c007900200064006f0077006e006c006f00610064
0020007400680069007300200066006f006e007400200074006f00200061
0020007000720069006e0074006500720020006f00720020006f00740068
006500720020006f00750074007000750074002000640065007600690063
006500200074006f002000680065006c00700020007000720069006e0074
00200063006f006e00740065006e0074002e00200041006e00790020006f
00740068006500720020007500730065002000690073002000700072006f
0068006900620069007400650064002e000d000d00540068006500200066
006f006c006c006f00770069006e00670020006c006900630065006e0073
0065002c0020006200610073006500640020006f006e0020007400680065
0020004d004900540020006c006900630065006e00730065002000280068
007400740070003a002f002f0065006e002e00770069006b006900700065
006400690061002e006f00720067002f00770069006b0069002f004d0049
0054005f004c006900630065006e007300650029002c0020006100700070
006c00690065007300200074006f00200074006800650020004f00700065
006e00540079007000650020004c00610079006f007500740020006c006f
00670069006300200066006f00720020004200690062006c006900630061
006c00200048006500620072006500770020201c004c00610079006f0075
00740020004c006f006700690063201d0020006100730020006a006f0069
006e0074006c007900200064006500760065006c006f0070006500640020
00620079002000520061006c00700068002000480061006e0063006f0063
006b00200061006e00640020004a006f0068006e00200048007500640073
006f006e002e0020000d000d005000650072006d0069007300730069006f
006e00200069007300200068006500720065006200790020006700720061
006e007400650064002c002000660072006500650020006f006600200063
00680061007200670065002c00200074006f00200061006e007900200070
006500720073006f006e0020006f0062007400610069006e0069006e0067
0020006100200063006f007000790020006f006600200074006800650020
004f00700065006e00540079007000650020004c00610079006f00750074
0020006c006f00670069006300200066006f00720020004200690062006c
006900630061006c002000480065006200720065007700200061006e0064
0020006100730073006f00630069006100740065006400200064006f0063
0075006d0065006e0074006100740069006f006e002000660069006c0065
0073002000280074006800650020201c004c00610079006f007500740020
004c006f00670069006300200053006f006600740077006100720065201d
0029002c00200074006f0020006400650061006c00200069006e00200074
006800650020004c00610079006f007500740020004c006f006700690063
00200053006f00660074007700610072006500200077006900740068006f
007500740020007200650073007400720069006300740069006f006e002c
00200069006e0063006c007500640069006e006700200077006900740068
006f007500740020006c0069006d00690074006100740069006f006e0020
007400680065002000720069006700680074007300200074006f00200075
00730065002c00200063006f00700079002c0020006d006f006400690066
0079002c0020006d0065007200670065002c0020007000750062006c0069
00730068002c00200064006900730074007200690062007500740065002c
0020007300750062006c006900630065006e00730065002c00200061006e
0064002f006f0072002000730065006c006c00200063006f007000690065
00730020006f006600200074006800650020004c00610079006f00750074
0020004c006f00670069006300200053006f006600740077006100720065
002c00200061006e006400200074006f0020007000650072006d00690074
00200070006500720073006f006e007300200074006f002000770068006f
006d00200074006800650020004c00610079006f007500740020004c006f
00670069006300200053006f006600740077006100720065002000690073
0020006600750072006e0069007300680065006400200074006f00200064
006f00200073006f002c0020007300750062006a00650063007400200074
006f002000740068006500200066006f006c006c006f00770069006e0067
00200063006f006e0064006900740069006f006e0073003a000d000d0054
00680065002000610062006f0076006500200063006f0070007900720069
0067006800740020006e006f007400690063006500200061006e00640020
00740068006900730020007000650072006d0069007300730069006f006e
0020006e006f00740069006300650020007300680061006c006c00200062
006500200069006e0063006c007500640065006400200069006e00200061
006c006c00200063006f00700069006500730020006f0072002000730075
0062007300740061006e007400690061006c00200070006f007200740069
006f006e00730020006f006600200074006800650020004c00610079006f
007500740020004c006f00670069006300200053006f0066007400770061
00720065002e000d000d00540048004500200053004f0046005400570041
00520045002000490053002000500052004f005600490044004500440020
0027004100530020004900530027002c00200057004900540048004f0055
0054002000570041005200520041004e005400590020004f004600200041
004e00590020004b0049004e0044002c0020004500580050005200450053
00530020004f005200200049004d0050004c004900450044002c00200049
004e0043004c005500440049004e004700200042005500540020004e004f
00540020004c0049004d004900540045004400200054004f002000540048
0045002000570041005200520041004e00540049004500530020004f0046
0020004d00450052004300480041004e0054004100420049004c00490054
0059002c0020004600490054004e00450053005300200046004f00520020
004100200050004100520054004900430055004c00410052002000500055
00520050004f0053004500200041004e00440020004e004f004e0049004e
004600520049004e00470045004d0045004e0054002e00200049004e0020
004e004f0020004500560045004e00540020005300480041004c004c0020
00540048004500200041005500540048004f005200530020004f00520020
0043004f005000590052004900470048005400200048004f004c00440045
005200530020004200450020004c004900410042004c004500200046004f
005200200041004e005900200043004c00410049004d002c002000440041
004d00410047004500530020004f00520020004f00540048004500520020
004c0049004100420049004c004900540059002c00200057004800450054
00480045005200200049004e00200041004e00200041004300540049004f
004e0020004f004600200043004f004e00540052004100430054002c0020
0054004f005200540020004f00520020004f005400480045005200570049
00530045002c002000410052004900530049004e0047002000460052004f
004d002c0020004f005500540020004f00460020004f005200200049004e
00200043004f004e004e0045004300540049004f004e0020005700490054
0048002000540048004500200053004f0046005400570041005200450020
004f0052002000540048004500200055005300450020004f00520020004f
00540048004500520020004400450041004c0049004e0047005300200049
004e002000540048004500200053004f004600540057004100520045002e
000d0068007400740070003a002f002f007700770077002e006d00690063
0072006f0073006f00660074002e0063006f006d002f007400790070006f
006700720061007000680079002f0066006f006e00740073002f00640065
006600610075006c0074002e0061007300700078a92032303137204d6963
726f736f667420436f72706f726174696f6e2e20416c6c20526967687473
2052657365727665642e0d486562726577204f70656e54797065204c6179
6f7574206c6f67696320636f7079726967687420a9203230303320262032
3030372c2052616c70682048616e636f636b2026204a6f686e2048756473
6f6e2e2054686973206c61796f7574206c6f67696320666f72204269626c
6963616c20486562726577206973206f70656e20736f7572636520736f66
747761726520756e64657220746865204d4954204c6963656e73653b2073
656520656d626564646564206c6963656e7365206465736372697074696f
6e20666f722064657461696c732e43616c696272692069732061206d6f64
65726e2073616e732073657269662066616d696c79207769746820737562
746c6520726f756e64696e6773206f6e207374656d7320616e6420636f72
6e6572732e204974206665617475726573207265616c206974616c696373
2c20736d616c6c20636170732c20616e64206d756c7469706c65206e756d
6572616c20736574732e204974732070726f706f7274696f6e7320616c6c
6f77206869676820696d7061637420696e2074696768746c792073657420
6c696e6573206f662062696720616e6420736d616c6c207465787420616c
696b652e2043616c696272692773206d616e792063757276657320616e64
20746865206e65772072617374657269736572207465616d20757020696e
206269676765722073697a657320746f2072657665616c2061207761726d
20616e6420736f6674206368617261637465722e526567756c61724d6963
726f736f66743a2043616c696272693a203230303556657273696f6e2036
2e323043616c6962726920697320612074726164656d61726b206f662074
6865204d6963726f736f66742067726f7570206f6620636f6d70616e6965
732e4c7563286173292064652047726f6f74687474703a2f2f7777772e6d
6963726f736f66742e636f6d2f7479706f6772617068792f6374666f6e74
73687474703a2f2f6c75636173666f6e74732e636f6d4d6963726f736f66
7420737570706c69656420666f6e742e20596f75206d6179207573652074
68697320666f6e7420746f206372656174652c20646973706c61792c2061
6e64207072696e7420636f6e74656e74206173207065726d697474656420
627920746865206c6963656e7365207465726d73206f72207465726d7320
6f66207573652c206f6620746865204d6963726f736f66742070726f6475
63742c20736572766963652c206f7220636f6e74656e7420696e20776869
6368207468697320666f6e742077617320696e636c756465642e20596f75
206d6179206f6e6c792028692920656d626564207468697320666f6e7420
696e20636f6e74656e74206173207065726d697474656420627920746865
20656d62656464696e67207265737472696374696f6e7320696e636c7564
656420696e207468697320666f6e743b20616e6420286969292074656d70
6f726172696c7920646f776e6c6f6164207468697320666f6e7420746f20
61207072696e746572206f72206f74686572206f75747075742064657669
636520746f2068656c70207072696e7420636f6e74656e742e20416e7920
6f74686572207573652069732070726f686962697465642e0d0d54686520
666f6c6c6f77696e67206c6963656e73652c206261736564206f6e207468
65204d4954206c6963656e73652028687474703a2f2f656e2e77696b6970
656469612e6f72672f77696b692f4d49545f4c6963656e7365292c206170
706c69657320746f20746865204f70656e54797065204c61796f7574206c
6f67696320666f72204269626c6963616c2048656272657720d24c61796f
7574204c6f676963d3206173206a6f696e746c7920646576656c6f706564
2062792052616c70682048616e636f636b20616e64204a6f686e20487564
736f6e2e200d0d5065726d697373696f6e20697320686572656279206772
616e7465642c2066726565206f66206368617267652c20746f20616e7920
706572736f6e206f627461696e696e67206120636f7079206f6620746865
204f70656e54797065204c61796f7574206c6f67696320666f7220426962
6c6963616c2048656272657720616e64206173736f63696174656420646f
63756d656e746174696f6e2066696c6573202874686520d24c61796f7574
204c6f67696320536f667477617265d3292c20746f206465616c20696e20
746865204c61796f7574204c6f67696320536f6674776172652077697468
6f7574207265737472696374696f6e2c20696e636c7564696e6720776974
686f7574206c696d69746174696f6e207468652072696768747320746f20
7573652c20636f70792c206d6f646966792c206d657267652c207075626c
6973682c20646973747269627574652c207375626c6963656e73652c2061
6e642f6f722073656c6c20636f70696573206f6620746865204c61796f75
74204c6f67696320536f6674776172652c20616e6420746f207065726d69
7420706572736f6e7320746f2077686f6d20746865204c61796f7574204c
6f67696320536f667477617265206973206675726e697368656420746f20
646f20736f2c207375626a65637420746f2074686520666f6c6c6f77696e
6720636f6e646974696f6e733a0d0d5468652061626f766520636f707972
69676874206e6f7469636520616e642074686973207065726d697373696f
6e206e6f74696365207368616c6c20626520696e636c7564656420696e20
616c6c20636f70696573206f72207375627374616e7469616c20706f7274
696f6e73206f6620746865204c61796f7574204c6f67696320536f667477
6172652e0d0d54484520534f4654574152452049532050524f5649444544
20274153204953272c20574954484f55542057415252414e5459204f4620
414e59204b494e442c2045585052455353204f5220494d504c4945442c20
494e434c5544494e4720425554204e4f54204c494d4954454420544f2054
48452057415252414e54494553204f46204d45524348414e544142494c49
54592c204649544e45535320464f52204120504152544943554c41522050
5552504f534520414e44204e4f4e494e4652494e47454d454e542e20494e
204e4f204556454e54205348414c4c2054484520415554484f5253204f52
20434f5059524947485420484f4c44455253204245204c4941424c452046
4f5220414e5920434c41494d2c2044414d41474553204f52204f54484552
204c494142494c4954592c205748455448455220494e20414e2041435449
4f4e204f4620434f4e54524143542c20544f5254204f52204f5448455257
4953452c2041524953494e472046524f4d2c204f5554204f46204f522049
4e20434f4e4e454354494f4e20574954482054484520534f465457415245
204f522054484520555345204f52204f54484552204445414c494e475320
494e2054484520534f4654574152452e0d687474703a2f2f7777772e6d69
63726f736f66742e636f6d2f7479706f6772617068792f666f6e74732f64
656661756c742e61737078004d006900630072006f0073006f0066007400
200073007500700070006c00690065006400200066006f006e0074002e00
200059006f00750020006d00610079002000750073006500200074006800
69007300200066006f006e007400200074006f0020006300720065006100
740065002c00200064006900730070006c00610079002c00200061006e00
640020007000720069006e007400200063006f006e00740065006e007400
20006100730020007000650072006d006900740074006500640020006200
7900200074006800650020006c006900630065006e007300650020007400
650072006d00730020006f00720020007400650072006d00730020006f00
660020007500730065002c0020006f006600200074006800650020004d00
6900630072006f0073006f00660074002000700072006f00640075006300
74002c00200073006500720076006900630065002c0020006f0072002000
63006f006e00740065006e007400200069006e0020007700680069006300
680020007400680069007300200066006f006e0074002000770061007300
200069006e0063006c0075006400650064002e00200059006f0075002000
6d006100790020006f006e006c0079002000280069002900200065006d00
62006500640020007400680069007300200066006f006e00740020006900
6e00200063006f006e00740065006e007400200061007300200070006500
72006d006900740074006500640020006200790020007400680065002000
65006d00620065006400640069006e006700200072006500730074007200
69006300740069006f006e007300200069006e0063006c00750064006500
6400200069006e0020007400680069007300200066006f006e0074003b00
200061006e006400200028006900690029002000740065006d0070006f00
72006100720069006c007900200064006f0077006e006c006f0061006400
20007400680069007300200066006f006e007400200074006f0020006100
20007000720069006e0074006500720020006f00720020006f0074006800
6500720020006f0075007400700075007400200064006500760069006300
6500200074006f002000680065006c00700020007000720069006e007400
200063006f006e00740065006e0074002e00200041006e00790020006f00
740068006500720020007500730065002000690073002000700072006f00
68006900620069007400650064002e000d000a000d000a00540068006500
200066006f006c006c006f00770069006e00670020006c00690063006500
6e00730065002c0020006200610073006500640020006f006e0020007400
6800650020004d004900540020006c006900630065006e00730065002000
280068007400740070003a002f002f0065006e002e00770069006b006900
700065006400690061002e006f00720067002f00770069006b0069002f00
4d00490054005f004c006900630065006e007300650029002c0020006100
700070006c00690065007300200074006f00200074006800650020004f00
700065006e00540079007000650020004c00610079006f00750074002000
6c006f00670069006300200066006f00720020004200690062006c006900
630061006c00200048006500620072006500770020201c004c0061007900
6f007500740020004c006f006700690063201d0020006100730020006a00
6f0069006e0074006c007900200064006500760065006c006f0070006500
64002000620079002000520061006c00700068002000480061006e006300
6f0063006b00200061006e00640020004a006f0068006e00200048007500
640073006f006e002e0020000d000a000d000a005000650072006d006900
7300730069006f006e002000690073002000680065007200650062007900
20006700720061006e007400650064002c00200066007200650065002000
6f00660020006300680061007200670065002c00200074006f0020006100
6e007900200070006500720073006f006e0020006f006200740061006900
6e0069006e00670020006100200063006f007000790020006f0066002000
74006800650020004f00700065006e00540079007000650020004c006100
79006f007500740020006c006f00670069006300200066006f0072002000
4200690062006c006900630061006c002000480065006200720065007700
200061006e00640020006100730073006f00630069006100740065006400
200064006f00630075006d0065006e0074006100740069006f006e002000
660069006c00650073002000280074006800650020201c004c0061007900
6f007500740020004c006f00670069006300200053006f00660074007700
6100720065201d0029002c00200074006f0020006400650061006c002000
69006e00200074006800650020004c00610079006f007500740020004c00
6f00670069006300200053006f0066007400770061007200650020007700
6900740068006f0075007400200072006500730074007200690063007400
69006f006e002c00200069006e0063006c007500640069006e0067002000
77006900740068006f007500740020006c0069006d006900740061007400
69006f006e00200074006800650020007200690067006800740073002000
74006f0020007500730065002c00200063006f00700079002c0020006d00
6f0064006900660079002c0020006d0065007200670065002c0020007000
750062006c006900730068002c0020006400690073007400720069006200
7500740065002c0020007300750062006c006900630065006e0073006500
2c00200061006e0064002f006f0072002000730065006c006c0020006300
6f00700069006500730020006f006600200074006800650020004c006100
79006f007500740020004c006f00670069006300200053006f0066007400
77006100720065002c00200061006e006400200074006f00200070006500
72006d0069007400200070006500720073006f006e007300200074006f00
2000770068006f006d00200074006800650020004c00610079006f007500
740020004c006f00670069006300200053006f0066007400770061007200
650020006900730020006600750072006e00690073006800650064002000
74006f00200064006f00200073006f002c0020007300750062006a006500
63007400200074006f002000740068006500200066006f006c006c006f00
770069006e006700200063006f006e0064006900740069006f006e007300
3a000d000a000d000a005400680065002000610062006f00760065002000
63006f00700079007200690067006800740020006e006f00740069006300
6500200061006e0064002000740068006900730020007000650072006d00
69007300730069006f006e0020006e006f00740069006300650020007300
680061006c006c00200062006500200069006e0063006c00750064006500
6400200069006e00200061006c006c00200063006f007000690065007300
20006f00720020007300750062007300740061006e007400690061006c00
200070006f007200740069006f006e00730020006f006600200074006800
650020004c00610079006f007500740020004c006f006700690063002000
53006f006600740077006100720065002e000d000a000d000a0054004800
4500200053004f0046005400570041005200450020004900530020005000
52004f005600490044004500440020002700410053002000490053002700
2c00200057004900540048004f0055005400200057004100520052004100
4e005400590020004f004600200041004e00590020004b0049004e004400
2c002000450058005000520045005300530020004f005200200049004d00
50004c004900450044002c00200049004e0043004c005500440049004e00
4700200042005500540020004e004f00540020004c0049004d0049005400
45004400200054004f002000540048004500200057004100520052004100
4e00540049004500530020004f00460020004d0045005200430048004100
4e0054004100420049004c004900540059002c0020004600490054004e00
450053005300200046004f00520020004100200050004100520054004900
430055004c0041005200200050005500520050004f005300450020004100
4e00440020004e004f004e0049004e004600520049004e00470045004d00
45004e0054002e00200049004e0020004e004f0020004500560045004e00
540020005300480041004c004c0020005400480045002000410055005400
48004f005200530020004f005200200043004f0050005900520049004700
48005400200048004f004c00440045005200530020004200450020004c00
4900410042004c004500200046004f005200200041004e00590020004300
4c00410049004d002c002000440041004d00410047004500530020004f00
520020004f00540048004500520020004c0049004100420049004c004900
540059002c0020005700480045005400480045005200200049004e002000
41004e00200041004300540049004f004e0020004f004600200043004f00
4e00540052004100430054002c00200054004f005200540020004f005200
20004f00540048004500520057004900530045002c002000410052004900
530049004e0047002000460052004f004d002c0020004f00550054002000
4f00460020004f005200200049004e00200043004f004e004e0045004300
540049004f004e0020005700490054004800200054004800450020005300
4f0046005400570041005200450020004f00520020005400480045002000
55005300450020004f00520020004f005400480045005200200044004500
41004c0049004e0047005300200049004e00200054004800450020005300
4f004600540057004100520045002e000d000a00000000>
<b10903415302c802c60038001f02c702c60038001f02dd003802da005502
d9003802d7005502d8003802d7005502d6003802d5005502d4003802d300
5502d2003802d1005502bf003802be005502bd003802bc0055000402db00
3402db005402db0003003402db005402db006402db00a402db00d402db00
05006b02d50001000b02d10001001402c2004402c2006402c2007402c200
9402c2000500a402be000100a402bc000100200284b40918014a20b80283
b40918014a20b80282b40918014a20b80281b40918014a20b80280b40918
014a20b8027fb40918014a20b8027eb40918014a20b8027db40918014a20
b8027cb40918014a20b8027bb40918014a20b8027ab40918014a20b80279
b40918014a20b80278b40918014a20b80277b40918014a20b80276b40918
014a20b80275b40918014a20b80274b40918014a20b80273b40918014a20
b80271b40918014a20b80270b40918014a20b8026fb40918014a20b8026e
b40918014a20b8026db40918014a20b8026cb40918014a20b8026bb40918
014a20b8026ab40918014a20b80269b40918014a20b80268b40918014a20
b80267b40918014a20b80266b40918014a20b80265b40918014a20b80264
b40918014a20b80263b40918014a20b80262b40918014a20b80261b40918
014a20b80260b40918014a20b8025fb40918014a20b8025eb40918014a20
b8025db40918014a20b8025cb40918014a20b8025bb40918014a20b8025a
b40918014a20b80259b40918014a20b80258b40918014a20b80257b40918
014a20b80256b40918014a20b80255b40918014a20b80254b40918014a20
b80253b40918014a20b80252b40918014a20b80251b40918014a20b80250
b40918014a20b8024fb40918014a20b8024eb40918014a20b8024db40918
014a20b8024cb40918014a20b8024bb40918014a20b8024ab40918014a20
b80249b40918014a20b80248b40918014a20b80247b40918014a20b80246
b40918014a20b80245b40918014a20b80244b40918014a20b80243b40918
014a20b80242b40918014a20b80241b40918014a20b80240b40918014a20
b8023fb40918014a20b8023eb40918014a20b8023db40918014a20b8023c
b40918014a20b8023bb40918014a20b8023ab40918014a20b80239b40918
014a20b80238b40918014a20b80237b40918014a20b80236b40918014a20
b80235b40918014a20b80234b40918014a20b80233b40918014a20b80232
b40918014a20b80231b40918014a20b80230b40918014a20b8022fb40918
014a20b8022eb40918014a20b8022db40918014a20b8022cb40918014a20
b8022bb40918014a20b8022ab40918014a20b80229b40918014a20b80228
b40918014a20b80227b40918014a20b80226b40918014a20b80225b40918
014a20b80224b40918014a20b80223b40918014a20b80222b40918014a20
b80221b40918014a20b80220b40918014a20b8021fb40918014a20b8021e
b40918014a20b8021db40918014a20b8021cb40918014a20b8021bb40918
014a20b8021ab40918014a20b80219b40918014a20b80218b40918014a20
b80217b40918014a20b80216b40918014a20b80215b40918014a20b80214
b40918014a20b80213b40918014a20b80212b40918014a20b80211b40918
014a20b80210b40918014a20b8020fb40918014a20b8020eb40918014a20
b8020db40918014a20b8020cb40918014a20b8020bb40918014a20b8020a
b40918014a20b80209b40918014a20b80208b40918014a20b80207b40918
014a20b80206b40918014a20b80205b40918014a20b80204b40918014a20
b80203b40918014a20b80202b40918014a20b80201b40918014a20b80200
b40918014a20b801ffb40918014a20b801feb40918014a20b801fdb40918
014a20b801fcb40918014a20b801fbb40918014a20b801fab40918014a20
b801f9b40918014a20b801f8b40918014a20b801f7b40918014a20b801f6
b40918014a20b801f5b40918014a20b801f4b40918014a20b801f3b40918
014a20b801f2b40918014a20b801f1b40918014a20b801f0b40918014a20
b801efb40918014a20b801eeb40918014a20b801edb40918014a20b801ec
b40918014a20b801ebb40918014a20b801eab40918014a20b801e9b40918
014a20b801e8b40918014a20b801e7b40918014a20b801e6b40918014a20
b801e5b40918014a20b801e4b40918014a20b801e3b40918014a20b801e2
b40918014a20b801e1b40918014a20b801e0b40918014a20b801dfb40918
014a20b801deb40918014a20b801ddb40918014a20b801dcb40918014a20
b801dbb40918014a20b801dab40918014a20b801d9b40918014a20b801d8
b40918014a20b801d7b40918014a20b801d6b40918014a20b801d5b40918
014a20b801d4b40918014a20b801d3b40918014a20b801d2b40918014a20
b801d1b40918014a20b801d0b40918014a20b801cfb40918014a20b801ce
b40918014a20b801cdb40918014a20b801ccb40918014a20b801cbb40918
014a20b801cab40918014a20b801c9b40918014a20b801c8b40918014a20
b801c7b40918014a20b801c6b40918014a20b801c5b40918014a20b801c4
b40918014a20b801c3b40918014a20b801c2b40918014a20b801c1b40918
014a20b801c0b40918014a20b801bfb40918014a20b801beb40918014a20
b801bdb40918014a20b801bcb40918014a20b801bbb40918014a20b801ba
b40918014a20b801b9b40918014a20b801b8b40918014a20b801b7b40918
014a20b801b6b40918014a20b801b5b40918014a20b801b4b40918014a20
b801b3b40918014a20b801b2b40918014a20b801b1b40918014a20b801b0
b40918014a20b801afb40918014a20b801aeb40918014a20b801adb40918
014a20b801acb40918014a20b801abb40918014a20b801aab40918014a20
b801a9b40918014a20b801a8b40918014a20b801a7b40918014a20b801a6
b40918014a20b801a5b40918014a20b801a4b40918014a20b801a3b40918
014a20b801a2b40918014a20b801a1b40918014a20b801a0b40918014a20
b8019fb40918014a20b8019eb40918014a20b8019db40918014a20b8019c
b40918014a20b8019bb40918014a20b8019ab40918014a20b80199b40918
014a20b80198b40918014a20b80197b40918014a20b80196b40918014a20
b80195b40918014a20b80194b40918014a20b80193b40918014a20b80192
b40918014a20b80191b40918014a20b80190b40918014a20b8018fb40918
014a20b8018eb40918014a20b8018db40918014a20b8018cb40918014a20
b8018bb40918014a20b8018ab40918014a20b80189b40918014a20b80188
b40918014a20b80187b40918014a20b80186b40918014a20b80185b40918
014a20b80184b40918014a20b80183b40918014a20b80182b40918014a20
b80181b40918014a20b80180b40918014a20b8017fb40918014a20b8017e
b40918014a20b8017db40918014a20b8017cb40918014a20b8017bb40918
014a20b8017ab40918014a20b80179b40918014a20b80178b40918014a20
b80177b40918014a20b80176b40918014a20b80175b40918014a20b80174
b40918014a20b80173b40918014a20b80172b40918014a20b80171b40918
014a20b80170b40918014a20b8016fb40918014a20b8016eb40918014a20
b8016db40918014a20b8016cb40918014a20b8016bb40918014a20b8016a
b40918014a20b80169b40918014a20b80168b40918014a20b80167b40918
014a20b80166b40918014a20b80165b40918014a20b80164b40918014a20
b80163b40918014a20b80162b40918014a20b80161b40918014a20b80160
b40918014a20b8015fb40918014a20b8015eb40918014a20b8015db40918
014a20b8015cb40918014a20b8015bb40918014a20b8015ab40918014a20
b80159b40918014a20b80158b40918014a20b80157b40918014a20b80156
b40918014a20b80155b40918014a20b80154b40918014a20b80153b40918
014a20b80152b40918014a20b80150b40918014a20b8014fb40918014a20
b8014eb40918014a20b8014cb40918014a20b8014bb40918014a20b8014a
b40918014a20b80149b40918014a20b80148b40918014a20b80147b40918
014a20b80146b40918014a20b80145b40918014a20b80144b40918014a20
b80143b30918014ab80284b21e3e1fb80283b21e151fb80282b21e3e1fb8
0281b21e3a1fb80280b21e3e1fb8027fb21e3e1fb8027eb21e0c1fb8027d
b21e3e1fb8027cb21e3e1fb8027bb21e3e1fb8027ab21e3e1fb80279b21d
411fb80278b21d431fb80277b21d431fb80276b21d431fb80275b21d411f
b80274b21d431fb80273b21d431fb80272b21d411fb80271b21d421fb802
70b21d421fb8026fb21d421fb8026eb21d431fb8026db21d431fb8026cb2
1d431fb8026bb21c451fb8026ab21c451fb80269b21c451fb80268b21c45
1fb80267b21c451fb80266b21c441fb80265b21c451fb80264b21c451fb8
0263b21c451fb80262b21c451fb80261b21c451fb80260b21c451fb8025f
b21c451fb8025eb21c441fb8025db21c451fb8025cb21c451fb8025bb21c
451fb8025ab21c451fb80259b21c451fb80258b21c451fb80257b21c451f
b80256b21c451fb80255b21c451fb80254b21c451fb80253b21c451fb802
52b21c451fb80251b21c451fb80250b21c451fb8024fb21c451fb8024eb2
1c451fb8024db21c451fb8024cb21c451fb8024bb21c451fb8024ab21b49
1fb80249b21b491fb80248b21b4a1fb80247b21b4a1fb80246b21b4b1fb8
0245b21b4c1fb80244b21b4c1fb80243b21b4c1fb80242b21b4b1fb80241
b21b491fb80240b21b491fb8023fb21b4a1fb8023eb21b4a1fb8023db21b
4a1fb8023cb21b4b1fb8023bb21b4b1fb8023ab21b4c1fb80239b21b4c1f
b80238b21b4c1fb80237b21b4c1fb80236b21b4c1fb80235b21b491fb802
34b21b491fb80233b21b4a1fb80232b21b4a1fb80231b21b4a1fb80230b2
1b4b1fb8022fb21b4b1fb8022eb21b4c1fb8022db21b4c1fb8022cb21b4c
1fb8022bb21b4c1fb8022ab21b4c1fb80229b21b4c1fb80228b21b4c1fb8
0227b21b491fb80226b21b491fb80225b21b4a1fb80224b21b4a1fb80223
b21b4a1fb80222b21b4b1fb80221b21b4b1fb80220b21b4c1fb8021fb21b
4c1fb8021eb21b4c1fb8021db21b4c1fb8021cb21b4c1fb8021bb21b4c1f
b8021ab21a4e1fb80219b21a4e1fb80218b21a4f1fb80217b21a4f1fb802
16b21a4e1fb80215b21a4e1fb80214b21a4f1fb80213b21a4f1fb80212b2
1a4f1fb80211b21a4e1fb80210b21a4e1fb8020fb21a4f1fb8020eb21a4f
1fb8020db21a4f1fb8020cb21a4e1fb8020bb21a4e1fb8020ab21a4e1fb8
0209b21a4f1fb80208b21a4f1fb80207b21a4f1fb80206b219501fb80205
b219511fb80204b219511fb80203b219501fb80202b219511fb80201b219
511fb80200b219511fb801ffb219511fb801feb219501fb801fdb219511f
b801fcb219511fb801fbb219511fb801fab219501fb801f9b219511fb801
f8b219511fb801f7b219511fb801f6b219511fb801f5b218541fb801f4b2
18531fb801f3b218541fb801f2b218541fb801f1b218541fb801f0b21853
1fb801efb218541fb801eeb218541fb801edb218541fb801ecb218531fb8
01ebb218531fb801eab218541fb801e9b218541fb801e8b218541fb801e7
b218541fb801e6b218531fb801e5b218541fb801e4b218531fb801e3b218
541fb801e2b218541fb801e1b218541fb801e0b218531fb801dfb218531f
b801deb218541fb801ddb218541fb801dcb218541fb801dbb218541fb801
dab218531fb801d9b218541fb801d8b218541fb801d7b217571fb801d6b2
17561fb801d5b217561fb801d4b217571fb801d3b217571fb801d2b21757
1fb801d1b217571fb801d0b217561fb801cfb217561fb801ceb217571fb8
01cdb217571fb801ccb217571fb801cbb217571fb801cab217561fb801c9
b217561fb801c8b217571fb801c7b217571fb801c6b217571fb801c5b217
571fb801c4b217571fb801c3b217561fb801c2b217571fb801c1b217571f
b801c0b217571fb801bfb217561fb801beb217561fb801bdb217571fb801
bcb217571fb801bbb217571fb801bab217571fb801b9b217571fb801b8b2
17561fb801b7b217571fb801b6b217571fb801b5b217571fb801b4b21757
1fb801b3b2163f1fb801b2b2165b1fb801b1b2165b1fb801b0b2165b1fb8
01afb2165b1fb801aeb2165b1fb801adb2165b1fb801acb2165b1fb801ab
b2165b1fb801aab2163e1fb801a9b2163f1fb801a8b2163f1fb801a7b216
5b1fb801a6b2165b1fb801a5b2165b1fb801a4b2165b1fb801a3b2165b1f
b801a2b2165b1fb801a1b2165b1fb801a0b2165b1fb8019fb2163e1fb801
9eb2163f1fb8019db2163f1fb8019cb2165b1fb8019bb2165b1fb8019ab2
165b1fb80199b2165b1fb80198b2163e1fb80197b2165b1fb80196b2165b
1fb80195b2165b1fb80194b2163e1fb80193b2163f1fb80192b2163f1fb8
0191b2165b1fb80190b2165b1fb8018fb2165b1fb8018eb2165b1fb8018d
b2165b1fb8018cb2163f1fb8018bb2165b1fb8018ab2165b1fb80189b216
5b1fb80188b2165b1fb80187b2165b1fb80186b215611fb80185b215621f
b80184b215621fb80183b215661fb80182b215661fb80181b215551fb801
80b215451fb8017fb215361fb8017eb215361fb8017db215611fb8017cb2
15621fb8017bb215621fb8017ab215641fb80179b215661fb80178b21566
1fb80177b215661fb80176b215661fb80175b215661fb80174b215661fb8
0173b215451fb80172b215621fb80171b215621fb80170b215631fb8016f
b215641fb8016eb215661fb8016db215661fb8016cb215661fb8016bb215
661fb8016ab215661fb80169b215621fb80168b215621fb80167b215611f
b80166b215641fb80165b215641fb80164b215661fb80163b215661fb801
62b215661fb80161b215661fb80160b215661fb8015fb215661fb8015eb2
15551fb8015db215451fb8015cb215451fb8015bb215361fb8015ab21561
1fb80159b215621fb80158b215621fb80157b215631fb80156b215641fb8
0155b215661fb80154b215661fb80153b215661fb80152b215661fb80151
b214401fb80150b214551fb8014fb214561fb8014eb214831fb8014db214
2d1fb8014cb214401fb8014bb214401fb8014ab214411fb80149b214401f
b80148b214401fb80147b214411fb80146b2147e1fb80145b214871fb801
44b2147f1fb80143b214801fb80142b212461fb80141b212461fb80140b2
12461fb8013fb212461fb8013eb212441fb8013db212461fb8013cb21159
1fb8013bb211591fb8013ab2115b1fb80139b2115b1fb80138b211471fb8
0137b211581fb80136b2115a1fb80135b2115b1fb80134b2115b1fb80133
b2112c1fb80132b211471fb80131b211551fb80130b211571fb8012fb211
571fb8012eb211581fb8012db211591fb8012cb211591fb8012bb2115a1f
b8012ab2115a1fb80129b2115b1fb80128b2115b1fb80127b2115b1fb801
26b2115b1fb80125b211561fb80124b211561fb80123b211571fb80122b2
11581fb80121b211591fb80120b2115a1fb8011fb2115a1fb8011eb2115b
1fb8011db2115b1fb8011cb2115b1fb8011bb2115b1fb8011ab2115b1fb8
0119b2105d1fb80118b2105e1fb80117b2105f1fb80116b2105f1fb80115
b2105f1fb80114b2105f1fb80113b2105f1fb80112b2105d1fb80111b210
5e1fb80110b2105f1fb8010fb2105f1fb8010eb2105f1fb8010db2105f1f
b8010cb2105d1fb8010bb2105e1fb8010ab2105f1fb80109b2105f1fb801
08b2105f1fb80107b2105f1fb80106b2105d1fb80105b2105e1fb80104b2
105f1fb80103b2105f1fb80102b2105f1fb80101b2105f1fb8010040ff0f
621fff0f621ffe0f631ffd0f641ffc0f621ffb0f621ffa0f621ff90f631f
f80f641ff70f641ff60f641ff50f641ff40f621ff30f621ff20f631ff10f
641ff00f641fef0f641fee0f641fed0f621fec0f621feb0f631fea0f641f
e90f641fe80f641fe70f641fe60e671fe50e681fe40e681fe30e681fe20e
681fe10e671fe00e681fdf0e681fde0e681fdd0e671fdc0e681fdb0e681f
da0e681fd90e681fd80d6b1fd70d311fd60d6b1fd50d6c1fd40d261fd30d
261fd20d6c1fd10d2b1fd00d2b1fcf0d2b1fce0d6b1fcd0d6c1fcc0d6d1f
cb0d6b1fca0d6c1fc90d6d1fc80d6a1fc70d691fc60d681fc50d671fc40d
261fc30d311fc20d311fc10d311f40ffc00d311fbf0d311fbe0d311fbd0c
711fbc0c721fbb0c731fba0c741fb90c741fb80c741fb70c711fb60c711f
b50c721fb40c731fb30c741fb20c741fb10c741fb00c741faf0b791fae0b
7a1fad0b7c1fac0b7d1fab0b7e1faa0b7e1fa90b7e1fa80b7e1fa70b7e1f
a60b7e1fa50b2d1fa40b7e1fa30b7e1fa20b791fa10b7e1fa00b6b1f9f0b
791f9e0b7e1f9d0b7e1f9c0b791f9b0b7a1f9a0b7c1f990b7d1f980b7e1f
970b7e1f960b7e1f950b7e1f940b7e1f930b7e1f920b6b1f910b2d1f900a
4e1f8f0a4f1f8e0a671f8d0aa51f8c0aa71f8503251f8403381f8301381f
8255805581ab80557f557d557eab7d550b7d010b7d1b7d4b7d7b7dab7ddb
7d4012060a7c557a557bab7a557955775578ab7755ba028600660285403c
5576ab755504751475747503f47501ab7501447501307501020075107520
75030c7455725573ab7255007250728072b072043bb072e072020072010a
b8ffc0b3721b1e46b8ffc0407c720d104671556f5570ab6f556e666d556a
03251f6938675568ab67556638645565ab645563386255613860555f385d
555eab5d555c385a555bab5a55593858555703251f5638545555ab545553
38515552ab51554f384e554e03251f4d384b554cab4b554a38485549ab48
55473846554503381f001c101c201c0310b8ffc0404e1c1b1e46001b0142
301b401be01bf01b04001bb01bc01b03120f1a1f1a02290f1901434f1901
6f197f198f19030f18cf18024018292c460f17cf17df17ef170413401729
2e460016101620160315b8ffc0b3164d5446b8ffc0b3163f4446b8ffc0b3
16313546b8ffc0401f162326460f15010f151f150245ef15018600030120
01010001100120010308b8ffc0b401151f4603bd01000100000500010190
00542b4bb80800524bb008505bb00188b02553b00188b040515ab00688b0
00555a5b58b101018e59b101024354b0144b515a58b101018e59858d8d00
1d424bb01d5358b203a0a01d42594bb0805358b20340401d42594bb0ff53
58b20300001d42592b5e7375732b58403d0011e011f0110315bf10cf1002
0f0f010f0fff0f02400f3135460f0e1f0e020f0e1f0eff0e03400e313746
0f0d1f0d020f0d1f0dff0d0316400d313746b8ffc040270c5054460f0b1f
0b02553f0b4f0b02400b3f4346400b2d3046000301200101000110012001
0308b8ffc0b301151f462b5e7375732b2b745e732b2b5e73742b73742b73
74745e735901755e73742b2b2b2b5e732b5e732b7374755e735e735e7375
5e732b5e73002b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b5e73755e732b2b5e735f73737373742b2b2b2b2b2b5e7374
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b012b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2bb1000243545841ff02840064028300640282006402810064028000
64027f0064027e0064027d0064027c0064027b0064027a00640279006402
780064027700640276006402750064027400640273006402710064027000
64026f0064026e0064026d0064026c0064026b0064026a00640269006402
680064026700640266006402650064026400640263006402620064026100
6402600064025f0064025e0064025d0064025c0064025b0064025a006402
590064025800640257006402560064025500640254006402530064025200
640251006402500064024f0064024e0064024d0064024c0064024b006402
4a0064024900640248006402470064024600640245006402440064024300
64024200640241006402400064023f0064023e0064023d0064023c006402
3b0064023a00640239006402380064023700640236006402350064023400
6402330064023200640231006402300064022f0064022e0064022d006402
2c0064022b0064022a006402290064022800640227006402260064022500
640224006402230064022200640221006402200064021f0064021e006402
1d0064021c0064021b0064021a0064021900640218006402170064021600
64021500640214006402130064021200640211006402100064020f006402
0e0064020d0064020c0064020b0064020a00640209006402080064020700
640206006402050064020441ff0064020300640202006402010064020000
6401ff006401fe006401fd006401fc006401fb006401fa006401f9006401
f8006401f7006401f6006401f5006401f4006401f3006401f2006401f100
6401f0006401ef006401ee006401ed006401ec006401eb006401ea006401
e9006401e8006401e7006401e6006401e5006401e4006401e3006401e200
6401e1006401e0006401df006401de006401dd006401dc006401db006401
da006401d9006401d8006401d7006401d6006401d5006401d4006401d300
6401d2006401d1006401d0006401cf006401ce006401cd006401cc006401
cb006401ca006401c9006401c8006401c7006401c6006401c5006401c400
6401c3006401c2006401c1006401c0006401bf006401be006401bd006401
bc006401bb006401ba006401b9006401b8006401b7006401b6006401b500
6401b4006401b3006401b2006401b1006401b0006401af006401ae006401
ad006401ac006401ab006401aa006401a9006401a8006401a7006401a600
6401a5006401a4006401a3006401a2006401a1006401a00064019f006401
9e0064019d0064019c0064019b0064019a00640199006401980064019700
640196006401950064019400640193006401920064019100640190006401
8f0064018e0064018d0064018c0064018b0064018a006401890064018800
640187006401860064018500644180018400640183006401820064018100
6401800064017f0064017e0064017d0064017c0064017b0064017a006401
790064017800640177006401760064017500640174006401730064017200
640171006401700064016f0064016e0064016d0064016c0064016b006401
6a0064016900640168006401670064016600640165006401640064016300
64016200640161006401600064015f0064015e0064015d0064015c006401
5b0064015a00640159006401580064015700640156006401550064015400
64015300640152006401500064014f0064014e0064014c0064014b006401
4a0064014900640148006401470064014600640145006401440064014300
642b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b592b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b00737373737373742b2b2b2b2b2b2b2b2b2b185f
5e0000>
[16237 14613 12427 ] AllocGlyphStorage
]def 
124 60 
PrepFor2015
Type42DictEnd
5 818 1004 <00020048ffed03c705210013002b010bb0852b584019281201291101260d
01260c012608012507012a03012902012db8ffc040250f024d602d011418
10014d14100f014d14160d014d140a0c014d14200b014d14180c014d14bb
022d00000020ffe8b310014d20b8fff0b30f014d20b8ffeab30d014d20b8
fff6b30c014d20b8ffe8b60c014d24200120b8022d40090a200030004000
030ab8fff040090f014d2f0a4f0a0200b8ffd040090f014d0a100f024d00
b8ffc0400a0f024d000a000a2d2c1bb8010ab20f5325b8010ab10556003f
ed3fed11120139392f2f2b2b2b5d2b5d10e15d2b2b2b2b2b10e12b2b2b2b
2b2b31305d2b5d5d5d5d5d5d5d5d1bb10f1bb8010ab46c0f530525b8010a
b26c055600183f2b3f2b30315901140e0223222e0235343e0233321e0207
342e0423220e0215141e0233323e0403c72f6db0817aa7662b306cb0807b
a7662bb00e1b2b3c4d30556a3d161e41654838553d281809028a95f6b161
57a9f7a094f7b16157a9f7ac619a76553719508cbc6c91cb803a24435e72
8500>WGJAAA+Calibri AddT42Char 
3 0 0 <00050000fe7303d2050e000300070039004d004e0097b0852b58bc000d01
520016003a01b5b5154444082d07be014300020020015400080001014340
0f04020db71a1a3f23b735068d031149b8012db43f078d0202003ffddefd
ce2ffddeed12392fed012fdde1dee110f1ce11392f33e1d4e131301b4014
1a0db76c1a1a3f3523b76c3503068d6c03113f49b8012d40096c3f400207
8d6c020200183f2b1ace2bce2f2bce2b12392f2b30315901112111011121
1101140e020707140623222e02352726363333323e0235342623220e0223
222e02353436373e0333321e0203140e0223222e0235343e0233321e0201
03d2fc5a034ffd06027e233f5633051e1a0f140d0605021c18122d3c2510
535b253c2e1d0703070603050807283742224b6c4522da07111d15161d12
0808121d16151d1107fddb050efaf2050efb43046cfb9403063b5c3f2403
980a0802040606b81e18192a3b2149560f1310040b13101116080712110c
28445cfd86151c120808121c15151d120808121dfd4d>WGJAAA+Calibri AddT42Char 
WGJAAA+Calibri /CharStrings get begin
/zero 1004 def
end
WGJAAA+Calibri /Encoding get
dup 48 /zero put
pop
end
%ADOEndSubsetFont
/QPENPH+Calibri /WGJAAA+Calibri findfont ct_VMDictPut
/QPENPH+Calibri*1 
[48{/.notdef}rp /zero 207{/.notdef}rp]
QPENPH+Calibri nf
QPENPH+Calibri*1 [18.025 0 0 -18.025 0 0 ]msf
75.0284 333.21 mo
(0)sh
%ADOBeginSubsetFont: WGJAAA+Calibri AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal QPENPH+Calibri gcheck setglobal} if
5 2542 1008 <00020030fffa03d30514002a002e0125b0852b58403a252e01262d01272c
01242701242601251c01261b01231a012419012518012517012616012615
01261401261001260f012405012404012b1b0130b8ffc040120f024d6030
012d16180f024d162010014d16b8ffe0b30f014d16b8ffe0b70c014d161c
2e2e10b8fffc401d0f024d101810014d10100f014d10100d014d100a0c01
4d10100b014d10bb021100270004ffd4b30f024d04b8ffd0b30c014d04b8
ffe0400a0b014d0404302f271b2eb8010b400a042b2110100a21520a5500
3f3f12392f123933ed3232111201392f2b2b2b33e12b2b2b2b2b2b321133
cd2b2b2b2b3231305d2b005d015d5d5d5d5d5d5d5d5d5d5d5d5d5d5d5d5d
5d1bb3271b102eb8010b400b6c042b2110100a21520a5500183f3f12392f
1239332b3232303159011406232311140e0223222e02351121222e023534
3e0237013e0333321e0215113332160123012103d3141292081420191820
1307fdea0c100d0502060a0701d205131e2c1e21311e10921115fea102fe
5b01a701702126fef0080b080404080b08011006101e18131e19170d0312
080c080305080d09fcc62302e9fd3a00>QPENPH+Calibri AddT42Char 
QPENPH+Calibri /CharStrings get begin
/four 1008 def
end
QPENPH+Calibri /Encoding get
dup 52 /four put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/QPENPH+Calibri*1 
[48{/.notdef}rp /zero 3{/.notdef}rp /four 203{/.notdef}rp]
QPENPH+Calibri nf
QPENPH+Calibri*1 [18 0 0 -18 0 0 ]msf
212.658 336.635 mo
(4)sh
%ADOBeginSubsetFont: WGJAAA+Calibri AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal QPENPH+Calibri gcheck setglobal} if
4 9920 972 <00030052ffed03ba052100270037004701a4b0852b58b90036fff0b40f11
014c36b8fff0b40c0d014c35b8fff0b40f11014c35b8fff0b40c0d014c34
b8fff0b40f11014c34b8fff0b40c0d014c33b8fff0b311014d33b8fff0b3
0f014d49b8ffc0b60f024d60490130b8fff0b40c0d014c30b8fff0b40f10
014c30b8fff0b40c0d014c30b8ffe0b30b014d30b8021940191428100c0d
014c28100f10014c28100c0d014c28200b014d28b80218401a1e0f231e1e
180f014d14180f014d141e141e0a38100c0d014c38b8ffd040151d014d38
100f10014c38100c0d014c38200b014d38ba02430000ffd4b30f024d00b8
ffe0b30f014d00b8ffc0b314014d00b8ffc0b310014d00b8ffc0b30d014d
00b8ffc0b40b014d0042b8fff0400a0c0d014c42301d014d42b8fff0b40f
10014c42b8fff0b40c0d014c42b8ffe0b30b014d42b8024340110a400b01
4d0a353d052dfd195945fd055f003fed3fed123939012f2be12b2b2b2b2b
d42b2b2b2b2b2be12b2b2b2b2b1239392f2f2b2b12393910e12b2b2b2b10
e12b2b2b2b31305d2b002b2b2b2b2b2b2b2b1b400f353d05192dfd6c1959
0545fd6c055f00183f2b3f2b12393930315901140e0223222e0235343e02
372e0335343e0233321e0215140e02071e0303342e0223220615141e0217
363613342e02270e0315141633323603ba3c71a66b649e6e3a284b6e453c
5c402131639966628f5d2c21405d3c476f4b27d81d3853356c6f1b39573c
656c2a224567443f5f3d1f85848083014c54835a2e2a52784d3d66564b22
1f45515c36447758332f516e3f335e544920234a555f025f2a4430196255
27433c391f347efda22e4b413d211f3e42492c616a6b>QPENPH+Calibri AddT42Char 
5 3340 1012 <ffff0052ffed03ba0521020603cc0000>QPENPH+Calibri AddT42Char 
QPENPH+Calibri /CharStrings get begin
/eight 1012 def
end
QPENPH+Calibri /Encoding get
dup 56 /eight put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/QPENPH+Calibri*1 
[48{/.notdef}rp /zero 3{/.notdef}rp /four 3{/.notdef}rp /eight 199{/.notdef}rp]
QPENPH+Calibri nf
QPENPH+Calibri*1 [18.025 0 0 -18.025 0 0 ]msf
345.908 334.19 mo
(8)sh
%ADOBeginSubsetFont: WGJAAA+Calibri AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal QPENPH+Calibri gcheck setglobal} if
5 1210 1005 <000100ae0000039f0517002e010cb0852b584024241e01241d01241c0123
1b01241a01241901261801261701291201291101122010014d30b8ffc040
0d0f024d60300100200b014d0029b8ffe8b310014d29b8fff0b30f014d29
b8fff0b30d014d29b8fff6b30c014d29b8fff8b30b014d29b80211400e1e
18200b014d180b200b014d0b11b8ffe0b30f014d11b8ffd4b30f024d11b8
ffc0b310014d11b8ffe0b30f014d11b8ffc0b30c014d11b8fff040090b01
4da01101111312b8013fb323522910b80107b10654003fed323ffdcd012f
5d2b2b2b2b2b2bcd2bc42b33f12b2b2b2b2bc52b31305d2b002b015d5d5d
5d5d5d5d5d5d5d1bb313402312b8013fb56c2352290610b80107b26c0654
00183f2b323f2b1acd30315925140e022321222e0235343e023321110706
06262635343e0237253e0333321e02151133321e02039f060a0d07fd5c07
0c0b0606090d08010efa13170e0503060b09012a040c12181218201206ea
080e090544131a100707101a13121a110903d8950a040d1e171118100c06
bf0304040104070b06fb8f09111a>QPENPH+Calibri AddT42Char 
QPENPH+Calibri /CharStrings get begin
/one 1005 def
end
QPENPH+Calibri /Encoding get
dup 49 /one put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/QPENPH+Calibri*1 
[48{/.notdef}rp /zero /one 2{/.notdef}rp /four 3{/.notdef}rp /eight 199{/.notdef}rp]
QPENPH+Calibri nf
QPENPH+Calibri*1 [18 0 0 -18 0 0 ]msf
445.648 335.785 mo
(11)
[9.00006 0 ]xsh
%ADOBeginSubsetFont: WGJAAA+Calibri AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal QPENPH+Calibri gcheck setglobal} if
5 2994 1011 <00010063fffa03af050e001f00f2b0852b58b90011ffe8400a1121014c11
1010014d11b8ffe8b30f014d11b8fff0b30d014d11b8ffe8b30c014d11b8
fff8400a0b014d74110126110110b8ffe8400a1121014c101010014d10b8
ffe8b30f014d10b8fff0b30d014d10b8ffe8400b0b0c014c751001261001
06b8fff0b30b014d21b8ffc0b60f024d60210100b8ffc0b310014d00b8ff
d8b40b014d0015b8ffc0b30c014d15b8ffe8b30b014d15b8ffe8b30f014d
15b8ffe0b50f024d150511b8012db31a510b55003f3fed32012f2b2b2b2b
cd2b2b31305d2b2b5d5d2b2b2b2b2b5d5d2b2b2b2b2b2b1bb2051a11b801
2db46c1a510b5500183f3f2b3230315901140e0207010e03232226263637
0121222635343e023321321e0203af03050906fe2e050f17241a22261102
0601eafd931313050a0e0902f20e150b0604c4121d1b190efbce0c0f0903
060d130d044a2824131c130906121c00>QPENPH+Calibri AddT42Char 
QPENPH+Calibri /CharStrings get begin
/seven 1011 def
end
QPENPH+Calibri /Encoding get
dup 55 /seven put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/QPENPH+Calibri*1 
[48{/.notdef}rp /zero /one 2{/.notdef}rp /four 2{/.notdef}rp /seven /eight 
199{/.notdef}rp]
QPENPH+Calibri nf
QPENPH+Calibri*1 [18.025 0 0 -18.025 0 0 ]msf
658.198 334.21 mo
(17)
[9.02472 0 ]xsh
2 lc
0 lj
2 ml
668.068 218.49 mo
668.068 253.62 li
79.4584 253.62 li
79.4584 227.66 li
@
74.6884 227.72 mo
79.4584 218.18 li
84.2284 227.72 li
74.6884 227.72 li
cp
ef
264.803 149.63 mo
167.678 149.63 li
167.678 0 li
264.803 0 li
264.803 149.63 li
/1 
[/DeviceCMYK] /CSA add_res
/1 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 49.8216 345.875 ]ct
[98.6192 0 0 151.126 117.11 195.497 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 132 
/H 202 
/M[132 0 0 -202 0 202 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 132 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 132 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 132 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 132 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&Q2gmdmK&s]!<N;`!.k3&!/(=Q!X&N-
#ET2o#mUV:!Vufp!!30&!K[?b!<E6&rW)]n!s&B&!KdB^!J1=@!!E<*#7M02')3(A&.AdFpAb?t!<WH.
"ePqj"9\l3"9S_u!1s;X!W)kK!;?Hs"Uc"_*$(4_!$)4_)%m8Z!VcWr!<NCg#Q"`."p=u.p&P*nR0*$_
rrJ2]j8]>a"V)@k+Jg7K+Tro.(CLE@!!E<)"UGC6$0VZt#RCV9p&G'nrW<*%YQEkerW<0&!Mf_B!!WK.
%N-?4,.]#Q,6]88*uGCipAb?u!sSu9#ep\r$2t22"U"Dt!s/Q+!lG,d"9&?%!Or-B!!NE-%N-?4bp11P
"<np*$jHA*!s/Q/#LNjm#m(>8"SDco!nII`!rrAG!2ol$!X0&O+!TYgYp0Aq*uPIjpAb9s!sT"l$*+@6
#6b8'!<*&b"/H#!!T3sB!!NE-%N-?4ocp"P"<np*$jHA*!s/Q/#Pe[m#m(>8"SDco!r`:`!rrAo!.k1U
!!!'(%N-?4OWt&S*uPIj!!)fp!s/Q/#EK/k#6=u2o`4smP6:[a!!.oVlMq(i"V)Cl,+^%O,6T24)%6]C
!!<9)"p^k/mKiq""U+]&qZ-TsN<91^!.k4B!!NE-%N-?4Q6Z;P"<np*$jHA*!s/Q/#FYtm#m(>8"SDco
!hTS`!rr@e!8db[!X0&O+!R^0kT^3S*uPIjpAb9s!sT"5$/u6m#6b8'!<*&+"5<nX!N?(B!!NE-%N-?4
^*D,P"<np*$jHA*!s/Q/#Jpem#m(>8"SDco!lkD`!rrA8!4Mq3!X0&O+!T,X^`rt+*uPIjpAb9s!sT"]
$+^EE#6b8'!<*&S"1&(0!RUnB!!NE-%N-?4js-rP"<np*$jHA*!s/Q/#O2Vm#m(>8"SDco!q-5`!rrA`
!07*`!X0&O+!UP+Qm2_X*uPIjpAb9s!sT#0$'GSr#6b8'!!!*#!f[9^!Vl_I!;Z[!!X0&O+!Qgl!?rTe
)%6]C!!<9)"p^=ur<WN1"U+JurW8Ghp&b9qNWA2A"Tei;)':&t,OZi[+s.[2"oJAu!!<9)"p^1q!s\u4
!;6El!g!N`!rr@V!:Bgj!X0&O+!R1!pEKeb*uPIjpAb9s!sT"&$1S<'#6b8'!<*%q"6osg!La#B!!NE-
%N-?4Y9W'P"<np*$jHA*!s/Q/#I=`m#m(>8"SDco!k8?`!rrA)!6,!B!X0&O+!STIcQ`Q:*uPIjpAb9s
!sT"N$-<JT#6b8'!<*&D"2Y-?!Q"iB!!NE-%N-?4f-@mP"<np*$jHA*!s/Q/#MTQm#m(>8"SDco!oO0`
!rrAQ!1j/o!X0&O+!U"qV]u<g*uPIjpAb9s!sT#!$)%Y,#6b8'!<*&l".B;l!U9ZB!!`Q/%N-?4,9rBs
"<np*$jHA*!<N?("p^1q!XAl3q#L?nrW8&]!!3'!JcPHD"Tei;)':&e,Q8nj+s.[2"nr!!!WrW3QjNNo
!XAl3o`4smSHJBa!!/8`jT,5Z"Tei;)':&b,6T24)%6]C!!<9)"p^4r!so29"SDco!gNl`!rr@[!9jIe
!X0&O+!R@&nfn8]*uPIjpAb9s!sT"+$1%s"#6b8'!<*&!"6BUb!M9AB!!NE-%N-?4Zm4EP"<np*$jHA*
!s/Q/#Ik)m#m(>8"SDco!ke]`!rrA.!5SX=!X0&O+!ScNas.$5*uPIjpAb9s!sT"S$,d,O#6b8'!<*&I
"2+d:!QP2B!!NE-%N-?4g`s6P"<np*$jHA*!s/Q/#N,om#m(>8"SDco!p'N`!rrAV!1<fj!X0&O+!U2!
U*Bdb*uPIjpAb9s!sT#&$(M;'#6b8'!<*&q"-irg!Ug#B!!33*%K[Li,*=)Q+s.[2"o85u!!<9)"p^1q
!XAl3rW)]nrW8)^!<W@U!:Tsl!X0&O+!R*tq'-"d*uPIjpAb9s!sT"$$1eH)#6b8'!<*%o"7-*i!W)kK
!;HNt!X0&O+!Qgl"<np*$jHA*!s/Q/#F,Vm#m(>8"SDco!h'5`!rr@`!9=+`!X0&O+!RO+m3;`X*uPIj
pAb9s!sT"0$0MTr#6b8'!<*&&"5j7]!Mf_B!!NE-%N-?4\KfcP"<np*$jHA*!s/Q/#JCGm#m(>8"SDco
!l>&`!rrA3!5&:8!X0&O+!SrS`?PL0*uPIjpAb9s!sT"X$,6cJ#6b8'!<*&N"1SF5!R(PB!!NE-%N-?4
i?PTP"<np*$jHA*!s/Q/#NZ8m#m(>8"SDco!pTl`!rrA[!0dHe!X0&O+!UA&SKe7]*uPIjpAb9s!sT#+
$'tr"#6b8'!<*'!"-<Tb!V?AD!!`K(!X0&O+!Qgl"sP-,$j?V2q#CKu!sT!k#lk22"U+JurW88cqZ?g!
M#ciA"Tei;)':&o,P32`+s.[2"nr!!!WrW3U'^5o!XAl3qZ-KnrW8&]!<E1P!:p0o!X0&O+!R!qr$)=g
*uPIjpAb9s!sT"!$2+Z,#6b8'!<*%l"7H<l!L3ZB!!NE-%N-?4W[$^P"<np*$jHA*!s/Q/#HeBm#m(>8
"SDco!j`!`!rrA$!6Y?G!X0&O+!SEDe0>)?*uPIjpAb9s!sT"I$-ihY#6b8'!<*&?"31KD!PJKB!!NE-
%N-?4dNcOP"<np*$jHA*!s/Q/#M'3m#m(>8"SDco!o!g`!rrAL!2BMt!X0&O+!ThlX<Ril*uPIjpAb9s
!sT"q$)S"1#6b8'!<*&g".oYq!Ta<B!!NE-%N-?4qBM@P"<np*$jHA*!s/Q/#Q>$m#m(>8"SD`p!ri=]
!rrAt!.k4I!!NE-%N-?4OWslN*s*;g"nr!!!WrW3P6q0o!XAl3o`4smQim$a!!/)[jo>Pd"V)Cl,,6CO
,6T24)%6]H!;lg!!WrW3NsPmn"U"i!!<*%]"9&B&!JUUB!!NE-%N-?4Rj7YP"<np*$jHA*!s/Q/#G2=m
#m(>8"SDco!i,q`!rr@j!87DV!X0&O+!Rm5j!+[N*uPIjpAb9s!sT":$/Gmh#6b8'!<*&0"4dPS!NlFB
!!NE-%N-?4_^!JP"<np*$jHA*!s/Q/#KI.m#m(>8"SDco!mCb`!rrA=!3uS.!X0&O+!T;]]-@G&*uPIj
pAb9s!sT"b$+1'@#6b8'!<*&X"0M_+!S.7B!!NE-%N-?4lQ`;P"<np*$jHA*!s/Q/#O_tm#m(>8"SDco
!qZS`!rrAe!/^a]!X0&O+!MpSP9U2S*uPIjpAb3q!s&T2NsPjm"U+W$r;cfuN<9.]rW%NMo`,-s"V)Cl
,*X>O,6T24)%6]C!!<9)"p^M%p^%!,"U+JurW8VmnH/alP5s\Er;[!&"V)Cl,*=)Q+s.[2"nr!!!WrW3
O9l!q#6b8'!<*%b"8N$!!K-sB!!NE-%N-?4THj"P"<np*$jHA*!s/Q/#G_[m#m(>8"SDco!iZ:`!rr@o
!7_&Q!X0&O+!S':hBN.I*uPIjpAb9s!sT"?$.oOc#6b8'!<*&5"472N!ODdB!!NE-%N-?4a<ShP"<np*
$jHA*!s/Q/#L!Lm#m(>8"SDco!mq+`!rrAB!3H5)!X0&O+!TJb[Nbo!*uPIjpAb9s!sT"g$*X^;#6b8'
!<*&]"/uA&!S[UB!!NE-%N-?4n0=YP"<np*$jHA*!s/Q/#P8=m#m(>8"SDco!r2q`!rrAj!/1CS!X0&8
)':&b,6T24)%6]F!<)s#!WrW3NsPjm"U+f)p]19pNWT:a!JCIB!!NE-%N-?4R3VMP"<np*$jHA*!s/Q/
#Fu1m#m(>8"SDco!hoe`!rrB!!.k4G!!NE-%N-?4OWsuQ*uPIjpAb9s!sT!q$2Y#1#6b8'!<*%g"7uZq
!K[<B!!NE-%N-?4V'G@P"<np*$jHA*!s/Q/#H8$m#m(>8"SDco!j2X`!rr@t!71]L!X0&O+!S6?fcpVD
*uPIjpAb9s!sT"D$.B1^#6b8'!<*&:"3^iI!Or-B!!NE-%N-?4bp11P"<np*$jHA*!s/Q/#LNjm#m(>8
"SDco!nII`!rrAG!2ol$!X0&O+!TYgYp0Aq*uPIjpAb9s!sT"l$*+@6#6b8'!<*&b"/H#!!T3sB!!NE-
%N-?4ocp"P"<np*$jHA*!s/Q/#Pe[m#m(>8"SDco!r`:`!rrAo!.k1U!!!'(%N-?4OWt&S*uPIj!!)fp
!s/Q/#EK/k#6=u2o`4smP6:[a!!.oVlMq(i"V)Cl,+^%O,6T24)%6]C!!<9)"p^k/mKiq""U+]&qZ-Ts
N<91^!.k4B!!NE-%N-?4Q6Z;P"<np*$jHA*!s/Q/#FYtm#m(>8"SDco!hTS`!rr@e!8db[!X0&O+!R^0
kT^3S*uPIjpAb9s!sT"5$/u6m#6b8'!<*&+"5<nX!N?(B!!NE-%N-?4^*D,P"<np*$jHA*!s/Q/#Jpem
#m(>8"SDco!lkD`!rrA8!4Mq3!X0&O+!T,X^`rt+*uPIjpAb9s!sT"]$+^EE#6b8'!<*&S"1&(0!RUnB
!!NE-%N-?4js-rP"<np*$jHA*!s/Q/#O2Vm#m(>8"SDco!q-5`!rrA`!07*`!X0&O+!UP+Qm2_X*uPIj
pAb9s!sT#0$'GSr#6b8'!!!*#!f[9^!Vl_I!;Z[!!X0&O+!Qgl!?rTe)%6]C!!<9)"p^=ur<WN1"U+Ju
rW8Ghp&b9qNWA2A"Tei;)':&t,OZi[+s.[2"oJAu!!<9)"p^1q!s\u4!;6El!g!N`!rr@V!:Bgj!X0&O
+!R1!pEKeb*uPIjpAb9s!sT"&$1S<'#6b8'!<*%q"6osg!La#B!!NE-%N-?4Y9W'P"<np*$jHA*!s/Q/
#I=`m#m(>8"SDco!k8?`!rrA)!6,!B!X0&O+!STIcQ`Q:*uPIjpAb9s!sT"N$-<JT#6b8'!<*&D"2Y-?
!Q"iB!!NE-%N-?4f-@mP"<np*$jHA*!s/Q/#MTQm#m(>8"SDco!oO0`!rrAQ!1j/o!X0&O+!U"qV]u<g
*uPIjpAb9s!sT#!$)%Y,#6b8'!<*&l".B;l!U9ZB!!`Q/%N-?4,9rBs"<np*$jHA*!<N?("p^1q!XAl3
q#L?nrW8&]!!3'!JcPHD"Tei;)':&e,Q8nj+s.[2"nr!!!WrW3QjNNo!XAl3o`4smSHJBa!!/8`jT,5Z
"Tei;)':&b,6T24)%6]C!!<9)"p^4r!so29"SDco!gNl`!rr@[!9jIe!X0&O+!R@&nfn8]*uPIjpAb9s
!sT"+$1%s"#6b8'!<*&!"6BUb!M9AB!!NE-%N-?4Zm4EP"<np*$jHA*!s/Q/#Ik)m#m(>8"SDco!ke]`
!rrA.!5SX=!X0&O+!ScNas.$5*uPIjpAb9s!sT"S$,d,O#6b8'!<*&I"2+d:!QP2B!!NE-%N-?4g`s6P
"<np*$jHA*!s/Q/#N,om#m(>8"SDco!p'N`!rrAV!1<fj!X0&O+!U2!U*Bdb*uPIjpAb9s!sT#&$(M;'
#6b8'!<*&q"-irg!Ug#B!!33*%K[Li,*=)Q+s.[2"o85u!!<9)"p^1q!XAl3rW)]nrW8)^!<W@U!:Tsl
!X0&O+!R*tq'-"d*uPIjpAb9s!sT"$$1eH)#6b8'!<*%o"7-*i!W)kK!;HNt!X0&O+!Qgl"<np*$jHA*
!s/Q/#F,Vm#m(>8"SDco!h'5`!rr@`!9=+`!X0&O+!RO+m3;`X*uPIjpAb9s!sT"0$0MTr#6b8'!<*&&
"5j7]!Mf_B!!NE-%N-?4\KfcP"<np*$jHA*!s/Q/#JCGm#m(>8"SDco!l>&`!rrA3!5&:8!X0&O+!SrS
`?PL0*uPIjpAb9s!sT"X$,6cJ#6b8'!<*&N"1SF5!R(PB!!NE-%N-?4i?PTP"<np*$jHA*!s/Q/#NZ8m
#m(>8"SDco!pTl`!rrA[!0dHe!X0&O+!UA&SKe7]*uPIjpAb9s!sT#+$'tr"#6b8'!<*'!"-<Tb!V?AD
!!`K(!X0&O+!Qgl"sP-,$j?V2q#CKu!sT!k#lk22"U+JurW88cqZ?g!M#ciA"Tei;)':&o,P32`+s.[2
"nr!!!WrW3U'^5o!XAl3qZ-KnrW8&]!<E1P!:p0o!X0&O+!R!qr$)=g*uPIjpAb9s!sT"!$2+Z,#6b8'
!<*%l"7H<l!L3ZB!!NE-%N-?4W[$^P"<np*$jHA*!s/Q/#HeBm#m(>8"SDco!j`!`!rrA$!6Y?G!X0&O
+!SEDe0>)?*uPIjpAb9s!sT"I$-ihY#6b8'!<*&?"31KD!PJKB!!NE-%N-?4dNcOP"<np*$jHA*!s/Q/
#M'3m#m(>8"SDco!o!g`!rrAL!2BMt!X0&O+!ThlX<Ril*uPIjpAb9s!sT"q$)S"1#6b8'!<*&g".oYq
!Ta<B!!NE-%N-?4qBM@P"<np*$jHA*!s/Q/#Q>$m#m(>8"SD`p!ri=]!rrAt!.k4I!!NE-%N-?4OWslN
*s*;g"nr!!!WrW3P6q0o!XAl3o`4smQim$a!!/)[jo>Pd"V)Cl,,6CO,6T24)%6]H!;lg!!WrW3NsPmn
"U"i!!<*%]"9&B&!JUUB!!NE-%N-?4Rj7YP"<np*$jHA*!s/Q/#G2=m#m(>8"SDco!i,q`!rr@j!87DV
!X0&O+!Rm5j!+[N*uPIjpAb9s!sT":$/Gmh#6b8'!<*&0"4dPS!NlFB!!NE-%N-?4_^!JP"<np*$jHA*
!s/Q/#KI.m#m(>8"SDco!mCb`!rrA=!3uS.!X0&O+!T;]]-@G&*uPIjpAb9s!sT"b$+1'@#6b8'!<*&X
"0M_+!S.7B!!NE-%N-?4lQ`;P"<np*$jHA*!s/Q/#O_tm#m(>8"SDco!qZS`!rrAe!/^a]!X0&O+!MpS
P9U2S*uPIjpAb3q!s&T2NsPjm"U+W$r;cfuN<9.]rW%NMo`,-s"V)Cl,*X>O,6T24)%6]C!!<9)"p^M%
p^%!,"U+JurW8VmnH/alP5s\Er;[!&"V)Cl,*=)Q+s.[2"nr!!!WrW3O9l!q#6b8'!<*%b"8N$!!K-sB
!!NE-%N-?4THj"P"<np*$jHA*!s/Q/#G_[m#m(>8"SDco!iZ:`!rr@o!7_&Q!X0&O+!S':hBN.I*uPIj
pAb9s!sT"?$.oOc#6b8'!<*&5"472N!ODdB!!NE-%N-?4a<ShP"<np*$jHA*!s/Q/#L!Lm#m(>8"SDco
!mq+`!rrAB!3H5)!X0&O+!TJb[Nbo!*uPIjpAb9s!sT"g$*X^;#6b8'!<*&]"/uA&!S[UB!!NE-%N-?4
n0=YP"<np*$jHA*!s/Q/#P8=m#m(>8"SDco!r2q`!rrAj!/1CS!X0&8)':&b,6T24)%6]F!<)s#!WrW3
NsPjm"U+f)p]19pNWT:a!JCIB!!NE-%N-?4R3VMP"<np*$jHA*!s/Q/#Fu1m#m(>8"SDco!hoe`!rrB!
!.k4G!!NE-%N-?4OWsuQ*uPIjpAb9s!sT!q$2Y#1#6b8'!<*%g"7uZq!K[<B!!NE-%N-?4V'G@P"<np*
$jHA*!s/Q/#H8$m#m(>8"SDco!j2X`!rr@t!71]L!X0&O+!S6?fcpVD*uPIjpAb9s!sT"D$.B1^#6b8'
!<*&:"3^iI!Or-B!!NE-%N-?4bp11P"<np*$jHA*!s/Q/#LNjm#m(>8"SDco!nII`!rrAG!2ol$!X0&O
+!TYgYp0Aq*uPIjpAb9s!sT"l$*+@6#6b8'!<*&b"/H#!!T3sB!!NE-%N-?4ocp"P"<np*$jHA*!s/Q/
#Pe[m#m(>8"SDco!r`:`!rrAo!.k1U!!!'(%N-?4OWt&S*uPIj!!)fp!s/Q/#EK/k#6=u2o`4smP6:[a
!!.oVlMq(i"V)Cl,+^%O,6T24)%6]C!!<9)"p^k/mKiq""U+]&qZ-TsN<91^!.k4B!!NE-%N-?4Q6Z;P
"<np*$jHA*!s/Q/#FYtm#m(>8"SDco!hTS`!rr@e!8db[!X0&O+!R^0kT^3S*uPIjpAb9s!sT"5$/u6m
#6b8'!<*&+"5<nX!N?(B!!NE-%N-?4^*D,P"<np*$jHA*!s/Q/#Jpem#m(>8"SDco!lkD`!rrA8!4Mq3
!X0&O+!T,X^`rt+*uPIjpAb9s!sT"]$+^EE#6b8'!<*&S"1&(0!RUnB!!NE-%N-?4js-rP"<np*$jHA*
!s/Q/#O2Vm#m(>8"SDco!q-5`!rrA`!07*`!X0&O+!UP+Qm2_X*uPIjpAb9s!sT#0$'GSr#6b8'!!!*#
!f[9^!Vl_I!;Z[!!X0&O+!Qgl!?rTe)%6]C!!<9)"p^=ur<WN1"U+JurW8Ghp&b9qNWA2A"Tei;)':&t
,OZi[+s.[2"oJAu!!<9)"p^1q!s\u4!;6El!g!N`!rr@V!:Bgj!X0&O+!R1!pEKeb*uPIjpAb9s!sT"&
$1S<'#6b8'!<*%q"6osg!La#B!!NE-%N-?4Y9W'P"<np*$jHA*!s/Q/#I=`m#m(>8"SDco!k8?`!rrA)
!6,!B!X0&O+!STIcQ`Q:*uPIjpAb9s!sT"N$-<JT#6b8'!<*&D"2Y-?!Q"iB!!NE-%N-?4f-@mP"<np*
$jHA*!s/Q/#MTQm#m(>8"SDco!oO0`!rrAQ!1j/o!X0&O+!U"qV]u<g*uPIjpAb9s!sT#!$)%Y,#6b8'
!<*&l".B;l!U9ZB!!`Q/%N-?4,9rBs"<np*$jHA*!<N?("p^1q!XAl3q#L?nrW8&]!!3'!JcPHD"Tei;
)':&e,Q8nj+s.[2"nr!!!WrW3QjNNo!XAl3o`4smSHJBa!!/8`jT,5Z"Tei;)':&b,6T24)%6]C!!<9)
"p^4r!so29"SDco!gNl`!rr@[!9jIe!X0&O+!R@&nfn8]*uPIjpAb9s!sT"+$1%s"#6b8'!<*&!"6BUb
!M9AB!!NE-%N-?4Zm4EP"<np*$jHA*!s/Q/#Ik)m#m(>8"SDco!ke]`!rrA.!5SX=!X0&O+!ScNas.$5
*uPIjpAb9s!sT"S$,d,O#6b8'!<*&I"2+d:!QP2B!!NE-%N-?4g`s6P"<np*$jHA*!s/Q/#N,om#m(>8
"SDco!p'N`!rrAV!1<fj!X0&O+!U2!U*Bdb*uPIjpAb9s!sT#&$(M;'#6b8'!<*&q"-irg!Ug#B!!33*
%K[Li,*=)Q+s.[2"o85u!!<9)"p^1q!XAl3rW)]nrW8)^!<W@U!:Tsl!X0&O+!R*tq'-"d*uPIjpAb9s
!sT"$$1eH)#6b8'!<*%o"7-*i!W)kK!;HNt!X0&O+!Qgl"<np*$jHA*!s/Q/#F,Vm#m(>8"SDco!h'5`
!rr@`!9=+`!X0&O+!RO+m3;`X*uPIjpAb9s!sT"0$0MTr#6b8'!<*&&"5j7]!Mf_B!!NE-%N-?4\KfcP
"<np*$jHA*!s/Q/#JCGm#m(>8"SDco!l>&`!rrA3!5&:8!X0&O+!SrS`?PL0*uPIjpAb9s!sT"X$,6cJ
#6b8'!<*&N"1SF5!R(PB!!NE-%N-?4i?PTP"<np*$jHA*!s/Q/#NZ8m#m(>8"SDco!pTl`!rrA[!0dHe
!X0&O+!UA&SKe7]*uPIjpAb9s!sT#+$'tr"#6b8'!<*'!"-<Tb!V?AD!!`K(!X0&O+!Qgl"sP-,$j?V2
q#CKu!sT!k#lk22"U+JurW88cqZ?g!M#ciA"Tei;)':&o,P32`+s.[2"nr!!!WrW3U'^5o!XAl3qZ-Kn
rW8&]!<E1P!:p0o!X0&O+!R!qr$)=g*uPIjpAb9s!sT"!$2+Z,#6b8'!<*%l"7H<l!L3ZB!!NE-%N-?4
W[$^P"<np*$jHA*!s/Q/#HeBm#m(>8"SDco!j`!`!rrA$!6Y?G!X0&O+!SEDe0>)?*uPIjpAb9s!sT"I
$-ihY#6b8'!<*&?"31KD!PJKB!!NE-%N-?4dNcOP"<np*$jHA*!s/Q/#M'3m#m(>8"SDco!o!g`!rrAL
!2BMt!X0&O+!ThlX<Ril*uPIjpAb9s!sT"q$)S"1#6b8'!<*&g".oYq!Ta<B!!NE-%N-?4qBM@P"<np*
$jHA*!s/Q/#Q>$m#m(>8"SD`p!ri=]!rrAt!.k4I!!NE-%N-?4OWslN*s*;g"nr!!!WrW3P6q0o!XAl3
o`4smQim$a!!/)[jo>Pd"V)Cl,,6CO,6T24)%6]H!;lg!!WrW3NsPmn"U"i!!<*%]"9&B&!JUUB!!NE-
%N-?4Rj7YP"<np*$jHA*!s/Q/#G2=m#m(>8"SDco!i,q`!rr@j!87DV!X0&O+!Rm5j!+[N*uPIjpAb9s
!sT":$/Gmh#6b8'!<*&0"4dPS!NlFB!!NE-%N-?4_^!JP"<np*$jHA*!s/Q/#KI.m#m(>8"SDco!mCb`
!rrA=!3uS.!X0&O+!T;]]-@G&*uPIjpAb9s!sT"b$+1'@#6b8'!<*&X"0M_+!S.7B!!NE-%N-?4lQ`;P
"<np*$jHA*!s/Q/#O_tm#m(>8"SDco!qZS`!rrAe!/^a]!X0&O+!MpSP9U2S*uPIjpAb3q!s&T2NsPjm
"U+W$r;cfuN<9.]rW%NMo`,-s"V)Cl,*X>O,6T24)%6]C!!<9)"p^M%p^%!,"U+JurW8VmnH/alP5s\E
r;[!&"V)Cl,*=)Q+s.[2"nr!!!WrW3O9l!q#6b8'!<*%b"8N$!!K-sB!!NE-%N-?4THj"P"<np*$jHA*
!s/Q/#G_[m#m(>8"SDco!iZ:`!rr@o!7_&Q!X0&O+!S':hBN.I*uPIjpAb9s!sT"?$.oOc#6b8'!<*&5
"472N!ODdB!!NE-%N-?4a<ShP"<np*$jHA*!s/Q/#L!Lm#m(>8"SDco!mq+`!rrAB!3H5)!X0&O+!TJb
[Nbo!*uPIjpAb9s!sT"g$*X^;#6b8'!<*&]"/uA&!S[UB!!WK.%N-?4,4QnQ,6]88*uGCipAb?u!sSu9
#keRr$2t22"U"Dt!s/Q+!r<"d"9&?%!Ug#B!!30)%K[Ih+H[fM+<;7+"o85u!!E<)"UGBr#m1G="p4c(
q#CBqrW<*%P61^c!<N:T!:Kmk"Uc"_*$(IfqA]\[*#T@r"9J8t!W`?*S-SWj!sSl0!VQNn!MKS^!ri;u
!.k4G!!E<*#7M0*&d/gY$jQk.!!NB(!sAc2QN[6i"9er3!s8,qQN?[YO9";@!s/T/#G_Xm#QtG="U"l"
!!30&!N?.a!WrH(!Whro!s&B&!NuL`!<3(o!6kKD!k/3^!<E6&XoO%RJcLB&JcLB&JcLB&JcLB&JcLB&
JcLB&JcLB&JcLB&JcLB&JcLB&jT'l4JcPNFJ,~>

%%EndBinary
grestore
np
172.288 142.55 mo
259.69 142.55 li
259.69 3.31 li
172.288 3.31 li
cp
1 /0 /CSD get_res sepcs
0 sep
ef
1.5 lw
172.288 142.55 mo
259.69 142.55 li
259.69 3.31 li
172.288 3.31 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
%ADOBeginSubsetFont: WGJAAA+Calibri AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal QPENPH+Calibri gcheck setglobal} if
3 632 28 <000100ac0000037c050e002c00aeb0852b58b11a27b8ffe8b310014d27b8
fff0b30f014d27b8fff0b30d014d27b8fff6b30c014d27b8ffe8b30b014d
27b80211400909132013200009001ab80108400d802601c02601d0260126
260619b8010cb20d5127b8010cb10654003fed3fed12392f5d7172ed012f
2f1239392f2f10e12b2b2b2b2b3231301bb1261ab80108400b6c00260116
032626060d19b8010cb46c0d510627b8010cb26c065400183f2b3f2b1239
2f5f5e5d2b30315925140e0223212226351134363321321e0215140e0223
211121321e0215140e0223211121321e02037c040a0d08fd931729291702
66080d080505080d08fe0601b2080d090404090d08fe4e0201080d0a0447
121b12081f270482271f08121b14121b1108fe6a09101c13121a1007fe31
08111b00>QPENPH+Calibri AddT42Char 
3 1738 87 <000200acfffa03c7050e001c0029009fb0852b58b12406b8ffe8b310014d
06b8fff0b30f014d06b8fff0b30d014d06b8fff6b30c014d06b8ffe8b30b
014d06b802114017111d1810014d1d100f014d1d100c0d014c1d200b014d
1db80232b2001125b8010ab306060c23b8010bb315510c55003f3fed1239
2fed012fd4e12b2b2b2b10e12b2b2b2b2b3231301bb10625b8010ab56c06
060c1523b8010bb46c15510c5500183f3f2b12392f2b30315901140e0223
2311140e0223222e02351134363321321e0407342e0223231133323e0203
c74077ad789309132119192114082a1a01152a4d696d4c29b53b575d2c9f
9b4e6746240393619c6e3cfe2e080c070505070c0804aa282207173f5c79
574f6a340efdf9284763>QPENPH+Calibri AddT42Char 
QPENPH+Calibri /CharStrings get begin
/E 28 def
/P 87 def
end
QPENPH+Calibri /Encoding get
dup 69 /E put
dup 80 /P put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/QPENPH+Calibri*1 
[48{/.notdef}rp /zero /one 2{/.notdef}rp /four 2{/.notdef}rp /seven /eight 
12{/.notdef}rp /E 10{/.notdef}rp /P 175{/.notdef}rp]
QPENPH+Calibri nf
QPENPH+Calibri*1 [24.025 0 0 -24.025 0 0 ]msf
198.078 43.18 mo
(EP)
[12.0004 0 ]xsh
QPENPH+Calibri*1 [24.025 0 0 -24.025 0 0 ]msf
222.198 43.18 mo
(1)sh
%ADOBeginSubsetFont: HIBBAA+Calibri,Italic Initial
ct_T42Dict begin
-0.723 -0.273 1.258 1.023
 256 array 0 1 255 {1 index exch /.notdef put} for  /HIBBAA+Calibri,Italic
Type42DictBegin
[<00010000000c000c000c000c4f532f32797cb2a9000000cc000000606376
7420ba7ecec70000012c000005146670676dbcb878d40000064000000d24
676c796639d5f86b0000b7d40000641268656164f4fe8557000013640000
0036686865610da918230000139c00000024686d74782b0b151c000013c0
00003e386c6f6361875a7037000051f80000234a6d6178701c8c12560000
7544000000206e616d65c2ce8bfc00007564000031397072657084dfed00
0000a6a000001131676469720000000000000000000000000003042b0190
00050008059905330000011e05990533000003d0008602000800020f0502
0202040a0204e0000aff4000247b00000001000000004d53202000010000
fb030600fe0001c4079e0226200001bf0000000003bd0511000000200003
0000079e0000fe930000000000000000000000000050006a007300800080
0086008d009300bf00db006200830093009900a000a600a900b000c100c9
00d700000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000fe79056d000c03b700060013
0000fffaffedfea6ffedfeb8050e000600130000fffaffedfe93050e0013
0420000600130000fffaffedff10ffee050e00130420000600130000fffa
ffeefe93ff10feb80612000a050e0006000d02d2fffafff301fdfffa023f
0006000dff36fffafff302870006000f0000fffafff1079efeaffea70000
00000000000000000000004a004c00540055005600570059004f004e004f
00500051004d005d005f00610063006400650066006700680069006a006b
006c006d006e006d0066006f007000710072007300740075007600710074
00700071007200740075007600780079007a007d00780079007a007b007c
007d0079007c007a007c007d007e007f00800081007e007f008000810082
007f008000810082007e007f008000810082008300850083008400850086
008700880089008600880089008300840085008600870088008900830084
00850086008700880089008a008b008c008d008e008f008a008b008c008d
008f008a008b008c008d008e008f008a008b008c008d008e008f00900095
00900091009200930094009500980099009a009b009c0090009100930096
0097009b009c009f00a20094009600900091009200930094009500960097
00980099009a009b009c009d009e009f00a000a100a200a300a600a70090
00910092009300940095009600980099009f00bc00bd00c100c600be00bf
00bf00c100c200b900be00c200df00e000e400e700e800e9012b01360147
00f200f400cf00640066006a006c006d0070006c006d0069006c00670073
00740075007600770078007a007b007c007d007e00810084008500860087
00880089008a0076007a007b007c007e007f008000820083008400870088
0089008a0077008500870079008200840085008600870088008a0079007a
007c007d007e0081008300840086008700880089008b008c008d008e008f
00900091009200940095008b008c008d008e008f0093009400950093008b
008c008d008e00900091009200930094008c008d008e008f009000910092
009300940095009700980099009a009b009c0096009700980099009a009b
009c009a009c009600980099009a009b009c00960097009b009c009d009e
009f00a000a100a2009d009e009f00a000a100a200a1009d009e009f00a0
00a100a2009d009e009f00a000a100a200a300a500a300a400a500a600a7
00a300a500a300a400a500a600a700a300a400a500a600a700a800a900a8
00a900aa00ab00ac00a800ab00ac00a800a900aa00ab00ac00a800a900aa
00ab00ac00ad00ae00af00b000b100b300b500b600b700b800af00b000b1
00b300b400b700ad00ae00af00b000b100b200b300b400b500b600b700b8
00ad00ae00af00b000b100b200b300b400b500b600b700ba00bb00bc00bd
00bf00c000c100c200c300c400ba00bb00bf00c300b900ba00bb00bc00bf
00c100c200c300ba00bc00bf00c200c700c900cb00cc00cd00c500c600c7
00c600c700cb00ce00cf00d100d200db00dc00de00df00e000e400d600e8
00e90123012b00d000d1042600d8050e010503c000c2024e0078042600d7
02990092000005e4000e4059868574737271706f6e6d6c6b6a6968676665
625f5e5d5c5b5a59585554535251504f4e4d4c4b4a494847464544434241
403f3e3d3c3b3a39383736352f2e2d2c2826252423221f181411100f0d0b
0a090807060504030201002c4523466020b02660b004262348482d2c4523
46236120b02661b004262348482d2c45234660b0206120b04660b0042623
48482d2c4523462361b0206020b02661b02061b004262348482d2c452346
60b0406120b06660b004262348482d2c4523462361b0406020b02661b040
61b004262348482d2c0110203c003c2d2c20452320b0cd442320b8015a51
582320b08d44235920b0ed51582320b04d44235920b0042651582320b00d
44235921212d2c20204518684420b001602045b04676688a4560442d2c01
b10b0a432343650a2d2c00b10a0b4323430b2d2c00b0282370b101283e01
b0282370b10228453ab10200080d2d2c2045b00325456164b05051584544
1b2121592d2c2045b0004360442d2c01b00643b00743650a2d2c2069b040
61b0008b20b12cc08a8cb8100062602b0c642364615c58b00361592d2c8a
03458a8a87b0112bb0292344b0297ae4182d2c4565b02c234445b02b2344
2d2c4b525845441b2121592d2c01b005251023208af500b0016023edec2d
2c01b005251023208af500b0016123edec2d2c01b0062510f500edec2d2c
20b001600110203c003c2d2c20b001610110203c003c2d2c00b00743b006
430b2d2c21210c6423648bb84000622d2c21b08051580c6423648bb82000
621bb200402f2b59b002602d2c21b0c051580c6423648bb81555621bb200
802f2b59b002602d2c0c6423648bb84000626023212d2c45234560234560
23456023766818b08062202d2cb00426b00426b00425b0042545234520b0
03266062636820b0032661658a2344442d2c2045b0005458b040442045b0
4061441b2121592d2c45b1302f4523456160b0016069442d2c4b5158b02f
2370b01423421b2121592d2c4b515820b0032545695358441b2121591b21
21592d2c45b01443b0006063b0016069442d2cb02f45442d2c452320458a
60442d2c45234560442d2c4b235158b90033ffe0b134201bb33300340059
44442d2cb0164358b00326458a586466b01f601b64b020606620581b21b0
4059b001615923586559b02923442310b029e01b2121212121592d2cb016
4358b004254564b020606620581b21b04059b0016123586559b0292344b0
0425b00725082058021b0359b0052510b004252046b0042523423cb00725
10b006252046b00425b0016023423c2058011b0059b0052510b00425b029
e0b0072510b00625b029e0b00425b00725082058021b0359b00425b00325
4348b00625b00325b0016043481b2159212121212121212d2cb0164358b0
04254564b020606620581b21b04059b0016123581b6559b0292344b00525
b00825082058021b0359b0042510b005252046b0042523423cb00425b007
2508b0072510b006252046b00425b0016023423c2058011b0059b0042510
b00525b029e0b02920456544b0072510b00625b029e0b00525b008250820
58021b0359b00525b003254348b00425b0072508b00625b00325b0016043
481b2159212121212121212d2c02b00425202046b004252342b0052508b0
03254548212121212d2c02b0032520b0042508b0022543482121212d2c45
2320451820b00050205823652359236820b040505821b04059235865598a
60442d2c4b53234b515a5820458a60441b2121592d2c4b545820458a6044
1b2121592d2c4b53234b515a58381b2121592d2cb000214b5458381b2121
592d2cb002435458b0462b1b21212121592d2cb002435458b0472b1b2121
21592d2cb002435458b0482b1b21212121592d2cb002435458b0492b1b21
2121592d2c2320b000508a8a64b10003255458b0401bb10103255458b005
438b59b04f2b5923b0622b2321235865592d2cb108000c215460432d2c01
4623466023466123201020468a61b8ff80628ab140408a704560683a2d2c
208a2349648a2353583c1b21592d2c4b52587d1b7a592d2cb012004b014b
54422d2cb1020042b123018851b1400188535a58b910000020885458b202
010243604259b12401885158b920000040885458b2020202436042b12401
885458b2022002436042004b014b5258b2020802436042591bb940000080
885458b202040243604259b94000008063b80100885458b2020802436042
59b94000010063b80200885458b202100243604259b12601885158b94000
020063b80400885458b202400243604259b94000040063b80800885458b2
02800243604259b12801885158b94000080063b81000885458ba00020100
000243604259595959595959b10002435458400a0540084009400c020d02
1bb10102435458b2054008ba010000090100b30c010d011bb18002435258
b2054008b80180b109401bb901000002435258b2054008ba018000090140
1bb901800002435258b2054008b80200b109401bb2054008ba0100000901
00595959b9400000808855b94000020063b8040088555a58b30c000d011b
b30c000d0159595942424242422d2c451868234b51582320452064b04050
587c59688a6059442d2cb00016b00225b0022501b001233e00b002233eb1
0102060cb00a236542b00b234201b001233f00b002233fb10102060cb006
236542b0072342b00116012d2c20b82000628a6023622d2cb0072558001b
0159b0042510b00325b0022520b8ffff545821cd1bed5921b006255cb006
255a58b0092b5920b005254ab0042547b004254760b0062547b0806361b0
0225b0005558b00325b00725496359b0082558001b0159b00425b0062549
b009255cb009255a58b0092b59b0072546b0806361b0032520b000555863
1b2159612320b0005558b080631b21b08059b0592bb006255c586959b004
25202010b00048233ab0062658001b0159b0052658b003252f598a122332
21212d2cb00625b00a2587b00625b009254ab0005358b00625b00a251bb0
0925b0072559b00225b00225070cb005256323b00625636020b940000400
63535821b00426b00426b00a1bb94000040063655158b0042665b0042665
b00a1bb00426b00426b000b00325b003250b0d0ab0092eb00725b007250b
0d0ab00b2eb00525b0052507595920b0005558b00525b0052587b00725b0
07250bb0092510b00b25b0092620b8ffff545821cd1bed59b00525b00525
07b00825b00b254923b00625b0062587b00a2510b00b25c15920b00051b8
00522378b00161b00225b00725b0072507b00a25b00d254961b08062b005
25b005250bb00a252338b00625b0062587b00825b008250bb00a2510b00b
25c4b00625b0062507b00925b00c2549b0032554b8ffa723792121212121
212121212121212d2c23b0005458b9400000001bb900004000598ab00054
58b9400000001bb90000400059b05b2b2d2c08b0005458b9400000001bb9
00004000590db05b2b2d2c8a8a080d8ab0005458b9400000001bb9000040
0059b05b2b2d2cb00426b00426080db00426b00426080db05b2b2d2cb002
2563b0206066b00225b82000626023622d2c234ab1024e2b2d2c234ab101
4e2b2d2c238a4a234564b0022564b002256164b00343525821206459b102
4e2b23b000505865592d2c238a4a234564b0022564b002256164b0034352
5821206459b1014e2b23b000505865592d2c20b003254ab1024e2b8a103b
2d2c20b003254ab1014e2b8a103b2d2cb00325b003258ab0672b8a103b2d
2cb00325b003258ab0682b8a103b2d2cb0032546b003254660b004252eb0
0425b00425b0042620b000505821b06a1bb06c592bb0032546b003254660
61b08062208a2010233a232010233a2d2cb0032547b003254760b0052547
b0806361b00225b00625496323b005254ab080632058621b2159b0042646
608a468a4660b02063612d2cb00426b00425b00425b00426b06e2b208a20
10233a232010233a2d2c2320b001545821b00225b1024e2bb08050206059
20606020b001515821211b20b005515821206661b0402361b100032550b0
0325b00325505a5820b00325618a535821b000591b21591bb00754582066
616523211b2121b000595959b1024e2b2d2cb00225b004254ab0005358b0
001b8a8a238ab00159b004254620666120b00526b0062649b00526b00526
b0702b236165b02060206661b02061652d2cb0022546208a20b000505821
b1024e2b1b452321596165b00225103b2d2cb0042620b802006220b80200
638a236120b05d602bb00525118a128a20398a58ba005d10000004266356
602b23212010204620b1024e2b23611b2321208a201049b1024e2b593b2d
2cba005d10000009256356602bb00525b00525b00526b06d2bb15d072560
2bb00525b00525b00525b00525b06f2bba005d10000008266356602b20b0
005258b0502bb00525b00525b00725b00725b00525b0712bb0021738b000
52b00225b001525a58b00425b0062549b00325b00525496020b040525821
1bb000525820b0025458b00425b00425b00725b0072549b00217381bb004
25b00425b00425b0062549b0021738595959595921212121212d2cb12801
885158b94000040063b8080088545c1bb001592d2cb12801885158b94000
040063b8080088545c1bb001592d0001000000063333bc737b9d5f0f3cf5
0019080000000000bbeb7ccc00000000d5968a59fa34fdcb0a1408360002
00090002000000000000000100000600fe0001c40aa0fa34fa0b0a140800
019a0000000000000000000000000d78040e0000000000000000000001cf
000004a1ffca000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000006d700520000000000000000
00000000000000000000000000000000053c007200000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
03f4ffb70000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000003ab0069
00000000000000000000000000000000000000000465004c000000000000
0000000000000380004d0000000000000000000000000000000000000000
000000000000000000000000000000000350004700000000000000000000
0000000000000000000000000000000000000000000001ec004700000000
00000000000000000000000000000000000000000000000001ec00110000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000606004604790046000000000000
000000000000000000000000000004990060000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000003e70047000000000000000000000000
033f00020000000000000000000000000000000000000000035900800000
000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000003ed00950000
000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000041d
005100000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000354004c0000
000000000000000000000000000000000000000000000000000005f1004c
00000000041d005100000000000000000000000003d2004d000000000000
000000000000000000000000000000000000000000000000000000000000
0271ff3d000000000000000004abff1f0000000000000000043cff3d0000
000000000000000000000000000000000000000000000000000000000000
000000000676ff3d00000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000004e4ff3d0000
000000000000071fff3d0000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000001d6003f000000000000000000000000000000000000000000000000
000000000000000001d6003f000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000041d003f0000000000000000000000000000
00000000000000000000041b004e00000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000000002be003f000000000000000000000000031d0009
000000000000000000000000000000000000000005a50009000000000000
00000000000002ae007100000000000000000000000004e6007104750071
000000000000000000000000000000000000000000000000000000000000
00000000000005130071074b007106d90071000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
00000000000000000391007c000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000002d800aa0000
0000024100a602d800aa02a100a801c1fff50000000000000000016200a2
0000000000000000000000000000000002db00a002d600aa000000000000
000001f000a00230008301e300bb00000000028500c30000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000001ce0000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000029b00bb0000
000000000000000000000000000000000000000000000260009b00000000
000000000000000000000000000000000224006d00000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000033500f7000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
00000000000000000000000004c1006603de0039027100210271006a0000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
02f500530000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000046d00bc00000000037500cb
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000004ab00210000000000000000043c
001f00000000000000000000000000000000000000000000000000000000
00000000043c001f000000000676001f0000000000000000000000000000
0000000000000000000000000000000000000676001f0000000000000000
000000000000000000000000000000000000000000000000000000000000
000004e4001f0000000000000000071f001f000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000002f500530000
000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000046d00bc00000000000000000375
00cb00000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
019900000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000bb00bb00bb00bb017801780178
017801780178017801780178017801780178017801780178017801780178
017801780178017801780178017801780178017801780178017801780178
017801780178017801780178017801780178017801780178017801780178
017801780178017801780178017801780178017801780178017801780178
0178024602460246024602460246024602c802c802c802c802c802c802c8
02c802c802c802c802c802c802c802c802c802c802c802c802c802c802c8
02c802c802c802c802c802c802c802c802c802c802c802c802c802c802c8
02c802c802c802c802c802c802c802c802c802c802c802c802c802c802c8
02c802c802c802c803490349034903490349034903490349034903490349
03490349034903e403e403e403e403e403e4044d044d044d044d04cd04cd
04cd04cd04cd04cd04cd04cd04cd04cd0543054305430543054305430543
05430543058b058b058b058b058b058b058b058b05960596059605960596
05960596059605960596059605960596063b06d006d006d006d006d006d0
073f073f073f073f073f073f073f073f073f073f073f073f073f073f073f
07ee07ee07ee07ee089c089c089c089c089c089c09000900090009000900
090009000900090009000900090009000900090009650965096509650965
096509650965096509650965096509650965096509650a1a0a1a0a1a0a1a
0a1a0a1a0a1a0a1a0a1a0a1a0a1a0a1a0a1a0a1a0abe0abe0abe0abe0abe
0abe0abe0abe0be90be90ca40ca40ca40ca40d570d570d570d570d570d57
0d570d570d570d570e2b0e2b0e2b0f6f0f6f0f6f10491049104910491049
10491049104910491049118b118b118b118b118b118b118b118b118b118b
118b118b118b118b118b118b118b118b118b118b12891289128913ef13ef
13ef13ef13ef13ef13ef13ef13ef13ef13ef13ef13ef13ef147c147c147c
147c147c147c147c147c147c14c414c414c414c414c414c414c414c414c4
14c414c414c414c414c414c414c4157015701570157015701570157015f0
15f015f015f015f015f015f015f015f015f015f015f015f015f015f01689
168916891689175b175b175b175b175b175b18af18af18af18af19701970
197019701a691b281b281b281b281b281b281b281b281b281b281c101d65
1e7c1e7c1e7c1e7c1e7c1e7c1e7c1e7c1e7c1e7c1e7c1e7c1e7c1e7c1e7c
1e7c1e7c1e7c1e7c1e7c1e7c1f011f011f011f011f011f011f011f011f01
1f011f011f011f011f011f011f011f011f011f011f8d1f8d200e20a82144
21fa21fa21fa226b226b226b226b226b22f723572357235723cf2471250d
250d257f257f257f257f257f257f257f257f257f257f257f257f257f257f
257f257f257f257f257f257f257f257f257f257f257f257f257f257f257f
257f257f257f257f257f257f257f257f257f257f257f257f257f257f257f
257f257f257f257f257f257f257f257f257f257f257f257f257f257f257f
257f257f257f25c525c525c525c525c525c525c525c525c525c525c525c5
25c525c525c525c525c525c525c525c525c525c525c525c525c525c525c5
25c525c525c525c525c525c525c525c525c525c525c525c525c525c525c5
25c525c525c525c525c525c525c525c525c525c525c525c525c525c525c5
25c525c525c525c525c525c525c525c525c525c525c525c525c525c525c5
25c525c525c525c525c525c525c525c525c525c525c525c525c525c525c5
25c525c525c525c525c525c525c525c525c525c525c525c525c525c525c5
25c525c525c525c525c525c525c525c525c525c525c525c525c525c525c5
25c525c525c525c525c525c525c525c525c525c525c525c525c525c525c5
25c525c525c525c525c525c525c525c525c525c525c525c525c525c525c5
25c525c525c525c525c525c525c525c525c525c525c525c525c525c525c5
25c525c525c525c525c525c525c525c525c525c525c525c525c525c525c5
25c525c525c525c525c525c525c525c525c525c525c525c525c525c525c5
25c525c525c525c525c525c525c525c525c525c525c525c525c525c525c5
25c525c525c525c525c525c525c525c525c525c525c525c525c525c525c5
25c525c525c525c525c525c525c525c525c525c525c525c525c525c525c5
25c525c525c525c525c525c525c525c525c525c525c525c525c525c525c5
25c525c525c525c525c525c525c525c525c525c525c525c525c525c525c5
25c525c525c525c525c525c525c525c525c525c525c525c525c525c525c5
25c525c525c525c525c525c525c525c525c525c526472647264726472647
2647264726bd26bd26bd26bd26bd26bd2725272527252725272527252725
272527252725272527252725272527252725272527252725272527252725
272527252725272527252725272527252725272527252725272527252725
272527252725272527252725272527252725272527252725272527252725
272527252725272527252725272527252725272527252725279127912791
279127912791279127912791279127912791279127912791279127912791
279127912791279127912791279127912791279127912791279127912791
279127912791279127912791279127912791279127912791279127912791
279127912791279127912791279127912791279127912791279127912791
279127912791279127912791279127912791279127912791279127912791
279127912791279127912791279127912791279127912791279127912791
279127912791279127912791279127912791279127912791279127912791
279127912791279127912791279127912791279127912791279127912791
279127912791279127912791279127912791279127912791279127912791
279127912791279127912791279127912791279127912791279127912791
279127912791279127912791279127912791279127912791279127912791
279127912791279127912791279127912791279127912791279127912791
279127912791279127912791279127912791279127912791279127912791
279127912791279127912791279127912791279127912791279127912791
279127912791279127912791279127912791279127912791279127912791
279127912791279127912791279127912791279127912791279127912791
279127912791279127912791279127912791279127912791279127912791
279127912791279127912791279127912791279127912791279127912791
279127912791279127912791279127912791279127912791279127912791
279127912791279127912791279127912791279127912791279127912791
279127912791279127912791279127912791279127912791279127912791
279127912791279127912791279127912791279127912791279127912791
279127912791279127912791279127912791279127912791279127912791
279127912791279127912791279127912791279127912791279127912791
279127912791279127912791279128de297329fd2a882a882a882a882a88
2a882a882a882a882a882a882a882a882a882a882a882a882a882a882a88
2a882a882a882a882a902a902a902a902a902a902a902a902a902a902a90
2a902a982a982aa02aa02aa02aa02aa02aa02aa02aa02aa02aa02aa02aa0
2aa02aa02aa02aa02aa02aa02aa02aa02aa02aa02aa02aa02aa02aa02aa0
2aa02aa02aa02aa02aa02aa02aa02aa02aa02aa02aa02aa02aa02aa02aa0
2aa02aa02aa02aa02aa02aa02aa02aa02aa02aa02aa02aa02aa02aa02aa0
2aa02aa02aa02aa02aa02aa02aa02aa02aa02aa02aa02aa02aa02aa02aa0
2aa02aa02aa02aa02aa02aa02aa02aa02aa02aa02aa02aa02aa02aa02aa0
2aa02aa02aa02aa02aa02aa02aa02aa02aa02aa02aa02aa02aa02aa02aa0
2aa02aa02aa02aa02aa02aa02aa02aa02aa02aa02aa02aa02aa02aa02aa0
2aa02aa02aa02aa02aa02aa02aa02aa02aa02aa02aa02aa02aa02aa02aa0
2aa02aa02aa02aa02aa02aa02aa02aa02aa02aa02aa02aa02aa02aa02aa0
2aa02aa02aa02aa02aa02aa02aa02aa02aa02aa02aa02aa02aa02aa02aa0
2aa02aa02aa02aa02aa02aa02aa02aa02aa02aa02aa02aa02aa02aa02aa0
2aa02aa02aa02aa02aa02aa02aa02aa02aa02aa02aa02aa02aa02aa02aa0
2aa02aa02aa02aa02aa02aa02aa02aa02aa02aa02aa02aa02aa02aa02aa0
2aa02aa02aa02aa02aa02aa02aa02aa02aa02aa02aa02aa02aa02aa02aa0
2aa02aa02aa02aa02aa02aa02aa02aa02aa02aa02aa02aa02aa02aa02aa0
2aa02aa02aa02aa02aa02aa02aa02aa02aa02aa02aa02aa02aa02aa02aa0
2aa02aa02aa02aa02aa02aa02aa02aa02aa02aa02aa02aa02aa02aa02aa0
2aa02aa02aa02aa02aa02aa02aa02aa02aa02aa02aa02aa02aa02aa02aa0
2aa02aa02aa02aa02aa02aa02aa02aa02aa02aa02aa02aa02aa02aa02aa0
2aa02aa02aa02aa02aa02aa02aa02aa02aa02aa02aa02aa02aa02aa02aa0
2aa02aa02aa02aa02aa02aa02aa02aa02aa02aa02aa02aa02aa02aa02aa0
2aa02aa02aa02aa02aa02aa02aa02aa02aa02aa02aa02aa02aa02aa02aa0
2aa02aa02aa02aa02aa02aa02aa02aa02aa02aa02aa02aa02aa02aa02aa0
2aa02aa02aa02aa02aa02aa02aa02aa02aa02aa02aa02aa02aa02aa02aa0
2aa02aa02aa02aa02aa02aa02aa02aa02aa02aa02aa02aa02aa02aa02aa0
2aa02aa02aa02aa02aa02aa02aa02aa02aa02aa02aa02aa02aa02aa02aa0
2aa02aa02aa02aa02aa02aa02aa02aa02aa02aa02aa02aa02aa02aa02aa0
2aa02aa02aa02aa02aa02aa02aa02aa02aa02aa02aa02aa02aa02aa02aa0
2aa02aa02aa02aa02aa02aa02aa02aa02aa02aa02aa02aa02aa02aa02aa0
2aa02aa02aa02aa02aa02aa02aa02aa02aa02aa02aa02aa02aa02aa02aa0
2aa02aa02aa02aa02aa02aa02aa02aa02aa02aa02aa02aa02aa02aa02aa0
2aa02aa02aa02aa02aa02aa02aa02aa02aa02aa02aa02aa02aa02aa02aa0
2aa02aa02aa02aa02aa02aa02aa02aa02aa02aa02aa02aa02aa02aa02aa0
2aa02aa02aa02aa02aa02aa02aa02aa02aa02aa02aa02aa02aa02aa02aa0
2aa02aa02aa02aa02aa02aa02aa02aa02aa02aa02aa02aa02aa02aa02aa0
2aa02aa02aa02aa02aa02aa02aa02aa02aa02aa02aa02aa02aa02aa02aa0
2aa02aa02aa02aa02aa02aa02aa02aa02aa02aa02aa02aa02aa02aa02aa0
2aa02aa02aa02aa02aa02aa02aa02aa02aa02aa02aa02aa02aa02aa02aa0
2aa02aa02aa02aa02aa02aa02aa02aa02aa02aa02aa02aa02aa02aa02aa0
2aa02aa02aa02aa02aa02aa02aa02aa02aa02aa02aa02aa02aa02aa02aa0
2aa02aa02aa02aa02aa02aa02aa02aa02aa02aa02aa02aa02aa02aa02aa0
2aa02aa02aa02aa02aa02aa02aa02aa02aa02aa02aa02aa02aa02aa02aa0
2aa02aa02aa02aa02aa02aa02aa02aa02aa02aa02aa02aa02aa02aa02aa0
2aa02aa02aa02aa02aa02aa02aa02aa02aa02aa02aa02aa02aa02aa02aa0
2aa02aa02aa02aa02aa02aa02aa02aa02aa02aa02aa02aa02aa02aa02aa0
2aa02aa02aa02aa02aa02aa02aa02aa02aa02aa02aa02aa02aa02aa02aa0
2aa02aa02aa02aa02aa02aa02aa02aa02aa02aa02aa02aa02aa02aa02aa0
2aa02aa02aa02aa02aa02aa02aa02aa02aa02aa02aa02aa02aa02aa02aa0
2aa02aa02aa02aa02aa02aa02aa02aa02aa02aa02aa02aa02aa02aa02aa0
2aa02aa02aa02aa02aa02aa02aa02aa02aa02aa02aa02aa02aa02aa02aa0
2aa02aa02aa02aa02aa02aa02aa02aa02b7f2b7f2b7f2c2b2c2b2c2b2c2b
2c2b2c2b2c2b2c2b2c2b2cae2cae2dbd2dbd2dbd2dbd2dbd2dbd2dbd2dbd
2dbd2ea02ea02ea02ea02ea02ea02ea02ea02ea02ea02ea02f7d2f7d2f7d
30ad30ad30ad30ad30ad30ad30ad30ad30ad30ad30ad30ad30ad30ad30ad
30ad30ad30ad30ad30ad30ad30ad30ad30ad30ad30ad30ad30ad30ad30ad
30ad30ad30ad30ad30ad30ad30ad30ad30ad30ad30ad30ad30ad30ad30ad
30ad30ad30ad30ad30ad30ad30ad30ad30ad30ad30ad30ad30ad30ad30ad
30ad30ad30ad30ad30ad30ad30ad30ad30ad30ad30ad30ad30ad30ad30ad
30ad30ad30ad30ad30ad30ad30ad30ad30ad30ad30ad30ad30ad30ad30ad
30ad30ad30ad30ad30ad30ad30ad30ad30ad30ad30ad30ad30ad30ad30ad
30ad30ad30ad30ad30ad30ad30ad30ad30ad30ad30ad30ad30ad30ad30ad
30ad30ad30ad30ad30ad30ad30ad30ad30ad30ad30ad30ad30ad30ad30ad
30ad30ad30ad30ad30ad30ad30ad30ad30ad30ad30ad30ad30ad30ad30ad
30ad30ad30ad30ad30ad30ad30ad30ad30ad30ad311e311e311e311e311e
311e311e311e311e311e311e311e311e31a231a231a23209320932093209
320932093209320932093209320932093209320932093209320932093209
320932093209320932093209320932093209320932093209320932093209
320932093209320932093209320932093209320932093209320932093209
320932093209320932093209320932093209320932093209320932093209
320932093209320932093209320932093209320932093209320932093209
320932093209320932093209320932093209320932093209320932093209
320932093209320932093209320932093209320932093209320932093209
320932093209320932093209320932093209320932093209320932093209
320932093209320932093209320932093209320932093209320932093209
320932093209320932093209320932093209320932093209320932093209
320932093209320932093209320932093209320932093209320932093209
320932093209320932093209320932093209320932093209320932093209
320932093209320932093209320932093209320932093209320932093209
320932093209320932093209320932093209320932093209320932093209
320932093209320932093209320932093209320932093209320932093209
320932093209320932093209320932093209320932093209320932093209
320932093209320932093209320932093209320932093209320932093209
320932093209320932093209320932093209320932093209320932093209
320932093209320932093209320932093209320932093209320932093209
320932093209320932093209320932093209320932093209320932093209
320932093209320932093209320932093209320932093209320932093209
320932093209320932093209320932093209320932093209320932093209
320932093209320932093209320932093209320932093209320932093209
320932093209320932093209320932093209320932093209320932093209
320932093209320932093209320932093209320932093209320932093209
320932093209320932093209320932093209320932093209320932093209
320932093209320932093209320932093209320932093209320932093209
320932093209320932093209320932093209320932093209320932093209
320932093209320932093209320932093209320932093209320932093209
320932093209320932093209320932093209320932093209320932093209
320932093209320932093209320932093209320932093209320932093209
320932093209320932093209320932093209320932093209320932093209
320932093209320932093209320932093209320932093209320932093209
320932093209320932093209320932093209320932093209320932093209
320932093209320932093209320932093209320932093209320932093209
320932093209320932093209320932093209320932093209320932093209
320932093209320932093209320932093209320932093209320932093209
320932093209320932093209320932093209320932093209320932093209
320932093209320932093209320932093209320932093209320932093209
320932093209320932093209320932093209320932093209320932093209
320932093209320932093209320932093209320932093209320932093209
320932093209320932093209320932093209320932093209320932093209
320932093209320932093209320932093209320932093209320932093209
320932093209320932093209320932093209320932093209320932093209
320932093209320932093209320932093209320932093209320932093209
320932093209320932093209320932093209320932093209320932093209
320932093209320932093209320932093209320932093209320932093209
320932093209320932093209320932093209320932093209320932093209
320932093209320932093209320932093209320932093209320932093209
320932093209320932093209320932093209320932093209320932093209
320932093209320932093209320932093209320932093209320932093209
320932093209320932093209320932093209320932093209320932093209
320932093209320932093209320932093209320932093209320932093209
320932093209320932093209320932093209320932093209320932093209
320932093209320932093209320932093209320932093209320932093209
320932093209320932093209320932093209320932093209320932093209
320932093209320932093209320932093209320932093209320932093209
320932093209320932093209320932093209320932093209320932093209
320932093209320932093209320932093209320932093209320932093209
320932093209320932093209320932093209320932093209320932093209
320932093209320932093209320932093209320932093209320932093209
320932093209320932093209320932093209320932093209320932093209
320932093209320932093209320932093209320932093209320932093209
320932093209320932093209320932093209320932093209320932093209
320932093209320932093209320932093209320932093209320932093209
320932093209320932093209320932093209320932093209320932093209
320932093209320932093209320932093209320932093209320932093209
320932093209320932093209320932093209320932093209320932093209
320932093209320932093209320932093209320932093209320932093209
320932093209320932093209320932093209320932093209320932093209
320932093209320932093209320932093209320932093209320932093209
320932093209320932093209320932093209320932093209320932093209
320932093209320932093209320932093209320932093209320932093209
320932093209320932093209320932093209320932093209320932093209
320932093209320932093209320932093209320932093209320932093209
320932093209320932093209320932093209320932093209320932093209
320932093209320932093209320932093209320932093209320932093209
320932093209320932093209320932093209320932093209320932093209
320932093209320932093209320932093209320932093209320932093209
320932093209320932093209320932093209320932093209320932093209
320932093209320932093209320932093209320932093209320932093209
320932093209320932093209320932093209320932093209320932093209
320932093209320932093209320932093209320932093209320932093209
320932093209320932093209320932093209320932093209320932093209
320932093209320932093209320932093209320932093209320932093209
320932093209320932093209320932093209320932093209320932093209
320932093209320932093209320932093209320932093209320932093209
320932093209320932093209320932093209320932093209320932093209
320932093209320932093209320932093209320932093209320932093209
320932093209320932093209320932093209320932093209320932093209
320932093209320932093209320932093209320932093209320932093209
320932093209320932093209320932093209320932093209320932093209
320932093209320932093209320932093209320932093209320932093209
320932093209320932093209320932093209320932093209320932093209
320932093209320932093209320932093209320932093209320932093209
320932093209320932093209320932093209320932093209320932093209
320932093209320932093209320932093209320932093209320932093209
320932093209320932093209320932093209320932093209320932093209
320932093209320932093209320932093209320932093209320932093209
320932093209320932093209320932093209320932093209320932093209
320932093209320932093209320932093209320932093209320932093209
320932093209320932093209320932093209320932093209320932093209
320932093209320932093209320932093209320932093209320932093209
320932093209320932093209320932093209320932093209320932093209
320932093209320932093209320932093209320932093209320932093209
320932093209320932093209320932093209320932093209320932093209
320932093209320932093209320932093209320932093209320932093209
320932093209320932093209320932093209320932093209320932093209
320932093209320932093209320932093209320932093209320932093209
320932093209320932093209320932093209320932093209320932093209
320932093209320932093209320932093209320932093209320932093209
320932093209320932093209320932093209320932093209320932093209
320932093209320932093209320932093209320932093209320932093209
320932093209320932093209320932093209320932093209320932093209
320932093209320932093209320932093209320932093209320932093209
320932093209320932093209320932093209320932093209320932093209
320932093209320932093209320932093209320932093209320932093209
320932093209320932093209320932093209320932093209320932093209
320932093209320932093209320932093209320932093209320932093209
320932093209320932093209320932093209320932093209320932093209
320932093209320932093209320932093209320932093209320932093209
320932093209320932093209320932093209320932093209320932093209
320932093209320932093209320932093209320932093209320932093209
320932093209320932093209320932093209320932093209320932093209
320932093209320932093209320932093209320932093209320932093209
320932093209320932093209320932093209320932093209320932093209
320932093209320932093209320932093209320932093209320932093209
320932093209320932093209320932093209320932093209320932093209
320932093209320932093209320932093209320932093209320932093209
320932093209320932093209320932093209320932093209320932093209
320932093209320932093209320932093209320932093209320932093209
320932093209320932093209320932093209320932093209320932093209
320932093209320932093209320932093209320932093209320932093209
320932093209320932093209320932093209320932093209320932093209
320932093209320932093209320932093209320932093209320932093209
320932093209320932093209320932093209320932093209320932093209
320932093209320932093209320932093209320932093209320932093209
320932093209320932093209320932093209320932093209320932093209
320932093209320932093209320932093209320932093209320932093209
320932093209320932093209320932093209320932093209320932093209
320932093209320932093209320932093209320932093209320932093209
320932093209320932093209320932093209320932093209320932093209
320932093209320932093209320932093209320932093209320932093209
320932093209320932093209320932093209320932093209320932093209
320932093209320932093209320932093209320932093209320932093209
320932093209320932093209320932093209320932093209320932093209
32093209320932093209320932093209320900000001000011a400c70010
002c000300020010002f008700000a3b11310002000100>
<0000002d02220000000300000000021000000000000300000001000e0210
0000000300000002000c04d60000000300000003003204b0000000030000
0004001c04c60000000300000005001804e20000000300000006001c04fa
0000000300000007007605160000000300000008002a059a000000030000
00090020079e000000030000000a02a00210000000030000000b005607be
000000030000000c002a0814000000030000000d0e06083e000000030000
000e006c16440001000000000000010816b00001000000000001000717b8
00010000000000020006191b000100000000000300191908000100000000
0004000e19130001000000000005000c19210001000000000006000e192d
0001000000000007003b193b0001000000000008001516b7000100000000
000900101976000100000000000a015017b8000100000000000b002b1986
000100000000000c001519b1000100000000000d070319c6000100000000
000e003620c900030001040900000212058c0003000104090001000e0210
0003000104090002000c04d60003000104090003003204b0000300010409
0004001c04c60003000104090005001804e20003000104090006001c04fa
0003000104090007007605160003000104090008002a059a000300010409
00090020079e000300010409000a02a00210000300010409000b005607be
000300010409000c002a0814000300010409000d0e1820ff000300010409
000e006c164400a9002000320030003100370020004d006900630072006f
0073006f0066007400200043006f00720070006f0072006100740069006f
006e002e00200041006c006c002000520069006700680074007300200052
0065007300650072007600650064002e000d004800650062007200650077
0020004f00700065006e00540079007000650020004c00610079006f0075
00740020006c006f00670069006300200063006f00700079007200690067
00680074002000a900200032003000300033002000260020003200300030
0037002c002000520061006c00700068002000480061006e0063006f0063
006b002000260020004a006f0068006e00200048007500640073006f006e
002e002000540068006900730020006c00610079006f007500740020006c
006f00670069006300200066006f00720020004200690062006c00690063
0061006c00200048006500620072006500770020006900730020006f0070
0065006e00200073006f007500720063006500200073006f006600740077
00610072006500200075006e00640065007200200074006800650020004d
004900540020004c006900630065006e00730065003b0020007300650065
00200065006d0062006500640064006500640020006c006900630065006e
007300650020006400650073006300720069007000740069006f006e0020
0066006f0072002000640065007400610069006c0073002e00430061006c
0069006200720069002000690073002000610020006d006f006400650072
006e002000730061006e0073002000730065007200690066002000660061
006d0069006c00790020007700690074006800200073007500620074006c
006500200072006f0075006e00640069006e006700730020006f006e0020
007300740065006d007300200061006e006400200063006f0072006e0065
00720073002e002000490074002000660065006100740075007200650073
0020007200650061006c0020006900740061006c006900630073002c0020
0073006d0061006c006c00200063006100700073002c00200061006e0064
0020006d0075006c007400690070006c00650020006e0075006d00650072
0061006c00200073006500740073002e0020004900740073002000700072
006f0070006f007200740069006f006e007300200061006c006c006f0077
0020006800690067006800200069006d007000610063007400200069006e
002000740069006700680074006c007900200073006500740020006c0069
006e006500730020006f0066002000620069006700200061006e00640020
0073006d0061006c006c0020007400650078007400200061006c0069006b
0065002e002000430061006c0069006200720069002700730020006d0061
006e0079002000630075007200760065007300200061006e006400200074
006800650020006e00650077002000720061007300740065007200690073
006500720020007400650061006d00200075007000200069006e00200062
00690067006700650072002000730069007a0065007300200074006f0020
00720065007600650061006c002000610020007700610072006d00200061
006e006400200073006f0066007400200063006800610072006100630074
00650072002e004d006900630072006f0073006f00660074003a00200043
0061006c00690062007200690020004900740061006c0069006300560065
007200730069006f006e00200036002e0032003000430061006c00690062
00720069002d004900740061006c0069006300430061006c006900620072
006900200069007300200061002000740072006100640065006d00610072
006b0020006f006600200074006800650020004d006900630072006f0073
006f00660074002000670072006f007500700020006f006600200063006f
006d00700061006e006900650073002e00a9002000320030003100370020
004d006900630072006f0073006f0066007400200043006f00720070006f
0072006100740069006f006e002e00200041006c006c0020005200690067
006800740073002000520065007300650072007600650064002e000d000a
0048006500620072006500770020004f00700065006e0054007900700065
0020004c00610079006f007500740020006c006f00670069006300200063
006f0070007900720069006700680074002000a900200032003000300033
0020002600200032003000300037002c002000520061006c007000680020
00480061006e0063006f0063006b002000260020004a006f0068006e0020
0048007500640073006f006e002e002000540068006900730020006c0061
0079006f007500740020006c006f00670069006300200066006f00720020
004200690062006c006900630061006c0020004800650062007200650077
0020006900730020006f00700065006e00200073006f0075007200630065
00200073006f00660074007700610072006500200075006e006400650072
00200074006800650020004d004900540020004c006900630065006e0073
0065003b002000730065006500200065006d006200650064006400650064
0020006c006900630065006e007300650020006400650073006300720069
007000740069006f006e00200066006f0072002000640065007400610069
006c0073002e004c00750063002800610073002900200064006500200047
0072006f006f00740068007400740070003a002f002f007700770077002e
006d006900630072006f0073006f00660074002e0063006f006d002f0074
00790070006f006700720061007000680079002f006300740066006f006e
007400730068007400740070003a002f002f006c00750063006100730066
006f006e00740073002e0063006f006d004d006900630072006f0073006f
0066007400200073007500700070006c00690065006400200066006f006e
0074002e00200059006f00750020006d0061007900200075007300650020
007400680069007300200066006f006e007400200074006f002000630072
0065006100740065002c00200064006900730070006c00610079002c0020
0061006e00640020007000720069006e007400200063006f006e00740065
006e00740020006100730020007000650072006d00690074007400650064
00200062007900200074006800650020006c006900630065006e00730065
0020007400650072006d00730020006f00720020007400650072006d0073
0020006f00660020007500730065002c0020006f00660020007400680065
0020004d006900630072006f0073006f00660074002000700072006f0064
007500630074002c00200073006500720076006900630065002c0020006f
007200200063006f006e00740065006e007400200069006e002000770068
0069006300680020007400680069007300200066006f006e007400200077
0061007300200069006e0063006c0075006400650064002e00200059006f
00750020006d006100790020006f006e006c007900200028006900290020
0065006d0062006500640020007400680069007300200066006f006e0074
00200069006e00200063006f006e00740065006e00740020006100730020
007000650072006d00690074007400650064002000620079002000740068
006500200065006d00620065006400640069006e00670020007200650073
007400720069006300740069006f006e007300200069006e0063006c0075
00640065006400200069006e0020007400680069007300200066006f006e
0074003b00200061006e006400200028006900690029002000740065006d
0070006f0072006100720069006c007900200064006f0077006e006c006f
006100640020007400680069007300200066006f006e007400200074006f
002000610020007000720069006e0074006500720020006f00720020006f
00740068006500720020006f007500740070007500740020006400650076
00690063006500200074006f002000680065006c00700020007000720069
006e007400200063006f006e00740065006e0074002e00200041006e0079
0020006f0074006800650072002000750073006500200069007300200070
0072006f0068006900620069007400650064002e000d000d005400680065
00200066006f006c006c006f00770069006e00670020006c006900630065
006e00730065002c0020006200610073006500640020006f006e00200074
006800650020004d004900540020006c006900630065006e007300650020
00280068007400740070003a002f002f0065006e002e00770069006b0069
00700065006400690061002e006f00720067002f00770069006b0069002f
004d00490054005f004c006900630065006e007300650029002c00200061
00700070006c00690065007300200074006f00200074006800650020004f
00700065006e00540079007000650020004c00610079006f007500740020
006c006f00670069006300200066006f00720020004200690062006c0069
00630061006c00200048006500620072006500770020201c004c00610079
006f007500740020004c006f006700690063201d0020006100730020006a
006f0069006e0074006c007900200064006500760065006c006f00700065
0064002000620079002000520061006c00700068002000480061006e0063
006f0063006b00200061006e00640020004a006f0068006e002000480075
00640073006f006e002e0020000d000d005000650072006d006900730073
0069006f006e002000690073002000680065007200650062007900200067
00720061006e007400650064002c002000660072006500650020006f0066
0020006300680061007200670065002c00200074006f00200061006e0079
00200070006500720073006f006e0020006f0062007400610069006e0069
006e00670020006100200063006f007000790020006f0066002000740068
00650020004f00700065006e00540079007000650020004c00610079006f
007500740020006c006f00670069006300200066006f0072002000420069
0062006c006900630061006c002000480065006200720065007700200061
006e00640020006100730073006f00630069006100740065006400200064
006f00630075006d0065006e0074006100740069006f006e002000660069
006c00650073002000280074006800650020201c004c00610079006f0075
00740020004c006f00670069006300200053006f00660074007700610072
0065201d0029002c00200074006f0020006400650061006c00200069006e
00200074006800650020004c00610079006f007500740020004c006f0067
0069006300200053006f0066007400770061007200650020007700690074
0068006f007500740020007200650073007400720069006300740069006f
006e002c00200069006e0063006c007500640069006e0067002000770069
00740068006f007500740020006c0069006d00690074006100740069006f
006e0020007400680065002000720069006700680074007300200074006f
0020007500730065002c00200063006f00700079002c0020006d006f0064
006900660079002c0020006d0065007200670065002c0020007000750062
006c006900730068002c0020006400690073007400720069006200750074
0065002c0020007300750062006c006900630065006e00730065002c0020
0061006e0064002f006f0072002000730065006c006c00200063006f0070
0069006500730020006f006600200074006800650020004c00610079006f
007500740020004c006f00670069006300200053006f0066007400770061
00720065002c00200061006e006400200074006f0020007000650072006d
0069007400200070006500720073006f006e007300200074006f00200077
0068006f006d00200074006800650020004c00610079006f007500740020
004c006f00670069006300200053006f0066007400770061007200650020
006900730020006600750072006e0069007300680065006400200074006f
00200064006f00200073006f002c0020007300750062006a006500630074
00200074006f002000740068006500200066006f006c006c006f00770069
006e006700200063006f006e0064006900740069006f006e0073003a000d
000d005400680065002000610062006f0076006500200063006f00700079
007200690067006800740020006e006f007400690063006500200061006e
0064002000740068006900730020007000650072006d0069007300730069
006f006e0020006e006f00740069006300650020007300680061006c006c
00200062006500200069006e0063006c007500640065006400200069006e
00200061006c006c00200063006f00700069006500730020006f00720020
007300750062007300740061006e007400690061006c00200070006f0072
00740069006f006e00730020006f006600200074006800650020004c0061
0079006f007500740020004c006f00670069006300200053006f00660074
0077006100720065002e000d000d00540048004500200053004f00460054
0057004100520045002000490053002000500052004f0056004900440045
004400200027004100530020004900530027002c00200057004900540048
004f00550054002000570041005200520041004e005400590020004f0046
00200041004e00590020004b0049004e0044002c00200045005800500052
0045005300530020004f005200200049004d0050004c004900450044002c
00200049004e0043004c005500440049004e004700200042005500540020
004e004f00540020004c0049004d004900540045004400200054004f0020
005400480045002000570041005200520041004e00540049004500530020
004f00460020004d00450052004300480041004e0054004100420049004c
004900540059002c0020004600490054004e00450053005300200046004f
00520020004100200050004100520054004900430055004c004100520020
0050005500520050004f0053004500200041004e00440020004e004f004e
0049004e004600520049004e00470045004d0045004e0054002e00200049
004e0020004e004f0020004500560045004e00540020005300480041004c
004c002000540048004500200041005500540048004f005200530020004f
005200200043004f005000590052004900470048005400200048004f004c
00440045005200530020004200450020004c004900410042004c00450020
0046004f005200200041004e005900200043004c00410049004d002c0020
00440041004d00410047004500530020004f00520020004f005400480045
00520020004c0049004100420049004c004900540059002c002000570048
0045005400480045005200200049004e00200041004e0020004100430054
0049004f004e0020004f004600200043004f004e00540052004100430054
002c00200054004f005200540020004f00520020004f0054004800450052
0057004900530045002c002000410052004900530049004e004700200046
0052004f004d002c0020004f005500540020004f00460020004f00520020
0049004e00200043004f004e004e0045004300540049004f004e00200057
004900540048002000540048004500200053004f00460054005700410052
00450020004f0052002000540048004500200055005300450020004f0052
0020004f00540048004500520020004400450041004c0049004e00470053
00200049004e002000540048004500200053004f00460054005700410052
0045002e000d0068007400740070003a002f002f007700770077002e006d
006900630072006f0073006f00660074002e0063006f006d002f00740079
0070006f006700720061007000680079002f0066006f006e00740073002f
00640065006600610075006c0074002e0061007300700078a92032303137
204d6963726f736f667420436f72706f726174696f6e2e20416c6c205269
676874732052657365727665642e0d486562726577204f70656e54797065
204c61796f7574206c6f67696320636f7079726967687420a92032303033
202620323030372c2052616c70682048616e636f636b2026204a6f686e20
487564736f6e2e2054686973206c61796f7574206c6f67696320666f7220
4269626c6963616c20486562726577206973206f70656e20736f75726365
20736f66747761726520756e64657220746865204d4954204c6963656e73
653b2073656520656d626564646564206c6963656e736520646573637269
7074696f6e20666f722064657461696c732e43616c696272692069732061
206d6f6465726e2073616e732073657269662066616d696c792077697468
20737562746c6520726f756e64696e6773206f6e207374656d7320616e64
20636f726e6572732e204974206665617475726573207265616c20697461
6c6963732c20736d616c6c20636170732c20616e64206d756c7469706c65
206e756d6572616c20736574732e204974732070726f706f7274696f6e73
20616c6c6f77206869676820696d7061637420696e2074696768746c7920
736574206c696e6573206f662062696720616e6420736d616c6c20746578
7420616c696b652e2043616c696272692773206d616e7920637572766573
20616e6420746865206e65772072617374657269736572207465616d2075
7020696e206269676765722073697a657320746f2072657665616c206120
7761726d20616e6420736f6674206368617261637465722e4d6963726f73
6f66743a2043616c69627269204974616c696356657273696f6e20362e32
3043616c696272692d4974616c696343616c696272692069732061207472
6164656d61726b206f6620746865204d6963726f736f66742067726f7570
206f6620636f6d70616e6965732e4c7563286173292064652047726f6f74
687474703a2f2f7777772e6d6963726f736f66742e636f6d2f7479706f67
72617068792f6374666f6e7473687474703a2f2f6c75636173666f6e7473
2e636f6d4d6963726f736f667420737570706c69656420666f6e742e2059
6f75206d617920757365207468697320666f6e7420746f20637265617465
2c20646973706c61792c20616e64207072696e7420636f6e74656e742061
73207065726d697474656420627920746865206c6963656e736520746572
6d73206f72207465726d73206f66207573652c206f6620746865204d6963
726f736f66742070726f647563742c20736572766963652c206f7220636f
6e74656e7420696e207768696368207468697320666f6e74207761732069
6e636c756465642e20596f75206d6179206f6e6c792028692920656d6265
64207468697320666f6e7420696e20636f6e74656e74206173207065726d
69747465642062792074686520656d62656464696e672072657374726963
74696f6e7320696e636c7564656420696e207468697320666f6e743b2061
6e6420286969292074656d706f726172696c7920646f776e6c6f61642074
68697320666f6e7420746f2061207072696e746572206f72206f74686572
206f75747075742064657669636520746f2068656c70207072696e742063
6f6e74656e742e20416e79206f74686572207573652069732070726f6869
62697465642e0d0d54686520666f6c6c6f77696e67206c6963656e73652c
206261736564206f6e20746865204d4954206c6963656e73652028687474
703a2f2f656e2e77696b6970656469612e6f72672f77696b692f4d49545f
4c6963656e7365292c206170706c69657320746f20746865204f70656e54
797065204c61796f7574206c6f67696320666f72204269626c6963616c20
48656272657720d24c61796f7574204c6f676963d3206173206a6f696e74
6c7920646576656c6f7065642062792052616c70682048616e636f636b20
616e64204a6f686e20487564736f6e2e200d0d5065726d697373696f6e20
697320686572656279206772616e7465642c2066726565206f6620636861
7267652c20746f20616e7920706572736f6e206f627461696e696e672061
20636f7079206f6620746865204f70656e54797065204c61796f7574206c
6f67696320666f72204269626c6963616c2048656272657720616e642061
73736f63696174656420646f63756d656e746174696f6e2066696c657320
2874686520d24c61796f7574204c6f67696320536f667477617265d3292c
20746f206465616c20696e20746865204c61796f7574204c6f6769632053
6f66747761726520776974686f7574207265737472696374696f6e2c2069
6e636c7564696e6720776974686f7574206c696d69746174696f6e207468
652072696768747320746f207573652c20636f70792c206d6f646966792c
206d657267652c207075626c6973682c20646973747269627574652c2073
75626c6963656e73652c20616e642f6f722073656c6c20636f7069657320
6f6620746865204c61796f7574204c6f67696320536f6674776172652c20
616e6420746f207065726d697420706572736f6e7320746f2077686f6d20
746865204c61796f7574204c6f67696320536f6674776172652069732066
75726e697368656420746f20646f20736f2c207375626a65637420746f20
74686520666f6c6c6f77696e6720636f6e646974696f6e733a0d0d546865
2061626f766520636f70797269676874206e6f7469636520616e64207468
6973207065726d697373696f6e206e6f74696365207368616c6c20626520
696e636c7564656420696e20616c6c20636f70696573206f722073756273
74616e7469616c20706f7274696f6e73206f6620746865204c61796f7574
204c6f67696320536f6674776172652e0d0d54484520534f465457415245
2049532050524f564944454420274153204953272c20574954484f555420
57415252414e5459204f4620414e59204b494e442c204558505245535320
4f5220494d504c4945442c20494e434c5544494e4720425554204e4f5420
4c494d4954454420544f205448452057415252414e54494553204f46204d
45524348414e544142494c4954592c204649544e45535320464f52204120
504152544943554c415220505552504f534520414e44204e4f4e494e4652
494e47454d454e542e20494e204e4f204556454e54205348414c4c205448
4520415554484f5253204f5220434f5059524947485420484f4c44455253
204245204c4941424c4520464f5220414e5920434c41494d2c2044414d41
474553204f52204f54484552204c494142494c4954592c20574845544845
5220494e20414e20414354494f4e204f4620434f4e54524143542c20544f
5254204f52204f54484552574953452c2041524953494e472046524f4d2c
204f5554204f46204f5220494e20434f4e4e454354494f4e205749544820
54484520534f465457415245204f522054484520555345204f52204f5448
4552204445414c494e475320494e2054484520534f4654574152452e0d68
7474703a2f2f7777772e6d6963726f736f66742e636f6d2f7479706f6772
617068792f666f6e74732f64656661756c742e61737078004d0069006300
72006f0073006f0066007400200073007500700070006c00690065006400
200066006f006e0074002e00200059006f00750020006d00610079002000
75007300650020007400680069007300200066006f006e00740020007400
6f0020006300720065006100740065002c00200064006900730070006c00
610079002c00200061006e00640020007000720069006e00740020006300
6f006e00740065006e00740020006100730020007000650072006d006900
7400740065006400200062007900200074006800650020006c0069006300
65006e007300650020007400650072006d00730020006f00720020007400
650072006d00730020006f00660020007500730065002c0020006f006600
200074006800650020004d006900630072006f0073006f00660074002000
700072006f0064007500630074002c002000730065007200760069006300
65002c0020006f007200200063006f006e00740065006e00740020006900
6e0020007700680069006300680020007400680069007300200066006f00
6e0074002000770061007300200069006e0063006c007500640065006400
2e00200059006f00750020006d006100790020006f006e006c0079002000
280069002900200065006d00620065006400200074006800690073002000
66006f006e007400200069006e00200063006f006e00740065006e007400
20006100730020007000650072006d006900740074006500640020006200
79002000740068006500200065006d00620065006400640069006e006700
20007200650073007400720069006300740069006f006e00730020006900
6e0063006c007500640065006400200069006e0020007400680069007300
200066006f006e0074003b00200061006e00640020002800690069002900
2000740065006d0070006f0072006100720069006c007900200064006f00
77006e006c006f006100640020007400680069007300200066006f006e00
7400200074006f002000610020007000720069006e007400650072002000
6f00720020006f00740068006500720020006f0075007400700075007400
2000640065007600690063006500200074006f002000680065006c007000
20007000720069006e007400200063006f006e00740065006e0074002e00
200041006e00790020006f00740068006500720020007500730065002000
690073002000700072006f0068006900620069007400650064002e000d00
0a000d000a00540068006500200066006f006c006c006f00770069006e00
670020006c006900630065006e00730065002c0020006200610073006500
640020006f006e00200074006800650020004d004900540020006c006900
630065006e00730065002000280068007400740070003a002f002f006500
6e002e00770069006b006900700065006400690061002e006f0072006700
2f00770069006b0069002f004d00490054005f004c006900630065006e00
7300650029002c0020006100700070006c00690065007300200074006f00
200074006800650020004f00700065006e00540079007000650020004c00
610079006f007500740020006c006f00670069006300200066006f007200
20004200690062006c006900630061006c00200048006500620072006500
770020201c004c00610079006f007500740020004c006f00670069006320
1d0020006100730020006a006f0069006e0074006c007900200064006500
760065006c006f007000650064002000620079002000520061006c007000
68002000480061006e0063006f0063006b00200061006e00640020004a00
6f0068006e00200048007500640073006f006e002e0020000d000a000d00
0a005000650072006d0069007300730069006f006e002000690073002000
68006500720065006200790020006700720061006e007400650064002c00
2000660072006500650020006f0066002000630068006100720067006500
2c00200074006f00200061006e007900200070006500720073006f006e00
20006f0062007400610069006e0069006e00670020006100200063006f00
7000790020006f006600200074006800650020004f00700065006e005400
79007000650020004c00610079006f007500740020006c006f0067006900
6300200066006f00720020004200690062006c006900630061006c002000
480065006200720065007700200061006e00640020006100730073006f00
630069006100740065006400200064006f00630075006d0065006e007400
6100740069006f006e002000660069006c00650073002000280074006800
650020201c004c00610079006f007500740020004c006f00670069006300
200053006f006600740077006100720065201d0029002c00200074006f00
20006400650061006c00200069006e00200074006800650020004c006100
79006f007500740020004c006f00670069006300200053006f0066007400
7700610072006500200077006900740068006f0075007400200072006500
73007400720069006300740069006f006e002c00200069006e0063006c00
7500640069006e006700200077006900740068006f007500740020006c00
69006d00690074006100740069006f006e00200074006800650020007200
69006700680074007300200074006f0020007500730065002c0020006300
6f00700079002c0020006d006f0064006900660079002c0020006d006500
7200670065002c0020007000750062006c006900730068002c0020006400
6900730074007200690062007500740065002c0020007300750062006c00
6900630065006e00730065002c00200061006e0064002f006f0072002000
730065006c006c00200063006f00700069006500730020006f0066002000
74006800650020004c00610079006f007500740020004c006f0067006900
6300200053006f006600740077006100720065002c00200061006e006400
200074006f0020007000650072006d006900740020007000650072007300
6f006e007300200074006f002000770068006f006d002000740068006500
20004c00610079006f007500740020004c006f0067006900630020005300
6f0066007400770061007200650020006900730020006600750072006e00
69007300680065006400200074006f00200064006f00200073006f002c00
20007300750062006a00650063007400200074006f002000740068006500
200066006f006c006c006f00770069006e006700200063006f006e006400
6900740069006f006e0073003a000d000a000d000a005400680065002000
610062006f0076006500200063006f007000790072006900670068007400
20006e006f007400690063006500200061006e0064002000740068006900
730020007000650072006d0069007300730069006f006e0020006e006f00
740069006300650020007300680061006c006c0020006200650020006900
6e0063006c007500640065006400200069006e00200061006c006c002000
63006f00700069006500730020006f007200200073007500620073007400
61006e007400690061006c00200070006f007200740069006f006e007300
20006f006600200074006800650020004c00610079006f00750074002000
4c006f00670069006300200053006f006600740077006100720065002e00
0d000a000d000a00540048004500200053004f0046005400570041005200
45002000490053002000500052004f005600490044004500440020002700
4100530020004900530027002c00200057004900540048004f0055005400
2000570041005200520041004e005400590020004f004600200041004e00
590020004b0049004e0044002c0020004500580050005200450053005300
20004f005200200049004d0050004c004900450044002c00200049004e00
43004c005500440049004e004700200042005500540020004e004f005400
20004c0049004d004900540045004400200054004f002000540048004500
2000570041005200520041004e00540049004500530020004f0046002000
4d00450052004300480041004e0054004100420049004c00490054005900
2c0020004600490054004e00450053005300200046004f00520020004100
200050004100520054004900430055004c00410052002000500055005200
50004f0053004500200041004e00440020004e004f004e0049004e004600
520049004e00470045004d0045004e0054002e00200049004e0020004e00
4f0020004500560045004e00540020005300480041004c004c0020005400
48004500200041005500540048004f005200530020004f00520020004300
4f005000590052004900470048005400200048004f004c00440045005200
530020004200450020004c004900410042004c004500200046004f005200
200041004e005900200043004c00410049004d002c002000440041004d00
410047004500530020004f00520020004f00540048004500520020004c00
49004100420049004c004900540059002c00200057004800450054004800
45005200200049004e00200041004e00200041004300540049004f004e00
20004f004600200043004f004e00540052004100430054002c0020005400
4f005200540020004f00520020004f005400480045005200570049005300
45002c002000410052004900530049004e0047002000460052004f004d00
2c0020004f005500540020004f00460020004f005200200049004e002000
43004f004e004e0045004300540049004f004e0020005700490054004800
2000540048004500200053004f0046005400570041005200450020004f00
52002000540048004500200055005300450020004f00520020004f005400
48004500520020004400450041004c0049004e0047005300200049004e00
2000540048004500200053004f004600540057004100520045002e000d00
0a000000b10903b8027ab21e3e1fb80279b21e3e1fb80278b21e0b1fb802
77b21e0b1fb80276b21e3a1fb80275b21e3a1fb80274b21e3e1fb80273b2
1e3b1fb80272b21e3c1fb80271b21e3c1fb80270b21e3c1fb8026fb21e3d
1fb8026eb21e3d1fb8026db21e3e1fb8026cb21e3e1fb8026bb21d411fb8
026ab21d411fb80269b21d421fb80268b21d431fb80267b21d431fb80266
b21d431fb80265b21d431fb80264b21d431fb80263b21d411fb80262b21d
421fb80261b21d421fb80260b21d431fb8025fb21d431fb8025eb21c451f
b8025db21c451fb8025cb21c451fb8025bb21c451fb8025ab21c451fb802
59b21c451fb80258b21c451fb80257b21c451fb80256b21c451fb80255b2
1c451fb80254b21c451fb80252b21c451fb80251b21c451fb80250b21c45
1fb8024fb21c451fb8024eb21c441fb8024db21c451fb8024cb21c451fb8
024bb21c451fb8024ab21c451fb80249b21c451fb80248b21c451fb80247
b21c451fb80246b21c451fb80245b21c451fb80244b21b491fb80243b21b
4a1fb80242b21b4a1fb80241b21b4a1fb80240b21b4b1fb8023fb21b4b1f
b8023eb21b4c1fb8023db21b4c1fb8023cb21b4c1fb8023bb21b4c1fb802
3ab21b4c1fb80253b21b4c1fb80239b21b491fb80238b21b491fb80237b2
1b4a1fb80236b21b4a1fb80235b21b4a1fb80234b21b4b1fb80233b21b4b
1fb80232b21b4c1fb80231b21b4c1fb80230b21b4c1fb8022fb21b4c1fb8
022eb21b4c1fb8022db21b491fb8022cb21b4a1fb8022bb21b4b1fb8022a
b21b4c1fb80229b21b4c1fb80228b21b4c1fb80227b21b491fb80226b21b
491fb80225b21b4a1fb80224b21b4a1fb80223b21b4b1fb80222b21b4c1f
b80221b21b4c1fb80220b21b4c1fb8021fb21b4c1fb8021eb21b4c1fb802
1db21a4e1fb8021cb21a4e1fb8021bb21a4f1fb8021ab21a4f1fb80219b2
1a4f1fb80218b21a4e1fb80217b21a4e1fb80216b21a4f1fb80215b21a4f
1fb80214b21a4f1fb80213b21a4e1fb80212b21a4e1fb80211b21a4f1fb8
0210b21a4e1fb8020fb21a4e1fb8020eb21a4f1fb8020db21a4f1fb8020c
b21a4f1fb8020bb21a4f1fb8020ab21a4f1fb80209b219501fb80208b219
511fb80207b219511fb80206b219511fb80205b219511fb80204b219501f
b80203b219511fb80202b219511fb80201b219511fb80200b219511fb801
ffb219511fb801feb219511fb801fdb219501fb801fcb219511fb801fbb2
19511fb801fab219511fb801f9b219511fb801f8b219511fb801f7b21951
1fb801f6b218531fb801f5b218531fb801f4b218541fb801f3b218541fb8
01f2b218541fb801f1b218541fb801f0b218531fb801efb218531fb801ee
b218541fb801edb218541fb801ecb218541fb801ebb218541fb801eab218
531fb801e9b218531fb801e8b218531fb801e7b218541fb801e6b218541f
b801e5b218541fb801e4b218541fb801e3b218531fb801e2b218531fb801
e1b218541fb801e0b218541fb801dfb218541fb801deb218541fb801ddb2
17561fb801dcb217561fb801dbb217571fb801dab217571fb801d9b21756
1fb801d8b217561fb801d7b217571fb801d6b217571fb801d5b217571fb8
01d4b217571fb801d3b217561fb801d2b217571fb801d1b217561fb801d0
b217561fb801cfb217571fb801ceb217571fb801cdb217571fb801ccb217
571fb801cbb217571fb801cab217561fb801c9b217561fb801c8b217571f
b801c7b217571fb801c6b217571fb801c5b217571fb801c4b2163e1fb801
c3b2163f1fb801c2b2163f1fb801c1b2165b1fb801c0b2165b1fb801bfb2
165b1fb801beb2165b1fb801bdb2165b1fb801bcb2165b1fb801bbb2165b
1fb801bab2163f1fb801b9b2163f1fb801b8b2165b1fb801b7b2165b1fb8
01b6b2165b1fb801b5b2165b1fb801b4b2165b1fb801b3b2165b1fb801b2
b2165b1fb801b1b2163f1fb801b0b2163e1fb801afb2163f1fb801aeb216
3f1fb801adb2165b1fb801acb2165b1fb801abb2165b1fb801aab2165b1f
b801a9b2165b1fb801a8b2163e1fb801a7b2163f1fb801a6b2165b1fb801
a5b2165b1fb801a4b2165b1fb801a3b2165b1fb801a2b2165b1fb801a1b2
165b1fb801a0b2165b1fb8019fb2165b1fb8019eb215621fb8019db21562
1fb8019cb215631fb8019bb215641fb8019ab215651fb80199b215661fb8
0198b215661fb80197b215661fb80196b215661fb80195b215661fb80194
b215661fb80193b215661fb80192b215611fb80191b215621fb80190b215
631fb8018fb215641fb8018eb215641fb8018db215651fb8018cb215661f
b8018bb215661fb8018ab215631fb80189b215641fb80188b215551fb801
87b215611fb80186b215621fb80185b215621fb80184b215631fb80183b2
15651fb80182b215661fb80181b215661fb80180b215661fb8017fb21566
1fb8017eb215661fb8017db215661fb8017cb215661fb8017bb215661fb8
017ab215451fb80179b215611fb80178b215621fb80177b215621fb80176
b215631fb80175b215641fb80174b215641fb80173b215651fb80172b215
661fb80171b215661fb80170b215661fb8016fb215661fb8016eb215661f
b8016db215661fb8016cb215661fb8016bb215551fb8016ab215451fb801
69b215451fb80168b215361fb80167b215361fb80166b214821fb80165b2
14561fb80164b2147f1fb80163b214551fb80162b214561fb80161b21440
1fb80160b214551fb8015fb214561fb8015eb2147e1fb8015db214831fb8
015cb214851fb8015bb2133d1fb8015ab2131e1fb80159b2131e1fb80158
b2130a1fb80157b2130a1fb80156b2130b1fb80155b2133a1fb80154b213
3a1fb80153b2133a1fb80152b2133b1fb80151b2133c1fb80150b2133c1f
b8014fb212451fb8014eb212461fb8014db212461fb8014cb212451fb801
4bb212451fb8014ab212461fb80149b212461fb80148b212461fb80147b2
12441fb80146b212451fb80145b212461fb80144b212461fb80143b21147
1fb80142b211571fb80141b211581fb80140b211591fb8013fb2115a1fb8
013eb2115a1fb8013db2115b1fb8013cb2115b1fb8013bb2115b1fb8013a
b2115b1fb80139b2112b1fb80138b2112c1fb80137b211391fb80136b211
391fb80135b211461fb80134b211471fb80133b211471fb80132b211551f
b80131b211551fb80130b211561fb8012fb211561fb8012eb211571fb801
2db211571fb8012cb211581fb8012bb211591fb8012ab211591fb80129b2
115a1fb80128b2115a1fb80127b2115b1fb80126b2115b1fb80125b2115b
1fb80124b2115b1fb80123b211591fb80122b2115a1fb80121b211391fb8
0120b211471fb8011fb211561fb8011eb211561fb8011db211591fb8011c
b211591fb8011bb2115b1fb8011ab2115b1fb80119b2115b1fb80118b211
561fb80117b211561fb80116b211571fb80115b211571fb80114b211581f
b80113b2115a1fb80112b2115a1fb80111b2115b1fb80110b2115b1fb801
0fb2115b1fb8010eb2115b1fb8010db2115a1fb8010cb2115b1fb8010bb2
105d1fb8010ab2105e1fb80109b2105f1fb80108b2105f1fb80107b2105f
1fb80106b2105f1fb80105b2105d1fb80104b2105e1fb80103b2105f1fb8
0102b2105f1fb80101b2105f1fb8010040ff105f1fff105d1ffe105f1ffd
105f1ffc105f1ffb105f1ffa105d1ff9105e1ff8105f1ff7105f1ff6105f
1ff5105f1ff40f621ff30f621ff20f631ff10f641ff00f641fef0f641fee
0f641fed0f621fec0f621feb0f631fea0f641fe90f641fe80f641fe70f64
1fe60f621fe50f621fe40f641fe30f621fe20f621fe10f631fe00f641fdf
0f641fde0f641fdd0f641fdc0f641fdb0f641fda0e671fd90e681fd80e68
1fd70e681fd60e681fd50e671fd40e681fd30e681fd20e681fd10e671fd0
0e681fcf0e681fce0e681fcd0e681fcc0e681fcb0e681fca0e681fc90e68
1fc80d6b1fc70d6c1fc60d2a1fc50d6c1fc40d2c1fc30d6b1fc20d6c1fc1
0d6d1f40ffc00d6a1fbf0d691fbe0d681fbd0d6b1fbc0d311fbb0d311fba
0d311fb90c711fb80c721fb70c731fb60c741fb50c741fb40c741fb30c73
1fb20c741fb10d311fb00d311faf0d311fae0d311fad0d311fac0d311fab
0d311faa0d311fa90b7e1fa80b7a1fa70b791fa60b7a1fa50b7c1fa40b7d
1fa30b7e1fa20b7e1fa10b7e1fa00b7e1f9f0b7e1f9e0b7e1f9d0b7e1f9c
0b7e1f9b0b7e1f9a0b2d1f990b2d1f980aa71f970aa51f960aa71f950aa7
1f940aa71f930aa71f920a681f910a821f900a9b1f8f0a9d1f8e0a9f1f8d
0aa71f8c0aa71f8503251f8403381f8301381f8255805581ab80557f557d
557eab7d550b7d010b7d1b7d4b7d7b7dab7ddb7d4012060a7c557a557bab
7a557955775578ab7755ba028900660288403c5576ab7555047514757475
03f47501ab750144750130750102007510752075030c7455725573ab7255
007250728072b072043bb072e072020072010ab8ffc0b3721b1e46b8ffc0
407c720d104671556f5570ab6f556e666d556a03251f6938675568ab6755
6638645565ab645563386255613860555f385d555eab5d555c385a555bab
5a55593858555703251f5638545555ab54555338515552ab51554f384e55
4e03251f4d384b554cab4b554a38485549ab4855473846554503381f001c
101c201c0310b8ffc0404e1c1b1e46001b0142301b401be01bf01b04001b
b01bc01b03120f1a1f1a02290f1901434f19016f197f198f19030f18cf18
024018292c460f17cf17df17ef1704134017292e460016101620160315b8
ffc0b3164d5446b8ffc0b3163f4446b8ffc0b316313546b8ffc0401f1623
26460f15010f151f150245ef1501860003012001010001100120010308b8
ffc0b401151f4603bc01000100000500010190b154532b2b4bb807ff524b
b008505bb00188b02553b00188b040515ab00688b000555a5b58b101018e
59b101024354b0144b515a58b101018e59858d8db1160142001d424bb01d
5358b203a0a01d42594bb0805358b20340401d42594bb0ff5358b2030000
1d4259004bb0ff5358b1160042592b5e7375732b58403e080011e011f011
0315bf10cf10020f0f010f0fff0f02400f3135460f0e1f0e020f0e1f0eff
0e03400e3137460f0d1f0d020f0d1f0dff0d0316400d313746b8ffc04027
0c5054460f0b1f0b02553f0b4f0b02400b3f4346400b2d30460003012001
0100011001200103085e7375732b2b745e732b2b5e73742b73742b737474
5e735e5901755e73742b2b2b2b5e732b5e732b7374755e735e735e73755e
732b5e73002b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b5e73755e732b2b5e735f73737373742b2b2b2b2b2b5e73742b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b012b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b185f5e00000000>
[15609 10011 ] AllocGlyphStorage
]def 
124 60 
PrepFor2015
Type42DictEnd
2 374 4 <0002ffcafffa042705140022002600fcb0852b58ba027d027e00582bb101
02435558403a181013014d250c0d240d0d16260b0a230a23221824240a01
1624232625ed400b232218031d0a0d01160428000c0116030c0c121d5212
550555282b183f3f3f12392f005f5e5d2b1739121739331a4ded32113301
2fc43239192f333333107d87c4c41101331087c4c43130012b1b40212423
2625ed400b232218031d0a0d01160428000c0116030c0c121d5212550555
282b183f3f3f12392f005f5e5d2b1739121739331a4ded3211333130591b
401c2423260c25ed6c0b232218031d0a0d0116040c0c121d521255055528
ba027d027e00582b2b3f3f3f12392f1739121739332b3211333031592516
0e0223222e02270321030e03232226263637013e0333321e021707230121
04240303132822162011080130fde5a9050d17251b1e240e060b02a20710
1a281d2129190a028f01fea201c03d161b0e0403070c09013bfec80a0d08
03050e1b1604b20b0e080303080f0b8dfd7b>HIBBAA+Calibri,Italic AddT42Char 
2 4810 258 <00020051ffed03e103ca0026003b00c2b0852b58ba027f028000582bb101
02435558b3091d081eb801afb42627263b08b801aeb7000f260113032631
b8021e40171300093b271d26060321492af91a4a36f8400e4d034c282b18
3f3f1a4ded3fed3f121739012fedd45f5e5ddded33113310ed1139393130
1b401600093b271d26060321492af91a4a36f8400e4d034c282b183f3f1a
4ded3fed3f1217393130591b401900093b271d26060321491a2af96c1a4a
0e36f86c0e4d034c28ba027f028000582b2b3f3f2b3f2b3f121739303159
25060623222e0237370e0323222e0235343e043332161737363633321e02
0707262623220e0415141e0233323e0237032c04242a141a100603210d44
5d723b50693e17152f4b6a8c59597f3213042628141b100401d32f6d4436
5743311f0f0b1f362b376f604a1219110e04070b09aa204c402a385c743d
388e948c6f43483f5b100e03080c07ec454533546b726e2c234539233d6c
9258>HIBBAA+Calibri,Italic AddT42Char 
2 5172 272 <0001004cffed035603c9003500b9b0852b58ba027f028000582bb1010243
5558b31c1c0011b8021e401d2834f7281f0501050af62f4a20f628001910
19020a031914fa40254d282b183f1a4dfdd4005f5e5d2bed3ffdd4005d2b
ed012fedc4392f31301b401c34f7281f0501050af62f4a20f62800191019
020a031914fa40254d282b183f1a4dfdd4005f5e5d2bed3ffdd4005d2bed
3130591b40170534f76c052f0af66c2f4a1920f66c192514fa6c254d28ba
027f028000582b2b3f2bc42b3f2bc42b30315901140e0223222e0223220e
0415141633323e0233321615140e0623222635343e0433321e040356070e
130c0e1e314b3a406349301e0d5a59415d412a10080904090d183c4f5c31
a19f15324e729661284a41351d07034e122621161d241e35556c6e672667
6a2029200f0e0c21231e19241d13a4a23d91938a6b400d16211a1200>HIBBAA+Calibri,Italic AddT42Char 
2 10206 349 <0002003ffffa01ef052f00130029009bb0852b58ba027f028000582bb101
02435558b4291f141e00b80262400b0a1f1e1e141f290424190fb80147b6
05402449194c282b183f3f1ade4ded11121739012fd6d4ed113311333130
1bb71e141f290424190fb80147b605402449194c282b183f3f1ade4ded11
1217393130591b40091e141f29042419050fb80147b76c05402449194c28
ba027f028000582b2b3f3f1ace2b11121739303159010e0323222e02373e
0333321e02010e0323222e0237133e0333321e020701e905111c2a1e1d26
12020506121b2a1e1d251302fef7020a142118191f110502b3010a142119
181f11050104cc1c26170a0a17261c1c251909091925fb31080b08040408
0b080384070c080404080c07>HIBBAA+Calibri,Italic AddT42Char 
2 10632 374 <0001003ffffa03b003ca003a00adb0852b58ba027f028000582bb1010243
55584026311a1a1b26040e03000f0114030f0e2515f940364a251b0e041a
0f312608202b49204c094c282b183f3f3f1217393f1a4ded012fc4c45f5e
5d321133c63332113331301b401615f940364a251b0e041a0f312608202b
49204c094c282b183f3f3f1217393f1a4ded3130591b40173615f96c364a
251b0e041a0f312608202b49204c094c28ba027f028000582b2b3f3f3f12
17393f2b30315901140607030e0323222e023713363635342623220e0207
030e0323222e0237133e0333321e0207073e0333321e0203b00807710209
152019181f1105016f0705343d356f5f4b1150020a142118191f110502b5
0109131d14151b0f0401220f445e713d435a381802d6234424fdce080b08
0404080b08022c1f3a163d4b3d6b9356fe6e080b080404080b080385070c
080303080c07ac224c402a294358>HIBBAA+Calibri,Italic AddT42Char 
2 10976 381 <0002004effed03d103ca0017002f007cb0852b58ba027f028000582bb101
02435558b90000021f4009001810180213031824b8021e400b0c1df5134a
29e340074d282b183f1a4ded3fed012fedd45f5e5ded31301b400a1df513
4a29e340074d282b183f1a4ded3fed3130591b400d131df56c134a0729e3
6c074d28ba027f028000582b2b3f2b3f2b30315901140e0423222e023534
3e0433321e0207342e0223220e0415141e0233323e0403d11c395877975d
6089582a1b3a5777975d6089592aae15314f383c624d39251216314e383d
614d39251202734a9a8f7e5e372e5880514a9a8e7f5e372f58805a325037
1e2b49626f75383250381e2b4a627074>HIBBAA+Calibri,Italic AddT42Char 
2 12638 410 <00010071ffef02c504ad004500c3b0852b58ba027f028000582bb1010243
55584029362c2b372b42080941094137092b2b3037173717003042483741
3c082ce3092b2136480ff840214d282b183f1a4ded3f123939ed32cd3939
3f012fcd39392f2f123911331133107d87c4c41087c4c431301b40134248
37413c082ce3092b2136480ff840214d282b183f1a4ded3f123939ed32cd
39393f3130591b4018424837413c364008362ce36c092b213648210ff86c
214d28ba027f028000582b2b3f2b3f1239392b321a10cd39393f30315901
140e04232303060615141633323e0233321615140e02070e0323222e0235
343e02371323222635343e023333373e0333321e02070733321602c50206
0a0b0e09e66504062b301b281d1608080905080c0708202a2f173852381b
02050503657d0b0c060c130d7e2b010b142118181f1105012be60f0a0393
09151616110afe0a153411332f090a090b0f0d1f1e1807070e0b0618334d
360c1d20200e01fa0d130e252016d6070c090404090c07d61600>HIBBAA+Calibri,Italic AddT42Char 
3 0 448 <0001007cfffa03a303bc00310077b0852b58ba027f028000582bb1010243
5558b900210187b2121628bb021f0000002001fb400b40162d49220d1b49
0d4c282b183f3f12393f012f1a4dedd4ed10dded31301b40092d49220d1b
490d4c282b183f3f12393f3130591b40092d49220d1b490d4c28ba027f02
8000582b2b3f3f12393f303159011406070e03070e0323222e0227032626
35343e0233321e02171315373e03373e0333321e0203a30604255d718750
07121920161f2615090185010108121f1a1a201106016c053b62544b2703
0b15231a181e110703a50a150b6ddfddd5630b0c070204080e0a03550b11
070d0e080303070d09fd1a0c0659a7b2c476090d070303050900>HIBBAA+Calibri,Italic AddT42Char 
2 0 0 <00050000fe7303da050e00030007003b005500560075b0852b58b52d162d
16083c410a01ed00490007016400020020018c0008000101644012040225
370603511b0d117051015144070254003fdddedd5ddeddcd3fdddecd012f
ddedd6ed10fdd6ed1239392f2f31301b400e25370603511b0d1151440740
025400183f1adddedddeddcd3fdddecd303159011121110111211101140e
020707060623222e02373736363333323e0235342e0223220e0223222635
343e02373e0333321e0201140e0207060623222e0235343e023736363332
1e020103dafc5b034ffd06027b1f456e4e24021f1b0e140c050120051f17
083d4f2e130f21352828402f1f070a060205080608293a4422445e3a1afe
b503070b070a2016161a0e0504070c0809201913190e04fe46050efaf205
0efb43046cfb9403313467523605980a0802040606bc1b17253b4621192b
20130f13100c0e05131612060713120b263d4afd8b08171a17070a0a070c
100a0918181608090a060c10fd38>HIBBAA+Calibri,Italic AddT42Char 
HIBBAA+Calibri,Italic /CharStrings get begin
/A 4 def
/a 258 def
/c 272 def
/i 349 def
/n 374 def
/o 381 def
/t 410 def
/v 448 def
end
HIBBAA+Calibri,Italic /Encoding get
dup 65 /A put
dup 97 /a put
dup 99 /c put
dup 105 /i put
dup 110 /n put
dup 111 /o put
dup 116 /t put
dup 118 /v put
pop
end
%ADOEndSubsetFont
/QPENPI+Calibri,Italic /HIBBAA+Calibri,Italic findfont ct_VMDictPut
/QPENPI+Calibri,Italic*1 
[65{/.notdef}rp /A 31{/.notdef}rp /a /.notdef /c 5{/.notdef}rp /i 
4{/.notdef}rp /n /o 4{/.notdef}rp /t /.notdef /v 137{/.notdef}rp]
QPENPI+Calibri,Italic nf
QPENPI+Calibri,Italic*1 [18.025 0 0 -18.025 0 0 ]msf
176.478 62.71 mo
(Activation)
[10.5085 7.4984 6.0385 3.78517 8.25543 9.0307 6.03848 4.48807 9.03064 0 ]xsh
%ADOBeginSubsetFont: HIBBAA+Calibri,Italic AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal QPENPI+Calibri,Italic gcheck setglobal} if
3 4226 855 <0002006dfff701d70395001300270059b0852b58bf0000026c000a001402
6d001e00230153b2194c05b80154b20f4828ba027f028000582b2b3fed3f
ed012fedd4ed31301bb11923b80153b46c194c0f05b80154b36c0f4828ba
027f028000582b2b3f2b3f2b303159010e0323222e02373e0333321e0203
0e032322262634373e0333321e0201d006131d2b1f1e2613010706121c2b
1f1e2714019205131e2b1f1f26130606121d2a1e202712020320202c1b0c
0c1b2c20212d1b0c0c1b2dfd29202c1b0c0a1a2d22202d1b0c0c1b2d>QPENPI+Calibri,Italic AddT42Char 
QPENPI+Calibri,Italic /CharStrings get begin
/colon 855 def
end
QPENPI+Calibri,Italic /Encoding get
dup 58 /colon put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/QPENPI+Calibri,Italic*1 
[58{/.notdef}rp /colon 6{/.notdef}rp /A 31{/.notdef}rp /a /.notdef /c 
5{/.notdef}rp /i 4{/.notdef}rp /n /o 4{/.notdef}rp /t /.notdef 
/v 137{/.notdef}rp]
QPENPI+Calibri,Italic nf
QPENPI+Calibri,Italic*1 [18.025 0 0 -18.025 0 0 ]msf
250.558 62.71 mo
(:)sh
%ADOBeginSubsetFont: WGJAAA+Calibri AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal QPENPH+Calibri gcheck setglobal} if

3 0 3 <> QPENPH+Calibri AddT42Char 
QPENPH+Calibri /CharStrings get begin
/space 3 def
end
QPENPH+Calibri /Encoding get
dup 32 /space put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/QPENPH+Calibri*1 
[32{/.notdef}rp /space 15{/.notdef}rp /zero /one 2{/.notdef}rp /four 2{/.notdef}rp 
/seven /eight 12{/.notdef}rp /E 10{/.notdef}rp /P 175{/.notdef}rp]
QPENPH+Calibri nf
QPENPH+Calibri*1 [18.025 0 0 -18.025 0 0 ]msf
176.478 80.74 mo
(   )
[3.76721 4.50621 0 ]xsh
%ADOBeginSubsetFont: WGJAAA+Calibri AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal QPENPH+Calibri gcheck setglobal} if
4 5300 898 <00010056febe02440580004f0047b0852b58400d3f3f1dc813130834db26
4adb08002fed2fed12392fed393d2f31301b40133f3f131dc86c13130826
34db6c26084adb6c0800182f2b2f2b12392f2b393d2f30315901140e0223
060623222e023535342e02272e0335343e023736363535343e0233321617
321e0215140e022307220e021515140e02071e031515141e023317321e02
024404090c06121b134356321211233727090c070403070c094a49133355
42131912070d090404090d08291822150b10294434344429100a1521172a
090e0904feff10170d0804012b55806ace44543f270402070e170f10160f
0602087f7ca16980562b0104070e1710111710060111315659924967523b
0b0a3b53664abe5856311201060f1700>QPENPH+Calibri AddT42Char 
QPENPH+Calibri /CharStrings get begin
/braceleft 898 def
end
QPENPH+Calibri /Encoding get
dup 123 /braceleft put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/QPENPH+Calibri*1 
[32{/.notdef}rp /space 15{/.notdef}rp /zero /one 2{/.notdef}rp /four 2{/.notdef}rp 
/seven /eight 12{/.notdef}rp /E 10{/.notdef}rp /P 42{/.notdef}rp /braceleft 
132{/.notdef}rp]
QPENPH+Calibri nf
QPENPH+Calibri*1 [18.025 0 0 -18.025 0 0 ]msf
188.698 80.74 mo
({)sh
%ADOBeginSubsetFont: WGJAAA+Calibri AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal QPENPH+Calibri gcheck setglobal} if
3 15234 410 <00010021ffef026d04ad003a0089b0852b58b4290011232db8fff0b30f01
4d2db8fff0b30d014d2db8fff6b30c014d2db8ffe8b310014d2db8ffe8b3
0b014d2db801f8400c170d2ded23481d0ded174831b80104b1074d003fed
3fedcd3fed012f33e12b2b2b2b2b32cdc43231301b4011232ded6c23481d
1740170ded6c17480731b80104b26c074d00183f2b3f2b1a10cd3f2b3031
5925140e0423222e02351123222635343e02333335343e0233321e021515
33321e02151406232311141633323e0233321e02026d081020292e174664
401d7e0f1205080d087d0713201819201208e7080c0904120fe737471724
1c1408050905045b1d22100e0906254b734e020e2024131a1107d6070c09
0404090c07d607111a132420fe0a5d5f090a09050e18>QPENPH+Calibri AddT42Char 
QPENPH+Calibri /CharStrings get begin
/t 410 def
end
QPENPH+Calibri /Encoding get
dup 116 /t put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/QPENPH+Calibri*1 
[32{/.notdef}rp /space 15{/.notdef}rp /zero /one 2{/.notdef}rp /four 2{/.notdef}rp 
/seven /eight 12{/.notdef}rp /E 10{/.notdef}rp /P 35{/.notdef}rp /t 
6{/.notdef}rp /braceleft 132{/.notdef}rp]
QPENPH+Calibri nf
QPENPH+Calibri*1 [18.025 0 0 -18.025 0 0 ]msf
194.378 80.74 mo
(t)sh
QPENPH+Calibri*1 [18.025 0 0 -18.025 0 0 ]msf
200.408 80.74 mo
(1)sh
%ADOBeginSubsetFont: WGJAAA+Calibri AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal QPENPH+Calibri gcheck setglobal} if
4 5586 899 <00010075febe0265058000510047b0852b58400d29294dc605051034db42
1edb10002fed2fed12392fed393d2f31301b40132929054dc66c05051042
34db6c42101edb6c1000182f2b2f2b12392f2b393d2f30315901140e0207
0e031515140e0223222627222e0235343e023337323e023535343e02372e
033535342e022327222e0235343e0233363633321e021515141e0217321e
02026503070c082a38230e14325641131a14070c080606090c072b182216
0a11284533334528110a152117280b0f0a0405090d09111a134256321311
233727080c0803023710160e07010433506348a16980562b0203080d1710
111710060112305659924a7464480b0a2c43584abe5955311201060f1712
10170e0704012b55806ace44452e1905080f1500>QPENPH+Calibri AddT42Char 
QPENPH+Calibri /CharStrings get begin
/braceright 899 def
end
QPENPH+Calibri /Encoding get
dup 125 /braceright put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/QPENPH+Calibri*1 
[32{/.notdef}rp /space 15{/.notdef}rp /zero /one 2{/.notdef}rp /four 2{/.notdef}rp 
/seven /eight 12{/.notdef}rp /E 10{/.notdef}rp /P 35{/.notdef}rp /t 
6{/.notdef}rp /braceleft /.notdef /braceright 130{/.notdef}rp]
QPENPH+Calibri nf
QPENPH+Calibri*1 [18.025 0 0 -18.025 0 0 ]msf
209.528 80.74 mo
(})sh
%ADOBeginSubsetFont: HIBBAA+Calibri,Italic AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal QPENPI+Calibri,Italic gcheck setglobal} if
2 1164 75 <00020072ffed051205210017002f0080b0852b58ba027d027e00582bb101
02435558bf00000239001800240253000c001d0127b2135329b80129b340
0756282b183f1a4ded3fed012fedd4ed31301bb9001d0127b2135329b801
29b3400756282b183f1a4ded3fed3130591bb1131db80127b46c13530729
b80129b36c075628ba027d027e00582b2b3f2b3f2b30315901140e042322
2e0235343e0433321e0207342e0223220e0415141e0233323e0405121c42
6da0dc8e72ac733a1e456fa1d88c71ab733ab820467452689d734b2d131f
487353679c724c2e13035c4dbec4b98f583971a66d56c6c5b68d533b73a9
7a4675542f4d7c9da096374773522d4b7a9b9f96>QPENPI+Calibri,Italic AddT42Char 
2 6472 286 <0002004dffed039d03ca002e003c00beb0852b58ba027f028000582bb101
02435558b62a323706040009b8020e400923110c1e031414232fb8020d40
15002306be37372a1e11110c32d12a4a0cdf401e4d282b183f1a4ded3fed
11392f1112392fed012fd4ed12392f173910ed11173931301b401306be37
372a1e11110c32d12a4a0cdf401e4d282b183f1a4ded3fed11392f111239
2fed3130591b40183706be6c37372a1e11110c2a32d16c2a4a1e0cdf6c1e
4d28ba027f028000582b2b3f2b3f2b11392f1112392f2b30315901140e02
2323060615141633323e0233321615140e02070e0323222e0235343e0433
321e0207342623220e020733323e02039d4088d4946a0705636f40664b30
09090904080d080c3d5464325986592c193656779c6254754b22a9504a41
644d371166698d552302e5456e4e2a213e1b646a1316130d0c0a1c1d1a09
0c17130c28537c5441959286663e2a425137333f2d4c65381a2d3c00>QPENPI+Calibri,Italic AddT42Char 
2 6830 296 <0001ff3dfe9303310578005500c4b0852b58ba027f028000582bb1010243
5558b3121e111fbb01e5003b001101e54023493c4840493b404916164940
3b04002a0ce34e471e3ce33b1f2412484836e340244f282b183f1a4ded3f
c4123939fdc43fed012fc417392f2f2f2f1112393910ed10ed1139393130
1b40130ce34e471e3ce33b1f2412484836e340244f282b183f1a4ded3fc4
123939fdc43fed3130591b40184e0ce36c4e471e483ce36c3b1f24124848
2436e36c244f28ba027f028000582b2b3f2b3fc41239392bc43f2b303159
01140e0423222e0223220e02070733321615140e042323030e0323222627
262635343e0433321e0233323e02371323222635343e043333373e033332
1e021716160331020306080a0607151c26172b3d2c1e0b11c90b0d040609
0b0e07caab113a546e452d39070404030406080a07070d0f15102a3d2b1d
0ca4800a0b0205080c0d0a7e19103c556f431630291f0606060537041115
17140c0809081a3754395a0f110b181715100afcac547b51270e06050c0a
04131517140c0303031a37543b03320d1208171816120b7d527b50270509
0c060512>QPENPI+Calibri,Italic AddT42Char 
2 11538 400 <00010009ffed02eb03ca004600e7b0852b58ba027f028000582bb1010243
5558bc000f01fd003b0034020e402b163b163b1600230f34401b45cf2820
053005400503050acf404a20f928002a102a020c032a2fde401b4d282b18
3f1a4dfdd4005f5e5d2bed3ffdd4005d2bed11123939012fc439392f2f10
ed10ed31301b40240f34401b45cf2820053005400503050acf404a20f928
002a102a020c032a2fde401b4d282b183f1a4dfdd4005f5e5d2bed3ffdd4
005d2bed111239393130591b401b0f34401b0545cf6c05400acf6c404a2a
20f96c2a1b2fde6c1b4d28ba027f028000582b2b3f2bc42b3f2bc42b1112
393930315901140e0223222e0223220e0215141e0415140e0223222e0227
262635343e0433321e0233323e0235342e0435343e0233321e02171602eb
060b0f090c2130432e2c442e1835505d4f353767925a2f5343300d080702
06070a0a070c2237523d374f3419344f5c4f35345f855126473c2c0b0b03
6c0a212016131814192b371e28352a293b533f467957310e161b0c08110c
08161816120b1b1f1b1b2d3c212a352b2a3953404271532e0c12160b0a00
>QPENPI+Calibri,Italic AddT42Char 
QPENPI+Calibri,Italic /CharStrings get begin
/O 75 def
/e 286 def
/f 296 def
/s 400 def
end
QPENPI+Calibri,Italic /Encoding get
dup 79 /O put
dup 101 /e put
dup 102 /f put
dup 115 /s put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/QPENPI+Calibri,Italic*1 
[58{/.notdef}rp /colon 6{/.notdef}rp /A 13{/.notdef}rp /O 17{/.notdef}rp /a 
/.notdef /c /.notdef /e /f 2{/.notdef}rp /i 4{/.notdef}rp 
/n /o 3{/.notdef}rp /s /t /.notdef /v 137{/.notdef}rp]
QPENPI+Calibri,Italic nf
QPENPI+Calibri,Italic*1 [18.025 0 0 -18.025 0 0 ]msf
176.478 98.76 mo
(Offset)
[12.0048 5.28119 5.28119 7.49857 8.27341 0 ]xsh
%ADOBeginSubsetFont: HIBBAA+Calibri,Italic AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal QPENPI+Calibri,Italic gcheck setglobal} if

2 0 3 <> QPENPI+Calibri,Italic AddT42Char 
QPENPI+Calibri,Italic /CharStrings get begin
/space 3 def
end
QPENPI+Calibri,Italic /Encoding get
dup 32 /space put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/QPENPI+Calibri,Italic*1 
[32{/.notdef}rp /space 25{/.notdef}rp /colon 6{/.notdef}rp /A 13{/.notdef}rp /O 
17{/.notdef}rp /a /.notdef /c /.notdef /e /f 2{/.notdef}rp 
/i 4{/.notdef}rp /n /o 3{/.notdef}rp /s /t /.notdef 
/v 137{/.notdef}rp]
QPENPI+Calibri,Italic nf
QPENPI+Calibri,Italic*1 [18.025 0 0 -18.025 0 0 ]msf
220.928 98.76 mo
(: )
[4.49979 0 ]xsh
QPENPH+Calibri*1 [18.025 0 0 -18.025 0 0 ]msf
184.751 116.78 mo
( )sh
QPENPH+Calibri*1 [18.025 0 0 -18.025 0 0 ]msf
188.698 116.78 mo
(4 )
[9.02475 0 ]xsh
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: WGJAAA+Calibri AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal QPENPH+Calibri gcheck setglobal} if
3 5886 272 <0001005affed032003c9003500c8b0852b58b11c00b8ffc0b310014d00b8
ffe0b30d014d00b8ffe8b40b014d0027b8ffe8b310014d27b8fff0b30f01
4d27b8ffeeb30c014d27b8ffe8b30b014d27b8ffeab30d014d27b8020b40
0d2f0e010e19e71f400a0d481f24b80102b4134a03eb31b8ffc0b4090d48
312cb80106b1094d003ffdd42bed3ffdd42bed012f5de12b2b2b2b2bc42b
2b2b3231301b400c1f19e76c1f400a0d481f1324b80102b76c134a3103eb
6c31b8ffc0b5090d4831092cb80106b26c094d00183f2bc42b2b3f2bc42b
2b30315925140e0623222e0235343e0233321e0615140623222e02232206
15141e0233323e0233321e020320020507193c4b582f6196653541719959
2b51443518090602120d0f273c553a777f21405d3c39563f2b0c070a0703
a21119110d19251d12407bb37585bf7a3b101a22180e131812271f212821
b7ae5783582b242b2308131d>QPENPH+Calibri AddT42Char 
3 12384 349 <00020085fffa0151052f0015002100a7b0852b58b73f234f236f230316b8
ffe8b30d014d16b8fff6b30c014d16b8ffe8b313014d16b8ffe0b310014d
16b8fff0b30f014d16b8ffe8b30b014d16bb0271001c0015fff0b30d014d
15b8fff6b30c014d15b8ffe8b30b014d15b8fff0b40f10014c15b801f8b6
0a1f400f014d1fb8013eb4191049054c003f3fd6ed2b012fe12b2b2b2bd4
e12b2b2b2b2b2b31305d1bb1191fb8013eb56c191049054c00183f3fc62b
30315925140e0223222e023511343e0233321e0215131406232226353436
333216013e08122019182013070713201819201208132c3b3a2b2c3b3a2b
19080b080404080b080384070c080404080c0701303a2a29393a2a29>QPENPH+Calibri AddT42Char 
3 12758 364 <00010099fffa037c0571003400b3b0852b58400c3f360129310131401201
4d31b8ffd0b40f10014c31b8ffe0b30d014d31b8ffeab30c014d31b8ffe0
b30b014d31bb02270022000cfff0b40f10014c0cb8fff0b30d014d0cb8ff
f6b30c014d0cb8ffe8b30b014d0cb801f8401a162d2d00400f014d00400c
014d0016220b0528491c46114c054c003f3f3f3f123939012fc42b2b392f
10f12b2b2b2b32e02b2b2b2b2b31305d5d1b400b220b0528491c46114c05
4c00183f3f3f3f12393930315925140e0223222e02270111140e0223222e
023511343e0233321e021511013e0333321e021514060701011616037c08
13221a1b23180f06fe840812201918201307071320181920120801540812
192218192215090d0ffeba016e0d0b1a080c080403070d0901f2fe0d080b
080404080b080538080c080404080c08fcd201760a0d090303070b090c18
10febafe25111500>QPENPH+Calibri AddT42Char 
3 14166 400 <00010051ffed02ce03ca00490110b0852b58400c2f4b3f4b4f4b7f4baf4b
0541b8fff0b30d014d41b8fff6b30c014d41b8fff0b30f014d41b8ffc0b3
13014d41b8fff0b310014d41b8fff0b30b014d41b801dc401f243224320c
1b100d014d1b0a0c014d1b1010014d1b100b014d1b100f014d1bba01f600
00ffc0400a0f014d000c400b014d0cb8ffc0402613014d3f0caf0c020c2e
dd370aeb115011601170110337113711163cdb411b05294a16e8054d003f
ed3f123939ed1139392f2f5d10ed10ed012f5d2b2bd42be12b2b2b2b2b12
39392f2fe12b2b2b2b2b2b31305d1b4025372edd6c110aeb6c0011101120
11030e033711371116293cdb6c411b05294a0516e86c054d00183f2b3f12
39392b1139392f2f5f5e5d2b2b30315901140e0223222e0435343e023332
1e0233323e0235342e0635343e0233321e0615140e0223222e0223220e02
15141e0602ce335e824e30574530160a04060b070b2b3f56382a44321b27
40505551402729527b5224483a291507030303070a06092236492f2a4029
1528405255534027010e456c4a260f171914241f131a10071b201b122336
252634281f222b3e563c3561492c0c1215100c0f16101119100716191613
23301c27352820222a3c5400>QPENPH+Calibri AddT42Char 
QPENPH+Calibri /CharStrings get begin
/c 272 def
/i 349 def
/k 364 def
/s 400 def
end
QPENPH+Calibri /Encoding get
dup 99 /c put
dup 105 /i put
dup 107 /k put
dup 115 /s put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/QPENPH+Calibri*1 
[32{/.notdef}rp /space 15{/.notdef}rp /zero /one 2{/.notdef}rp /four 2{/.notdef}rp 
/seven /eight 12{/.notdef}rp /E 10{/.notdef}rp /P 18{/.notdef}rp /c 
5{/.notdef}rp /i /.notdef /k 7{/.notdef}rp /s /t 6{/.notdef}rp 
/braceleft /.notdef /braceright 130{/.notdef}rp]
QPENPH+Calibri nf
QPENPH+Calibri*1 [18.025 0 0 -18.025 0 0 ]msf
201.908 116.78 mo
(ticks)
[6.0385 4.48816 7.51645 8.25549 0 ]xsh
399.803 149.63 mo
301.928 149.63 li
301.928 0 li
399.803 0 li
399.803 149.63 li
/1 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 49.8216 345.875 ]ct
[99.3693 0 0 151.126 251.36 195.497 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 133 
/H 202 
/M[133 0 0 -202 0 202 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 133 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 133 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 133 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 133 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&K)blP!!8,\!<N;t!.k3&!.k4:!!E<(
"U>@)#kSB)#6tD6o`4pkUB9ibrW2TjrW/tukl:ed!!*+l!7LoN!X/rB&[`8,&d&[S#R0l$"9AQ,"9lF@
f)u3["9\`+qZ-KnMZEkZ!<IcPn,NUn#nRpn*LRoC*!@/p%Kuq.!!<6&"9k>$nco4"!s8,qrrJhqliI1g
!gs&@!!EE3&fi+!+lXXK+<ML5#6FQ!!s&H,#djuo#m:M>"pG&$!!30%!<*)6!nIDQ"9&?%!O;^@!!NK4
'd"VDaWnqQ"X5'.&-i71!!30&"o\eR$,[&O#R1D4o`,$o!<U^P]*&'6aoJ@?"9]&H*[9MeZ6KMs+<(js
!VZQs!<NE1#j)Gp#m:M>"p=u"!!<6&!s7fkUBCMsiW,&?"9]&H*[:A(RNht[+<(js!VZQs!<NE1#lY-p
#m:M>"p=u"!!!$$!<WC`"9/Du!.k4F!!EE3'cnQ],6]86)\<5TpAb<s!X/i8QO3Nq":,8;"9J/q!s&E)
!hBGa"9/Cc!8dbZ":>kb,,lgO,6]86)\<5TpAb<s!X/i8Y6j4q":,8;"9J/q!s&E)!jr-a"9/D&!6bH@
!!EE3'cnQ],6T25)\<5S!VZQs!<NE1#a,Jt#m^e@"9J/q!s&E)!gj)a"9/C^!9=+_":>kb,,?IO,6]86
)\<5TpAb<s!X/i8WX7kq":,8;"9J/q!s&E)!jDda"9/D!!6bEG":>kb,.o/O,6]86)\<5TpAb<s!X/i8
_?nQq":,8;"9J/q!s&E)!ltJa"9/D9!42_/":>kb,1IjO,6]86)\<5TpAb<s!X/i8g'P7q":,8;"9J/q
!s&E)!oO0a"9/DQ!1X#l":>kb,4$PO,6]86)\<5TpAb<s!X/i8nd1rq":,8;"9J/q!s&E)!r)ka"9/Di
!/(=Q":>2F*[6^k"X5'.&-i75!;um#!<NE1#a#Ds#RCV;!<Dfn!s&E)!g*Ta"9/CW!:'Uf":>kb,+TtO
,6]86)\<5TpAb<s!X/i8UC$Aq":,8;"9J/q!s&E)!iZ:a"9/Co!7LoN":>kb,./ZO,6]86)\<5TpAb<s
!X/i8]*['q":,8;"9JB"qZ$^!!<WC`"9/CR!:Tsk":>kb,+'VO,6]86)\<5TpAb<s!X/i8SdG#q":,8;
"9J/q!s&E)!i,qa"9/Cj!8%8S":>kb,-W<O,6]86)\<5TpAb<s!X/i8[L(^q":,8;"9J/q!s&E)!k\Wa
"9/D-!5JR;":>kb,02"O,6]86)\<5TpAb<s!X/i8c3_Dq":,8;"9J/q!s&E)!n7=a"9/DE!2ol#":>kb
,2a]O,6]86)\<5TpAb<s!X/i8jpA*q":,8;"9J/q!s&E)!pg#a"9/D]!0@0`":>kb,5<CO,6]86)\<5T
pAb<s!X/i8rX"eq":,8;"9J/q!!*-%!s4JbrrMrrJcPNF"9]&H*[6^k"X5'.&-i71!!E<("UGC#$2Y#3
#RCV;!VHEp!<E9(SHJEbrrJ;`hZ*c^$5FU+W?^XP"X5'.&-i71!!E<("UGC;$0)<p#RCV;!VHEp!<E9(
[0,+brrK/#bQ.P@"9]&H*[6^k"<ns-&-i19pAb<s!X/i8OpM9u#RCV;!VHEp!<E9(Qim'brrJ,[j8];c
$5FU+Ua,:P"X5'.&-i71!!E<("UGC6$0VZu#RCV;!VHEp!<E9(YQNbbrrJtsbQ%bK$5FU+]HbuP"X5'.
&-i71!!E<("UGCN$.&t]#RCV;!VHEp!<E9(a90HbrrKh6ZiC43$5FU+e0D[P"X5'.&-i71!!E<("UGCf
$+L9E#RCV;!VHEp!<E9(hug.brrL[NS,`Zp$5FU+lm&AP"X5'.&-i71!!E<("UGD)$(qS-#RCV;!VHEp
!<E9(p]HibrrMNfKE)#U$3Cq`,*=)R+s7g9#6F]%r;Zs$!X/i8OU20s#R1D4!;6Bp!<E9(OTYRbrrIlT
lMq%j$5FU+SKmeP"X5'.&-i71!!E<("UGC/$1A0'#RCV;!VHEp!<E9(W<;8brrJ_ldf9LR$5FU+[3OKP
"X5'.&-i71!!E<("UGCG$.fId#RCV;!W)lo!!<6&!s4JbrrI]On,NRo$5FU+Qm;GP"X5'.&-i71!!E<(
"UGC*$1nN,#RCV;!VHEp!<E9(U]]obrrJPgfDl$W$5FU+YTr-P"X5'.&-i71!!E<("UGCB$/>gi#RCV;
!VHEp!<E9(]E?UbrrKD*^]4K?$5FU+a<ShP"X5'.&-i71!!E<("UGCZ$,d,Q#RCV;!VHEp!<E9(e-!;b
rrL7BVuQr'$5FU+i$5NP"X5'.&-i71!!E<("UGCr$*4F9#RCV;!VHEp!<E9(liX!brrM*ZO8oCd$5FU+
p`l4P"X5'.&-i71!!E<("UGD5$'Y`!#RCV;!VHEm!<N9(!fdB_!VueJ!;?Hr":>kb,*=)R+s7g9#6FQ!
"9AQ-#RHb'q[!B2#R1D4o`,'p!<WCo"7cQo!L!N@!!EE3'cnQu,O$EV+s7g9#6FQ!"9AQ-#RIU?is>ho
#R1D4o`,'p!<WD2"53kW!NQ4E!;lg"":>kb,*=)Q+s7g9#64f!!!E<("UGBs#mCV@#R1D4o`,'p!<WCj
"8;ot!KI0@!!EE3'cnQp,OQc[+s7g9#6FQ!"9AQ-#RIF:kQq@t#R1D4o`,'p!<WD-"5a4\!N#k@!!EE3
'cnR3,M"(C+s7g9#6FQ!"9AQ-#RJ9Rcj9g\#R1D4o`,'p!<WDE"31ND!PSQ@!!EE3'cnRK,JGB++s7g9
#6FQ!"9AQ-#RK,j\-W9D#R1D4o`,'p!<WD]"0Vh,!S.7@!!EE3'cnRc,Gl[h+s7g9#6FQ!"9AQ-#RKu-
TEt`,#R1D4o`,'p!<WDu".',i!U]r@!!*30!Ylb#OWt#R+<(js!W)lq!!E<("UGBr#mCS?"p=r,p&G0q
!<WCc"9&E&!J^[@!!EE3'cnQi,P<8b+s7g9#6FQ!"9AQ-#RI13mg0+&#R1D4o`,'p!<WD&"6K^c!M9A@
!!EE3'cnR,,MaRJ+s7g9#6FQ!"9AQ-#RJ$Kf*MQc#R1D4qZ-Kn!s&E)!fdB_!J1=@!!EE3'cnQd,PiVg
+s7g9#6FQ!"9AQ-#RI".oEbX+#R1D4o`,'p!<WD!"7$'h!La#@!!EE3'cnR',N9pO+s7g9#6FQ!"9AQ-
#RIjFg^+)h#R1D4o`,'p!<WD9"4IAP!O;^@!!EE3'cnR?,K_57+s7g9#6FQ!"9AQ-#RJ]^`!HPP#R1D4
o`,'p!<WDQ"1n[8!QkD@!!EE3'cnRW,I/Nt+s7g9#6FQ!"9AQ-#RKQ!X9f"8#R1D4o`,'p!<WDi"/>tu
!TF*@!!EE3'cnRo,FTh\+s7g9#6FQ!"9AQ-#RLD9PR.Hu#R1D4o`+sm!W`B)NW]:^q>c*IpAb=!$5FU+
OWt#R+<(js!VZQs!<NE1#aYkp#m:M>"p=u"!!<6&!s5"qncSmmP5sJ?"9]&H*[7R.kp$?U+<(js!VZQs
!<NE1#d4Qp#m:M>"p=u"!!<6&!s5k4g&q?UWrU?Dqu?j&$5FU+OWsuQ+<(js!!2fo"9AQ-#RHS""UPG?
"p=u"!!<6&!s4hlpB1ErNWA,?"9]&H*[7C)mNVlZ+<(js!VZQs!<NE1#c\3p#m:M>"p=u"!!<6&!s5\/
hZNlZV?"g?"9]&H*[86Aeft>B+<(js!VZQs!<NE1#f6np#m:M>"p=u"!!<6&!s6OG`rl>B^&YM?"9]&H
*[9)Y^*<e*+<(js!VZQs!<NE1#hfTp#m:M>"p=u"!!<6&!s7B_Y64e*ec;3?"9]&H*[9qqVBZ6g+<(js
!VZQs!<NE1#kA:p#m:M>"p=u"!!<6&!s86"QNR6gmJqn?!<``2'cnQ],6]86)\<5TqZ-Qp"9AQ-#RHP!
"UGA<"9AMr!!<6&!s4SerWE0$LB-W?"9]&H*[7."ocjVa+<(js!VZQs!<NE1#bq^p#m:M>"p=u"!!<6&
!s5G(jobVaT)d=?"9]&H*[8!:h'3(I+<(js!VZQs!<NE1#eLDp#m:M>"p=u(!;c`u!<E9(NW]:^JcP9?
"9]&H*[6srqBH.f+<(js!VZQs!<NE1#bD@p#m:M>"p=u"!!<6&!s58#lN@.fRK1t?"9]&H*[7g5iZeUN
+<(js!VZQs!<NE1#dt&p#m:M>"p=u"!!<6&!s6+;df]UNZ2hZ?"9]&H*[8ZMas.'6+<(js!VZQs!<NE1
#gNap#m:M>"p=u"!!<6&!s6sS]*&'6aoJ@?"9]&H*[9MeZ6KMs+<(js!VZQs!<NE1#j)Gp#m:M>"p=u"
!!<6&!s7fkUBCMsiW,&?"9]&H*[:A(RNht[+<(js!VZQs!<NE1#lY-p#m:M>"p=u"!!!$$!<WC`"9/Du
!.k4F!!EE3'cnQ],6]86)\<5TpAb<s!X/i8QO3Nq":,8;"9J/q!s&E)!hBGa"9/Cc!8dbZ":>kb,,lgO
,6]86)\<5TpAb<s!X/i8Y6j4q":,8;"9J/q!s&E)!jr-a"9/D&!6bH@!!EE3'cnQ],6T25)\<5S!VZQs
!<NE1#a,Jt#m^e@"9J/q!s&E)!gj)a"9/C^!9=+_":>kb,,?IO,6]86)\<5TpAb<s!X/i8WX7kq":,8;
"9J/q!s&E)!jDda"9/D!!6bEG":>kb,.o/O,6]86)\<5TpAb<s!X/i8_?nQq":,8;"9J/q!s&E)!ltJa
"9/D9!42_/":>kb,1IjO,6]86)\<5TpAb<s!X/i8g'P7q":,8;"9J/q!s&E)!oO0a"9/DQ!1X#l":>kb
,4$PO,6]86)\<5TpAb<s!X/i8nd1rq":,8;"9J/q!s&E)!r)ka"9/Di!/(=Q":>2F*[6^k"X5'.&-i75
!;um#!<NE1#a#Ds#RCV;!<Dfn!s&E)!g*Ta"9/CW!:'Uf":>kb,+TtO,6]86)\<5TpAb<s!X/i8UC$Aq
":,8;"9J/q!s&E)!iZ:a"9/Co!7LoN":>kb,./ZO,6]86)\<5TpAb<s!X/i8]*['q":,8;"9JB"qZ$^!
!<WC`"9/CR!:Tsk":>kb,+'VO,6]86)\<5TpAb<s!X/i8SdG#q":,8;"9J/q!s&E)!i,qa"9/Cj!8%8S
":>kb,-W<O,6]86)\<5TpAb<s!X/i8[L(^q":,8;"9J/q!s&E)!k\Wa"9/D-!5JR;":>kb,02"O,6]86
)\<5TpAb<s!X/i8c3_Dq":,8;"9J/q!s&E)!n7=a"9/DE!2ol#":>kb,2a]O,6]86)\<5TpAb<s!X/i8
jpA*q":,8;"9J/q!s&E)!pg#a"9/D]!0@0`":>kb,5<CO,6]86)\<5TpAb<s!X/i8rX"eq":,8;"9J/q
!!*-%!s4JbrrMrrJcPNF"9]&H*[6^k"X5'.&-i71!!E<("UGC#$2Y#3#RCV;!VHEp!<E9(SHJEbrrJ;`
hZ*c^$5FU+W?^XP"X5'.&-i71!!E<("UGC;$0)<p#RCV;!VHEp!<E9([0,+brrK/#bQ.P@"9]&H*[6^k
"<ns-&-i19pAb<s!X/i8OpM9u#RCV;!VHEp!<E9(Qim'brrJ,[j8];c$5FU+Ua,:P"X5'.&-i71!!E<(
"UGC6$0VZu#RCV;!VHEp!<E9(YQNbbrrJtsbQ%bK$5FU+]HbuP"X5'.&-i71!!E<("UGCN$.&t]#RCV;
!VHEp!<E9(a90HbrrKh6ZiC43$5FU+e0D[P"X5'.&-i71!!E<("UGCf$+L9E#RCV;!VHEp!<E9(hug.b
rrL[NS,`Zp$5FU+lm&AP"X5'.&-i71!!E<("UGD)$(qS-#RCV;!VHEp!<E9(p]HibrrMNfKE)#U$3Cq`
,*=)R+s7g9#6F]%r;Zs$!X/i8OU20s#R1D4!;6Bp!<E9(OTYRbrrIlTlMq%j$5FU+SKmeP"X5'.&-i71
!!E<("UGC/$1A0'#RCV;!VHEp!<E9(W<;8brrJ_ldf9LR$5FU+[3OKP"X5'.&-i71!!E<("UGCG$.fId
#RCV;!W)lo!!<6&!s4JbrrI]On,NRo$5FU+Qm;GP"X5'.&-i71!!E<("UGC*$1nN,#RCV;!VHEp!<E9(
U]]obrrJPgfDl$W$5FU+YTr-P"X5'.&-i71!!E<("UGCB$/>gi#RCV;!VHEp!<E9(]E?UbrrKD*^]4K?
$5FU+a<ShP"X5'.&-i71!!E<("UGCZ$,d,Q#RCV;!VHEp!<E9(e-!;brrL7BVuQr'$5FU+i$5NP"X5'.
&-i71!!E<("UGCr$*4F9#RCV;!VHEp!<E9(liX!brrM*ZO8oCd$5FU+p`l4P"X5'.&-i71!!E<("UGD5
$'Y`!#RCV;!VHEm!<N9(!fdB_!VueJ!;?Hr":>kb,*=)R+s7g9#6FQ!"9AQ-#RHb'q[!B2#R1D4o`,'p
!<WCo"7cQo!L!N@!!EE3'cnQu,O$EV+s7g9#6FQ!"9AQ-#RIU?is>ho#R1D4o`,'p!<WD2"53kW!NQ4E
!;lg"":>kb,*=)Q+s7g9#64f!!!E<("UGBs#mCV@#R1D4o`,'p!<WCj"8;ot!KI0@!!EE3'cnQp,OQc[
+s7g9#6FQ!"9AQ-#RIF:kQq@t#R1D4o`,'p!<WD-"5a4\!N#k@!!EE3'cnR3,M"(C+s7g9#6FQ!"9AQ-
#RJ9Rcj9g\#R1D4o`,'p!<WDE"31ND!PSQ@!!EE3'cnRK,JGB++s7g9#6FQ!"9AQ-#RK,j\-W9D#R1D4
o`,'p!<WD]"0Vh,!S.7@!!EE3'cnRc,Gl[h+s7g9#6FQ!"9AQ-#RKu-TEt`,#R1D4o`,'p!<WDu".',i
!U]r@!!*30!Ylb#OWt#R+<(js!W)lq!!E<("UGBr#mCS?"p=r,p&G0q!<WCc"9&E&!J^[@!!EE3'cnQi
,P<8b+s7g9#6FQ!"9AQ-#RI13mg0+&#R1D4o`,'p!<WD&"6K^c!M9A@!!EE3'cnR,,MaRJ+s7g9#6FQ!
"9AQ-#RJ$Kf*MQc#R1D4qZ-Kn!s&E)!fdB_!J1=@!!EE3'cnQd,PiVg+s7g9#6FQ!"9AQ-#RI".oEbX+
#R1D4o`,'p!<WD!"7$'h!La#@!!EE3'cnR',N9pO+s7g9#6FQ!"9AQ-#RIjFg^+)h#R1D4o`,'p!<WD9
"4IAP!O;^@!!EE3'cnR?,K_57+s7g9#6FQ!"9AQ-#RJ]^`!HPP#R1D4o`,'p!<WDQ"1n[8!QkD@!!EE3
'cnRW,I/Nt+s7g9#6FQ!"9AQ-#RKQ!X9f"8#R1D4o`,'p!<WDi"/>tu!TF*@!!EE3'cnRo,FTh\+s7g9
#6FQ!"9AQ-#RLD9PR.Hu#R1D4o`+sm!W`B)NW]:^q>c*IpAb=!$5FU+OWt#R+<(js!VZQs!<NE1#aYkp
#m:M>"p=u"!!<6&!s5"qncSmmP5sJ?"9]&H*[7R.kp$?U+<(js!VZQs!<NE1#d4Qp#m:M>"p=u"!!<6&
!s5k4g&q?UWrU?Dqu?j&$5FU+OWsuQ+<(js!!2fo"9AQ-#RHS""UPG?"p=u"!!<6&!s4hlpB1ErNWA,?
"9]&H*[7C)mNVlZ+<(js!VZQs!<NE1#c\3p#m:M>"p=u"!!<6&!s5\/hZNlZV?"g?"9]&H*[86Aeft>B
+<(js!VZQs!<NE1#f6np#m:M>"p=u"!!<6&!s6OG`rl>B^&YM?"9]&H*[9)Y^*<e*+<(js!VZQs!<NE1
#hfTp#m:M>"p=u"!!<6&!s7B_Y64e*ec;3?"9]&H*[9qqVBZ6g+<(js!VZQs!<NE1#kA:p#m:M>"p=u"
!!<6&!s86"QNR6gmJqn?!<``2'cnQ],6]86)\<5TqZ-Qp"9AQ-#RHP!"UGA<"9AMr!!<6&!s4SerWE0$
LB-W?"9]&H*[7."ocjVa+<(js!VZQs!<NE1#bq^p#m:M>"p=u"!!<6&!s5G(jobVaT)d=?"9]&H*[8!:
h'3(I+<(js!VZQs!<NE1#eLDp#m:M>"p=u(!;c`u!<E9(NW]:^JcP9?"9]&H*[6srqBH.f+<(js!VZQs
!<NE1#bD@p#m:M>"p=u"!!<6&!s58#lN@.fRK1t?"9]&H*[7g5iZeUN+<(js!VZQs!<NE1#dt&p#m:M>
"p=u"!!<6&!s6+;df]UNZ2hZ?"9]&H*[8ZMas.'6+<(js!VZQs!<NE1#gNap#m:M>"p=u"!!<6&!s6sS
]*&'6aoJ@?"9]&H*[9MeZ6KMs+<(js!VZQs!<NE1#j)Gp#m:M>"p=u"!!<6&!s7fkUBCMsiW,&?"9]&H
*[:A(RNht[+<(js!VZQs!<NE1#lY-p#m:M>"p=u"!!!$$!<WC`"9/Du!.k4F!!EE3'cnQ],6]86)\<5T
pAb<s!X/i8QO3Nq":,8;"9J/q!s&E)!hBGa"9/Cc!8dbZ":>kb,,lgO,6]86)\<5TpAb<s!X/i8Y6j4q
":,8;"9J/q!s&E)!jr-a"9/D&!6bH@!!EE3'cnQ],6T25)\<5S!VZQs!<NE1#a,Jt#m^e@"9J/q!s&E)
!gj)a"9/C^!9=+_":>kb,,?IO,6]86)\<5TpAb<s!X/i8WX7kq":,8;"9J/q!s&E)!jDda"9/D!!6bEG
":>kb,.o/O,6]86)\<5TpAb<s!X/i8_?nQq":,8;"9J/q!s&E)!ltJa"9/D9!42_/":>kb,1IjO,6]86
)\<5TpAb<s!X/i8g'P7q":,8;"9J/q!s&E)!oO0a"9/DQ!1X#l":>kb,4$PO,6]86)\<5TpAb<s!X/i8
nd1rq":,8;"9J/q!s&E)!r)ka"9/Di!/(=Q":>2F*[6^k"X5'.&-i75!;um#!<NE1#a#Ds#RCV;!<Dfn
!s&E)!g*Ta"9/CW!:'Uf":>kb,+TtO,6]86)\<5TpAb<s!X/i8UC$Aq":,8;"9J/q!s&E)!iZ:a"9/Co
!7LoN":>kb,./ZO,6]86)\<5TpAb<s!X/i8]*['q":,8;"9JB"qZ$^!!<WC`"9/CR!:Tsk":>kb,+'VO
,6]86)\<5TpAb<s!X/i8SdG#q":,8;"9J/q!s&E)!i,qa"9/Cj!8%8S":>kb,-W<O,6]86)\<5TpAb<s
!X/i8[L(^q":,8;"9J/q!s&E)!k\Wa"9/D-!5JR;":>kb,02"O,6]86)\<5TpAb<s!X/i8c3_Dq":,8;
"9J/q!s&E)!n7=a"9/DE!2ol#":>kb,2a]O,6]86)\<5TpAb<s!X/i8jpA*q":,8;"9J/q!s&E)!pg#a
"9/D]!0@0`":>kb,5<CO,6]86)\<5TpAb<s!X/i8rX"eq":,8;"9J/q!!*-%!s4JbrrMrrJcPNF"9]&H
*[6^k"X5'.&-i71!!E<("UGC#$2Y#3#RCV;!VHEp!<E9(SHJEbrrJ;`hZ*c^$5FU+W?^XP"X5'.&-i71
!!E<("UGC;$0)<p#RCV;!VHEp!<E9([0,+brrK/#bQ.P@"9]&H*[6^k"<ns-&-i19pAb<s!X/i8OpM9u
#RCV;!VHEp!<E9(Qim'brrJ,[j8];c$5FU+Ua,:P"X5'.&-i71!!E<("UGC6$0VZu#RCV;!VHEp!<E9(
YQNbbrrJtsbQ%bK$5FU+]HbuP"X5'.&-i71!!E<("UGCN$.&t]#RCV;!VHEp!<E9(a90HbrrKh6ZiC43
$5FU+e0D[P"X5'.&-i71!!E<("UGCf$+L9E#RCV;!VHEp!<E9(hug.brrL[NS,`Zp$5FU+lm&AP"X5'.
&-i71!!E<("UGD)$(qS-#RCV;!VHEp!<E9(p]HibrrMNfKE)#U$3Cq`,*=)R+s7g9#6F]%r;Zs$!X/i8
OU20s#R1D4!;6Bp!<E9(OTYRbrrIlTlMq%j$5FU+SKmeP"X5'.&-i71!!E<("UGC/$1A0'#RCV;!VHEp
!<E9(W<;8brrJ_ldf9LR$5FU+[3OKP"X5'.&-i71!!E<("UGCG$.fId#RCV;!W)lo!!<6&!s4JbrrI]O
n,NRo$5FU+Qm;GP"X5'.&-i71!!E<("UGC*$1nN,#RCV;!VHEp!<E9(U]]obrrJPgfDl$W$5FU+YTr-P
"X5'.&-i71!!E<("UGCB$/>gi#RCV;!VHEp!<E9(]E?UbrrKD*^]4K?$5FU+a<ShP"X5'.&-i71!!E<(
"UGCZ$,d,Q#RCV;!VHEp!<E9(e-!;brrL7BVuQr'$5FU+i$5NP"X5'.&-i71!!E<("UGCr$*4F9#RCV;
!VHEp!<E9(liX!brrM*ZO8oCd$5FU+p`l4P"X5'.&-i71!!E<("UGD5$'Y`!#RCV;!VHEm!<N9(!fdB_
!VueJ!;?Hr":>kb,*=)R+s7g9#6FQ!"9AQ-#RHb'q[!B2#R1D4o`,'p!<WCo"7cQo!L!N@!!EE3'cnQu
,O$EV+s7g9#6FQ!"9AQ-#RIU?is>ho#R1D4o`,'p!<WD2"53kW!NQ4E!;lg"":>kb,*=)Q+s7g9#64f!
!!E<("UGBs#mCV@#R1D4o`,'p!<WCj"8;ot!KI0@!!EE3'cnQp,OQc[+s7g9#6FQ!"9AQ-#RIF:kQq@t
#R1D4o`,'p!<WD-"5a4\!N#k@!!EE3'cnR3,M"(C+s7g9#6FQ!"9AQ-#RJ9Rcj9g\#R1D4o`,'p!<WDE
"31ND!PSQ@!!EE3'cnRK,JGB++s7g9#6FQ!"9AQ-#RK,j\-W9D#R1D4o`,'p!<WD]"0Vh,!S.7@!!EE3
'cnRc,Gl[h+s7g9#6FQ!"9AQ-#RKu-TEt`,#R1D4o`,'p!<WDu".',i!U]r@!!*30!Ylb#OWt#R+<(js
!W)lq!!E<("UGBr#mCS?"p=r,p&G0q!<WCc"9&E&!J^[@!!EE3'cnQi,P<8b+s7g9#6FQ!"9AQ-#RI13
mg0+&#R1D4o`,'p!<WD&"6K^c!M9A@!!EE3'cnR,,MaRJ+s7g9#6FQ!"9AQ-#RJ$Kf*MQc#R1D4qZ-Kn
!s&E)!fdB_!J1=@!!EE3'cnQd,PiVg+s7g9#6FQ!"9AQ-#RI".oEbX+#R1D4o`,'p!<WD!"7$'h!La#@
!!EE3'cnR',N9pO+s7g9#6FQ!"9AQ-#RIjFg^+)h#R1D4o`,'p!<WD9"4IAP!O;^@!!EE3'cnR?,K_57
+s7g9#6FQ!"9AQ-#RJ]^`!HPP#R1D4o`,'p!<WDQ"1n[8!QkD@!!EE3'cnRW,I/Nt+s7g9#6FQ!"9AQ-
#RKQ!X9f"8#R1D4o`,'p!<WDi"/>tu!TF*@!!EE3'cnRo,FTh\+s7g9#6FQ!"9AQ-#RLD9PR.Hu#R1D4
o`+sm!W`B)NW]:^q>c*IpAb=!$5FU+OWt#R+<(js!VZQs!<NE1#aYkp#m:M>"p=u"!!<6&!s5"qncSmm
P5sJ?"9]&H*[7R.kp$?U+<(js!VZQs!<NE1#d4Qp#m:M>"p=u"!!<6&!s5k4g&q?UWrU?Dqu?j&$5FU+
OWsuQ+<(js!!2fo"9AQ-#RHS""UPG?"p=u"!!<6&!s4hlpB1ErNWA,?"9]&H*[7C)mNVlZ+<(js!VZQs
!<NE1#c\3p#m:M>"p=u"!!<6&!s5\/hZNlZV?"g?"9]&H*[86Aeft>B+<(js!VZQs!<NE1#f6np#m:M>
"p=u"!!<6&!s6OG`rl>B^&YM?"9]&H*[9)Y^*<e*+<(js!VZQs!<NE1#hfTp#m:M>"p=u"!!<6&!s7B_
Y64e*ec;3?"9]&H*[9qqVBZ6g+<(js!VZQs!<NE1#kA:p#m:M>"p=u"!!<6&!s86"QNR6gmJqn?!<``2
'cnQ],6]86)\<5TqZ-Qp"9AQ-#RHP!"UGA<"9AMr!!<6&!s4SerWE0$LB-W?"9]&H*[7."ocjVa+<(js
!VZQs!<NE1#bq^p#m:M>"p=u"!!<6&!s5G(jobVaT)d=?"9]&H*[8!:h'3(I+<(js!VZQs!<NE1#eLDp
#m:M>"p=u(!;c`u!<E9(NW]:^JcP9?"9]&H*[6srqBH.f+<(js!VZQs!<NE1#bD@p#m:M>"p=u"!!<6&
!s58#lN@.fRK1t?"9]&H*[7g5iZeUN+<(js!VZQs!<NE1#dt&p#m:M>"p=u"!!<6&!s6+;df]UNZ2hZ?
"9]&H*[8ZMas.'6+<(js!VZQs!<NE1#gNap#m:M>"p=u"!!<6&!s6sS]*&'6aoJ@?"U#/I+!Mof,I/Nt
+s7g9#6FQ!!W`?+rWqZnWsJk6"p=u"!!30%!p]r`"9/D]!0@0`":>b^+S[+K+U&u1)A!,SpAb9r!X/l.
$'Y`!#RCV<!VQNn!<<-!"-N]c"9&?%!VueJ!;?Hs!XTDT*$(1^"WSEq%Kuq.!!<6&"9k(rq$-s)!s8,q
rrJSjo)\pn!g3Q@!!E?,$P*iK''Kr1&.JmKo`,*q!X&W0YQWth"9eo2!<MinYlWS[!WW6%WrU?Dqu?j#
!X/f8O9bpn#6b2%!;uq]!ri?$!V6<j!LNl`!!<6%!<J/[irB)\!ho_^!<E6&R/hg=JcLB&JcLB&JcLB&
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&fDpF~>

%%EndBinary
grestore
np
306.808 142.55 mo
394.21 142.55 li
394.21 3.31 li
306.808 3.31 li
cp
1 /0 /CSD get_res sepcs
0 sep
ef
306.808 142.55 mo
394.21 142.55 li
394.21 3.31 li
306.808 3.31 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
QPENPH+Calibri*1 [24.025 0 0 -24.025 0 0 ]msf
332.698 43.18 mo
(EP)
[12.0254 0 ]xsh
%ADOBeginSubsetFont: WGJAAA+Calibri AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal QPENPH+Calibri gcheck setglobal} if
5 1614 1006 <000100720000039c0521003e00cab0852b58400d2936012b1e01291d0126
1e0140b8ffc040170f024d604001161810014d16100c0d014c16200b014d
16b8022db633253325330039b8ffe8b310014d39ba027f000bffc0b30c01
4d0bb8ffe0400b0f014d0b1138392020391bb8012eb63316062e531039b8
0128b10654003fed323f123939ed11392f123939012f2b2be12bcd39392f
2f10e12b2b2b31305d2b005d015d5d5d1bb71138392020392e1bb8012e40
096c3316062e53100639b80128b26c065400183f2b323f1239392b11392f
12393930315925140e022321222e0235343e0237133e0335342e0223220e
0223222e0235343e0633321e0215140e02070721321e02039c05090f09fd
350e150f07030a0f0cfb576939121c3550343d6149310c070b0704020508
183b596b3b5e8d5d2e1647866fcd0233080f0b054a121c130907101e1614
1e17170d010a5c9278622b2b4d3a2222282208121e150f16100e15242318
355c7a453e7b8faf72d609121b00>QPENPH+Calibri AddT42Char 
QPENPH+Calibri /CharStrings get begin
/two 1006 def
end
QPENPH+Calibri /Encoding get
dup 50 /two put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/QPENPH+Calibri*1 
[32{/.notdef}rp /space 15{/.notdef}rp /zero /one /two /.notdef /four 
2{/.notdef}rp /seven /eight 12{/.notdef}rp /E 10{/.notdef}rp /P 18{/.notdef}rp 
/c 5{/.notdef}rp /i /.notdef /k 7{/.notdef}rp /s /t 
6{/.notdef}rp /braceleft /.notdef /braceright 130{/.notdef}rp]
QPENPH+Calibri nf
QPENPH+Calibri*1 [24.025 0 0 -24.025 0 0 ]msf
356.848 43.18 mo
(2)sh
QPENPI+Calibri,Italic*1 [18.025 0 0 -18.025 0 0 ]msf
311.128 62.71 mo
(Activation)
[10.4905 7.49841 6.03848 3.71307 8.23743 8.9946 6.03848 4.45209 8.99454 0 ]xsh
QPENPI+Calibri,Italic*1 [18.025 0 0 -18.025 0 0 ]msf
385.178 62.71 mo
(:)sh
QPENPH+Calibri*1 [18.025 0 0 -18.025 0 0 ]msf
311.128 80.74 mo
(   )
[3.74921 4.48813 0 ]xsh
QPENPH+Calibri*1 [18.025 0 0 -18.025 0 0 ]msf
323.358 80.74 mo
({)sh
QPENPH+Calibri*1 [18.025 0 0 -18.025 0 0 ]msf
329.008 80.74 mo
(t)sh
QPENPH+Calibri*1 [18.025 0 0 -18.025 0 0 ]msf
335.058 80.74 mo
(2)sh
QPENPH+Calibri*1 [18.025 0 0 -18.025 0 0 ]msf
344.178 80.74 mo
(})sh
QPENPI+Calibri,Italic*1 [18.025 0 0 -18.025 0 0 ]msf
311.128 98.76 mo
(Offset)
[11.9868 5.24509 5.24521 7.48047 8.25537 0 ]xsh
QPENPI+Calibri,Italic*1 [18.025 0 0 -18.025 0 0 ]msf
355.558 98.76 mo
(: )
[4.49979 0 ]xsh
QPENPH+Calibri*1 [18.025 0 0 -18.025 0 0 ]msf
319.365 116.78 mo
( )sh
QPENPH+Calibri*1 [18.025 0 0 -18.025 0 0 ]msf
323.358 116.78 mo
(8 )
[8.99976 0 ]xsh
1 /0 /CSD get_res sepcs
1 sep
QPENPH+Calibri*1 [18.025 0 0 -18.025 0 0 ]msf
336.558 116.78 mo
(ticks)
[6.03848 4.45209 7.49847 8.20139 0 ]xsh
503.303 149.63 mo
406.178 149.63 li
406.178 0 li
503.303 0 li
503.303 149.63 li
/1 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 49.8216 345.875 ]ct
[98.6192 0 0 151.126 355.61 195.497 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 132 
/H 202 
/M[132 0 0 -202 0 202 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 132 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 132 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 132 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 132 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&QN.$e!q$)^!<<2^!.k3&!/(=Q!<N<+
#76It!s\u4!r;op!<*"\!WiB(!WE)n!<*"]!<3'#!!.`Qmf3Ik#7M.UR1f9-":ttH"9J5s"9AT."9kD#
o`PF%"U"o.!VQKp!<E7r!UBd`!.k4F!!NK4&K)Q/P8jQC"<8<o$O-8)!s&H+#*fGi#6G#0!VQKp!<E:k
!qcWp!K[<B!!NB+$Pa[)V'54L"X"m(%Kun.!!<6'"UD"5kQq@t#R(;2p&G3r!<N<)YQEkerr`6%!!/nr
ci=7N"Ul1g+sOTCg*6eG+s.[4"TnH!!W`B-rWp7FeHlBb#R:P9!quZt!<E6(!lG,d!s8T+!s5t4]Dr*9
"Ul1h,0_@O,6]85)%HfOp](Bs!sT%Y$,6cK#6k83pAk3orrUaR\c_p5bQ+RA"T\c8(EXj[,I&Hs+s.[4
"TnH!!s&K.#iuAn#m1D:!s82srrN-$l3!mcrW;!XPQ1jf"Ul1h,5!1O,6]85)%HfOp](Bs!sT&,$'tr#
#6k83pAk3orrW0%Oot[boDjIC#64`)"Ul1h,*=)S+s.[4"Te]"!!<6("pg7r!!`Q0!s82srrN-$P6:ac
rW7oVlMq(h"Ul1h,+^%O,6]85)%HfOp](Bs!sT%*$18*%#6k83quHWprrN-$Ns#@_!!%TNo)Jpp"Ul1h
,*jJO,6]85)%HfOp](Bs!sT%"$2+Z-#6k83pAk3orrSepnH8alPlT\A"T\c8(EXj$,Np?U+s.[4"TnH!
!s&K.#d+Kn#m1D:!s82srrN-$ZNK"crW9&!b5_\H"Ul1h,/,;O,6]85)%HfOp](Bs!sT%J$-ihZ#6k83
pAk3orrU4CaTMMD]`>MA"T\c8(EXjL,JYN-+s.[4"TnH!!s&K.#hB<n#m1D:!s82srrN-$gB4hcrW:II
UAtGu"Ul1h,3C,O,6]85)%HfOp](Bs!sT%r$)S"2#6k83pAk3orrVWkT`b8qjT(>A"T\c8(EXjt,FB\Z
+s.[4"TnH!!s&K.#lY-n#m1D:!s82srrN-$Ns#@_q#H!Hq>^[""Ul1h,*=)N+s-n)%Kuq/!!<6("pgD!
r<WQ2"p4r$!<3*"!gj)b"9&@^!9O7b!<ilJ+!RI)miqu[*uPOl!rW,s!!<6("pg7r!s]#4!qu]p!WN4_
!rrH&!ep^C!!NB,$l:!0Rj7YP"X5$+%Kuq/!!<6("pgh-nHf:&"p4r$!<3*"!i,qb"9&@j!87DV!<ilJ
+!Rm5j!+^O*uPOl!r)`t!<WN3ZO,Fo!s]#4!qu]p!WN52"5!_T!j2OC!!NB,$l:!0_^!JP"X5$+%Kuq/
!!<6("pi6UaU&%S"p4r$!<3*"!mCbb"9&A=!3uS.!<ilJ+!T;]]-@J'*uPOl!r)`t!<WN3gBk7o!s]#4
!qu]p!WN5Z"0_n,!nI@C!!NB,$l:!0lQ`;P"X5$+%Kuq/!!<6("pjZ(Ta:f+"p4r$!<3*"!qZSb"9&Ae
!/^a]!<ilJ+!MpSP9U5T*uPOl!r)`r!<W?,#`f8o#6k83q>gKprrN-$Ns#@_rW%NMo`,-r"Ul1h,*X>O
,6]85)%HfOp](Bs!sT$u$2=f/#6k83pAk3orrS_no)nsnP5s\Er;[!%"Ul1h,*=)Q+s.[4"TSW!!!<6(
"pg:s":5;;!s82srrN-$PlpmcrW7uXkl:kf"Ul1h,+p1O,6]85)%HfOp](Bs!sT%,$1%s##6k83pAk3o
rrT/%k6(\bT)dCA"T\c8(EXj.,MjXK+s.[4"TnH!!s&K.#e12n#m1D:!s82srrN-$]`Z^crW9D+_#OW>
"Ul1h,02"O,6]85)%HfOp](Bs!sT%T$,d,P#6k83pAk3orrURM^B=H:`rN4A"T\c8(EXjV,ISg#+s.[4
"TnH!!s&K.#iH#n#m1D:!s82srrN-$jTDOcrW:gSR/dBk"Ul1h,4HhO,6]85)%HfOp](Bs!sT&'$(M;(
#6k83pAk3orrVuuQNR3gmf8%A!W`H5!Z)q&OWt#R*uPOl!rDus!!<6("pg7r"U>56!WW5r!<3*"!fmE`
!ri=T!:Tsl!<ilJ+!R*tq'-%e*uPOl!r)`t!<WN3SI+lo!s]#4!qu]p!WN4q"7?9j!rDtL!;HNt!<ilJ
+!Qgl"X5$+%Kuq/!!<6("pgJ#q[!?0"p4r$!<3*"!h'5b"9&@`!9=+`!<ilJ+!RO+m3;cY*uPOl!r)`t
!<WN3W<q_o!s]#4!qu]p!WN5("6'F^!i,hC!!NB,$l:!0\KfcP"X5$+%Kuq/!!<6("phmKdg6*]"p4r$
!<3*"!l>&b"9&A3!5&:8!<ilJ+!SrS`?PO1*uPOl!r)`t!<WN3d0[Po!s]#4!qu]p!WN5P"1eU6!mCYC
!!NB,$l:!0i?PTP"X5$+%Kuq/!!<6("pj;sWsJk5"p4r$!<3*"!pTlb"9&A[!0dHe!<ilJ+!UA&SKe:^
*uPOl!r)`t!<WN3q$EAo!s]#4!qu]p!WN6#"-Ncc!qZJE!!`K(!<ilJ+!Qgl"sP-,%Kun6q#CKt!sT$l
#lk23"p4r$!<3*"!g<`b"9&@Y!:'Ug!<ilJ+!R:$oHOM`*uPOl!r)`t!<WN3U'^5o!s]#4!rN&r!<3*"
!fmH_!WW4P!:p0o!<ilJ+!R!qr$)@h*uPOl!r)`t!<WN3RL/Zo!s]#4!qu]p!WN4n"7ZKm!gNcC!!NB,
$l:!0W[$^P"X5$+%Kuq/!!<6("ph@<iX#\l"p4r$!<3*"!j`!b"9&A$!6Y?G!<ilJ+!SEDe0>,@*uPOl
!r)`t!<WN3_?nKo!s]#4!qu]p!WN5A"3CZE!keTC!!NB,$l:!0dNcOP"X5$+%Kuq/!!<6("picd\d8HD
"p4r$!<3*"!o!gb"9&AL!2BMt!<ilJ+!ThlX<Rlm*uPOl!r)`t!<WN3l3X<o!s]#4!qu]p!WN5i"/,hr
!p'EC!!NB,$l:!0qBM@P"X5$+%Kuq/!!<6("pk27OpM3q"p4r$!<3*"!fmH_!r2hJ!;Z[!!<ilJ+!Qgl
!?rTf)%HfOp](Bs!sT$p$2k/4#6k83pAk3orrSPip]LKsNWA2A"T\c8(EXir,OZi\+s.[4"TnW&qu?g"
!sT$l#m1D:!s82srrN-$O95IbrW7fSmJmCk"Ul1h,+BhO,6]85)%HfOp](Bs!sT%'$1S<(#6k83pAk3o
rrStuli[4gRK2%A"T\c8(EXj),NC!P+s.[4"TnH!!s&K.#dXin#m1D:!s82srrN-$\-(@crW95&`W-/C
"Ul1h,/YYO,6]85)%HfOp](Bs!sT%O$-<JU#6k83pAk3orrUCH_uou?_>pkA"T\c8(EXjQ,J,0(+s.[4
"TnH!!s&K.#hoZn#m1D:!s82srrN-$hug1crW:XNScAop"Ul1h,3pJO,6]85)%HfOp](Bs!sT&"$)%Y-
#6k83pAk3orrVfpS-/`ll2Z\A#6=u:(EXhG,Ej>U+s.[4"TnH!!<E9'"pg7r!s]#4!r;or!<3*"!fmH_
!r`1O!;-<q!<ilJ+!QporZ_Rj*uPOl!r)`t!<WN3QjNNo!s]#4!qu]p!WN4l"7lWo!g<WG!;um$!<ilJ
+!Qgl"<np*%Kuh6p](Bs!sT$m#m:P>"p4r$!<3*"!gNlb"9&@[!9jIe!<ilJ+!R@&nfn;^*uPOl!r)`t
!<WN3U^?Ao!s]#4!qu]p!WN5#"6Tdc!hTJC!!NB,$l:!0Zm4EP"X5$+%Kuq/!!<6("ph^FfEhWb"p4r$
!<3*"!ke]b"9&A.!5SX=!<ilJ+!ScNas.'6*uPOl!r)`t!<WN3bR)2o!s]#4!qu]p!WN5K"2=s;!lk;C
!!NB,$l:!0g`s6P"X5$+%Kuq/!!<6("pj,nYR(C:"p4r$!<3*"!p'Nb"9&AV!1<fj!<ilJ+!U2!U*Bgc
*uPOl!r)`t!<WN3oEh#o!s]#4!qu]p!WN5s".',h!q-,C!!30)$j%4e,*=)R+s.[4"TnQ$rW!$$!sT$l
#mCP<!s/H&q#LEqrrS5`!!<0%KE1KA"T\c8(EXih,P`Pf+s.[4"TnH!!s&K.#b;:n#m1D:!s82srrN-$
U''fcrW;rsJcPQG"T\c8(EXi`,6]85)%HfOp](Bs!sT$r$2Y#2#6k83pAk3orrSVkp&k9qO9">A"T\c8
(EXit,OH]Z+s.[4"TnH!!s&K.#cS-n#m1D:!s82srrN-$XomYcrW8kqci=4M"Ul1h,.SrO,6]85)%HfO
p](Bs!sT%E$.B1_#6k83pAk3orrU%>c3+%I\,a/A"T\c8(EXjG,K1l2+s.[4"TnH!!s&K.#gisn#m1D:
!s82srrN-$ecWJcrW::DVuQu%"Ul1h,2jcO,6]85)%HfOp](Bs!sT%m$*+@7#6k83pAk3orrVHfV??f!
huJuA"T\c8(EXjo,Fp%_+s.[4"TnH!!s&K.#l+dn#m1D:!s82srrN-$rWA;crW;]lJcH#U!!*63(EXi`
,6f>6)%HfO!;QTs!<WN3NsPdk!X8`.pAk3orrSAdr<*$#M#ciA"T\c8(EXim,P32a+s.[4"TnH!!s&K.
#bhXn#m1D:!s8B#quH`trrS5`rW3'"JcPBB"T\c8(EXie,Q&bi+s.[4"TnH!!s&K.#au(n#m1D:!s82s
rrN-$T*+TcrW8>bhZ*f\"Ul1h,,umO,6]85)%HfOp](Bs!sT%6$/u6n#6k83pAk3orrTM/h#mWXW;t*A
"T\c8(EXj8,LdqA+s.[4"TnH!!s&K.#f6nn#m1D:!s82srrN-$`rjEcrW9b5[f?R4"Ul1h,17^O,6]85
)%HfOp](Bs!sT%^$+^EF#6k83pAk3orrUpW[0-C0d/]pA"T\c8(EXj`,HN*n+s.[4"TnH!!s&K.#jM_n
#m1D:!s82srrN-$mfT6crW;0]NrT=a"Ul1h,5NOO,6]85)%HfOp](Bs!sT&1$'GSs#6k83pAk3orrS5`
rW;lqJcPWI"T\c8(EXi`,68u1!uVRP!r)`t!<WN3P6q0o!s]#4!qu]p!WN4g"8Dut!fd9C!!NB,$l:!0
UEf4P"X5$+%Kuq4!;lg!!<WN3NsPmn"p4r$!<3*"!g!Ka"9&@V!:Bgj!<ilJ+!R1!pEKhc*uPOl!r)`t
!<WN3T*b#o!s]#4!qu]p!WN4s"7--h!h',C!!NB,$l:!0Y9W'P"X5$+%Kuq/!!<6("phOAh$F/g"p4r$
!<3*"!k8?b"9&A)!6,!B!<ilJ+!STIcQ`T;*uPOl!r)`t!<WN3`sKio!s]#4!qu]p!WN5F"2k<@!l=rC
!!NB,$l:!0f-@mP"X5$+%Kuq/!!<6("piri[0Zp?"p4r$!<3*"!oO0b"9&AQ!1j/o!<ilJ+!U"qV]u?h
*uPOl!r)`t!<WN3mg5Zo!s]#4!qu]p!WN5n".TJm!pTcC!!`N.$l:!0,9rBs"X5$+%Kuq/!!**&!<rgj
#m1D:!s8<!rW)s!rrS5`rW<'!JcPHD"T\c8(EXic,Q8nk+s.[4"TnH!!s&K.#abqn#m1D:!s82srrN-$
SHJHcrW88`jT,5Z"T\c8(EXi`,6T24)%HfM!r)`t!<WN3O9l$r#6k83pAk3orrSGfqZHg!MZDuA"T\c8
(EXio,P!&_+s.[4"TnH!!s&K.#c%dn#m1D:!s82srrN-$W<;;crW8\leGoaR"Ul1h,.&TO,6]85)%HfO
p](Bs!sT%@$.oOd#6k83pAk3orrTk9df]RNZN.fA"T\c8(EXjB,K_57+s.[4"TnH!!s&K.#g<Un#m1D:
!s82srrN-$d0%,crW:+?XT/M*"Ul1h,2=EO,6]85)%HfOp](Bs!sT%h$*X^<#6k83pAk3orrV9aWrr>&
gAmWA"T\c8(EXjj,GHCd+s.[4"TnH!!s&K.#kSFn#m1D:!s82srrN-$q#crcrW;NgK`D/T"UkGK+!Qgl
"X5$+%Kuq2!<)s#!<WN3NsPsp"p4o,!;QWp!WN4^!rrE&!e^RC!!NB,$l:!0R3VMP"X5$+%Kuq/!!<6(
"pgb+o*GL("p4r$!<3*"!hoeb"9&B!!.k4G!!NB,$l:!0OWt#R*uPOl!r)`t!<WN3PmR<o!s]#4!qu]p
!WN4i"82ir!g!EC!!NB,$l:!0V'G@P"X5$+%Kuq/!!<6("ph17k6V4q"p4r$!<3*"!j2Xb"9&@t!71]L
!<ilJ+!S6?fcpYE*uPOl!r)`t!<WN3]a<-o!s]#4!qu]p!WN5<"3q#J!k86C!!NB,$l:!0bp11P"X5$+
%Kuq/!!<6("piT_^BjuI"p4r$!<3*"!nIIb"9&AG!2ol$!<ilJ+!TYgYp0Dr*uPOl!r)`t!<WN3jU%so
!s]#4!qu]p!WN5d"/Z2"!oO'C!!NB,$l:!0ocp"P"X5$+%Kuq/!!<6("pk#2QO*a!"p4r$!<3*"!r`:b
"9&Ao!.k1U!!!$'$l:!0OWt&S*uPOl!W`#r!s&K.#`f8l#6G)3!qu]p!WN4b"8r?$!f6pC!!NB,$l:!0
Sg3kP"X5$+%Kuq/!!<6("pgq0mKit#"p4r)!;lis!WN4^"9&?%!.k4B!!NB,$l:!0Q6Z;P"X5$+%Kuq/
!!<6("pgY(p'Cg+"p4r$!<3*"!hTSb"9&@e!8db[!<ilJ+!R^0kT^6T*uPOl!r)`t!<WN3XpO(o!s]#4
!qu]p!WN5-"5O(Y!iZ1C!!NB,$l:!0^*D,P"X5$+%Kuq/!!<6("pi'Pc3XRX"p4r$!<3*"!lkDb"9&A8
!4Mq3!<ilJ+!T,X^`s",*uPOl!r)`t!<WN3ed8no!s]#4!qu]p!WN5U"1871!mq"C!!NB,$l:!0js-rP
"X5$+%Kuq/!!<6("pjK#V?m>0"p4r$!<3*"!q-5b"9&A`!07*`!<ilJ+!UP+Qm2bY*uPOl!r)`t!<WN3
rX"_o!s]#4!qu]p!WN4^"9&At!.k4I!!NB,$l:!0OWslN*s3Aj"TnH!!s&K.#a5Sn#m1D:!s82srrN-$
Qim*crW8)[jo>Pc"Ul1h,,6CO,6]85)%HfOr;c`q!s&K.#`f8o#6k83pAk3orrS8a!!E3%L&gWA"T\c8
(EXij,PNDd+s.[4"TnH!!s&K.#bMFn#m1D:!s82srrN-$U]]rcrW8Mgg&M9W"Ul1h,-N6O,6]85)%HfO
p](Bs!sT%;$/Gmi#6k83pAk3orrT\4fE;*SXoQHA"T\c8(EXj=,L7S<+s.[4"TnH!!s&K.#fd7n#m1D:
!s82srrN-$bQGccrW9q:Z2b%/"Ul1h,1e'O,6]85)%HfOp](Bs!sT%c$+1'A#6k83pAk3orrV*\YQOk+
ec;9A"T\c8(EXje,Guai+s.[4"TnH!!s&K.#k&(n#m1D:!s82srrN-$oE1TcrW;?bM?!k^"Ul1h+sS=r
,6]85)%HfOp](<q!s&T3NsPmn"p4r'!<)uu!WN4^"9&B$!.k4D!!NB,$l:!0PU$/P"X5$+%Kuq/!!<6(
"pgS&p^%$-"p4r$!<3*"!hBGb"9&@c!9F4Z!!NB,$l:!0OWsuQ*uPOl!!;oq!s&K.#`o>q#mUY:!qu]p
!WN4d"8`3"!fI'C!!NB,$l:!0THj"P"X5$+%Kuq/!!<6("ph"2lj3b!"p4r$!<3*"!iZ:b"9&@o!7_&Q
!<ilJ+!S':hBN1J*uPOl!r)`t!<WN3\-^do!s]#4!qu]p!WN57"4IAO!j_mC!!NB,$l:!0a<ShP"X5$+
%Kuq/!!<6("piEZ`!HMN"p4r$!<3*"!mq+b"9&AB!3H5)!<ilJ+!TJb[Nbr"*uPOl!r)`t!<WN3i!HUo
!s]#4!qu]p!WN5_"02P'!o!^C!!NB,$l:!0n0=YP"X5$+%Kuq/!!<6("pji-S-]9&"p4r$!<3*"!r2qb
"9&Aj!/1CS!<il5(EXi`,6]85)%HfOqZ-Tq!s&K.#`f8q#6k83!!)fprrN-$Nro@`rrRiRn,NUm"Ul1h
,+0\O,6]85)%HfOp](Bs!sT%%$1eH*#6k83pAk3orrSnsmK<FiqZ)3Jp](Hu"Ul1h,*=)R+s.[4"TnH!
!s&K.#aG_n#m1D:!s82srrN-$RKN6crW8/]j8]>a"Ul1h,,HOO,6]85)%HfOp](Bs!sT%1$0MTs#6k83
pAk3orrT>*iWK/]U]AaA"T\c8(EXj3,M=:F+s.[4"TnH!!s&K.#e^Pn#m1D:!s82srrN-$_?8'crW9S0
]Dr*9"Ul1h,0_@O,6]85)%HfOp](Bs!sT%Y$,6cK#6k83pAk3orrUaR\c_p5bQ+RA"T\c8(EXj[,I&Hs
+s.[4"TnH!!s&K.#iuAn#m1D:!s82srrN-$l3!mcrW;!XPQ1jf"Ul1h,5!1O,6]85)%HfOp](Bs!sT&,
$'tr##6k83pAk3orrW0%Oot[boDjIC#64`)"Ul1h,*=)S+s.[4"Te]"!!<6("pg7r!!`Q0!s82srrN-$
P6:acrW7oVlMq(h"Ul1h,+^%O,6]85)%HfOp](Bs!sT%*$18*%#6k83quHWprrN-$Ns#@_!!%TNo)Jpp
"Ul1h,*jJO,6]85)%HfOp](Bs!sT%"$2+Z-#6k83pAk3orrSepnH8alPlT\A"T\c8(EXj$,Np?U+s.[4
"TnH!!s&K.#d+Kn#m1D:!s82srrN-$ZNK"crW9&!b5_\H"Ul1h,/,;O,6]85)%HfOp](Bs!sT%J$-ihZ
#6k83pAk3orrU4CaTMMD]`>MA"T\c8(EXjL,JYN-+s.[4"TnH!!s&K.#hB<n#m1D:!s82srrN-$gB4hc
rW:IIUAtGu"Ul1h,3C,O,6]85)%HfOp](Bs!sT%r$)S"2#6k83pAk3orrVWkT`b8qjT(>A"T\c8(EXjt
,FB\Z+s.[4"TnH!!s&K.#lY-n#m1D:!s82srrN-$Ns#@_q#H!Hq>^[""Ul1h,*=)N+s-n)%Kuq/!!<6(
"pgD!r<WQ2"p4r$!<3*"!gj)b"9&@^!9O7b!<ilJ+!RI)miqu[*uPOl!rW,s!!<6("pg7r!s]#4!qu]p
!WN4_!rrH&!ep^C!!NB,$l:!0Rj7YP"X5$+%Kuq/!!<6("pgh-nHf:&"p4r$!<3*"!i,qb"9&@j!87DV
!<ilJ+!Rm5j!+^O*uPOl!r)`t!<WN3ZO,Fo!s]#4!qu]p!WN52"5!_T!j2OC!!NB,$l:!0_^!JP"X5$+
%Kuq/!!<6("pi6UaU&%S"p4r$!<3*"!mCbb"9&A=!3uS.!<ilJ+!T;]]-@J'*uPOl!r)`t!<WN3gBk7o
!s]#4!qu]p!WN5Z"0_n,!nI@C!!NB,$l:!0lQ`;P"X5$+%Kuq/!!<6("pjZ(Ta:f+"p4r$!<3*"!qZSb
"9&Ae!/^a]!<ilJ+!MpSP9U5T*uPOl!r)`r!<W?,#`f8o#6k83q>gKprrN-$Ns#@_rW%NMo`,-r"Ul1h
,*X>O,6]85)%HfOp](Bs!sT$u$2=f/#6k83pAk3orrS_no)nsnP5s\Er;[!%"Ul1h,*=)Q+s.[4"TSW!
!!<6("pg:s":5;;!s82srrN-$PlpmcrW7uXkl:kf"Ul1h,+p1O,6]85)%HfOp](Bs!sT%,$1%s##6k83
pAk3orrT/%k6(\bT)dCA"T\c8(EXj.,MjXK+s.[4"TnH!!s&K.#e12n#m1D:!s82srrN-$]`Z^crW9D+
_#OW>"Ul1h,02"O,6]85)%HfOp](Bs!sT%T$,d,P#6k83pAk3orrURM^B=H:`rN4A"T\c8(EXjV,ISg#
+s.[4"TnH!!s&K.#iH#n#m1D:!s82srrN-$jTDOcrW:gSR/dBk"Ul1h,4HhO,6]85)%HfOp](Bs!sT&'
$(M;(#6k83pAk3orrVuuQNR3gmf8%A!W`H5!Z)q&OWt#R*uPOl!rDus!!<6("pg7r"U>56!WW5r!<3*"
!fmE`!ri=T!:Tsl!<ilJ+!R*tq'-%e*uPOl!r)`t!<WN3SI+lo!s]#4!qu]p!WN4q"7?9j!rDtL!;HNt
!<ilJ+!Qgl"X5$+%Kuq/!!<6("pgJ#q[!?0"p4r$!<3*"!h'5b"9&@`!9=+`!<ilJ+!RO+m3;cY*uPOl
!r)`t!<WN3W<q_o!s]#4!qu]p!WN5("6'F^!i,hC!!NB,$l:!0\KfcP"X5$+%Kuq/!!<6("phmKdg6*]
"p4r$!<3*"!l>&b"9&A3!5&:8!<ilJ+!SrS`?PO1*uPOl!r)`t!<WN3d0[Po!s]#4!qu]p!WN5P"1eU6
!mCYC!!NB,$l:!0i?PTP"X5$+%Kuq/!!<6("pj;sWsJk5"p4r$!<3*"!pTlb"9&A[!0dHe!<ilJ+!UA&
SKe:^*uPOl!r)`t!<WN3q$EAo!s]#4!qu]p!WN6#"-Ncc!qZJE!!`K(!<ilJ+!Qgl"sP-,%Kun6q#CKt
!sT$l#lk23"p4r$!<3*"!g<`b"9&@Y!:'Ug!<ilJ+!R:$oHOM`*uPOl!r)`t!<WN3U'^5o!s]#4!rN&r
!<3*"!fmH_!WW4P!:p0o!<ilJ+!R!qr$)@h*uPOl!r)`t!<WN3RL/Zo!s]#4!qu]p!WN4n"7ZKm!gNcC
!!NB,$l:!0W[$^P"X5$+%Kuq/!!<6("ph@<iX#\l"p4r$!<3*"!j`!b"9&A$!6Y?G!<ilJ+!SEDe0>,@
*uPOl!r)`t!<WN3_?nKo!s]#4!qu]p!WN5A"3CZE!keTC!!NB,$l:!0dNcOP"X5$+%Kuq/!!<6("picd
\d8HD"p4r$!<3*"!o!gb"9&AL!2BMt!<ilJ+!ThlX<Rlm*uPOl!r)`t!<WN3l3X<o!s]#4!qu]p!WN5i
"/,hr!p'EC!!NB,$l:!0qBM@P"X5$+%Kuq/!!<6("pk27OpM3q"p4r$!<3*"!fmH_!r2hJ!;Z[!!<ilJ
+!Qgl!?rTf)%HfOp](Bs!sT$p$2k/4#6k83pAk3orrSPip]LKsNWA2A"T\c8(EXir,OZi\+s.[4"TnW&
qu?g"!sT$l#m1D:!s82srrN-$O95IbrW7fSmJmCk"Ul1h,+BhO,6]85)%HfOp](Bs!sT%'$1S<(#6k83
pAk3orrStuli[4gRK2%A"T\c8(EXj),NC!P+s.[4"TnH!!s&K.#dXin#m1D:!s82srrN-$\-(@crW95&
`W-/C"Ul1h,/YYO,6]85)%HfOp](Bs!sT%O$-<JU#6k83pAk3orrUCH_uou?_>pkA"T\c8(EXjQ,J,0(
+s.[4"TnH!!s&K.#hoZn#m1D:!s82srrN-$hug1crW:XNScAop"Ul1h,3pJO,6]85)%HfOp](Bs!sT&"
$)%Y-#6k83pAk3orrVfpS-/`ll2Z\A#6=u:(EXhG,Ej>U+s.[4"TnH!!<E9'"pg7r!s]#4!r;or!<3*"
!fmH_!r`1O!;-<q!<ilJ+!QporZ_Rj*uPOl!r)`t!<WN3QjNNo!s]#4!qu]p!WN4l"7lWo!g<WG!;um$
!<ilJ+!Qgl"<np*%Kuh6p](Bs!sT$m#m:P>"p4r$!<3*"!gNlb"9&@[!9jIe!<ilJ+!R@&nfn;^*uPOl
!r)`t!<WN3U^?Ao!s]#4!qu]p!WN5#"6Tdc!hTJC!!NB,$l:!0Zm4EP"X5$+%Kuq/!!<6("ph^FfEhWb
"p4r$!<3*"!ke]b"9&A.!5SX=!<ilJ+!ScNas.'6*uPOl!r)`t!<WN3bR)2o!s]#4!qu]p!WN5K"2=s;
!lk;C!!NB,$l:!0g`s6P"X5$+%Kuq/!!<6("pj,nYR(C:"p4r$!<3*"!p'Nb"9&AV!1<fk!<ilJ*[2fu
,GQIf+sJ*H%Kuq/!!30'#6"o%$(_G,#RCY>!s82s"9AN)!s8<$QidEl!WrMm!/1CS!<`c3'ceEZ+U&u1
(_-]MqZ-Tq!s&H,#ET5r#RCS9!<<,p!!E<'!WiIf!WiH+!WiE)!JLOB!!NK4&K)Q/RN2/D"W\R$'FP*=
!!<6'"9tD%nco4!!Whup!W`<(U&s]`rrMusJcPNF"9A`9&.t$;"VM@T#6Y)%!!E<)"U#!q"T8H,"U,#2
!<Mlo!W`<'RK<!\O9";@"9AQ-#7744lj*[u"U"o"!<*#!!p9Ud!<N;o!<*#&!94%]!<E0$U]A[?!<E82
!S7>P!j)HS!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!9F34!.k4F!.Y~>

%%EndBinary
grestore
np
410.938 142.55 mo
498.34 142.55 li
498.34 3.31 li
410.938 3.31 li
cp
1 /0 /CSD get_res sepcs
0 sep
ef
410.938 142.55 mo
498.34 142.55 li
498.34 3.31 li
410.938 3.31 li
cp
1 /0 /CSD get_res sepcs
1 sep
@
QPENPH+Calibri*1 [24.025 0 0 -24.025 0 0 ]msf
436.928 43.18 mo
(EP)
[12.0004 0 ]xsh
%ADOBeginSubsetFont: WGJAAA+Calibri AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal QPENPH+Calibri gcheck setglobal} if
5 1988 1007 <00010067ffed0392052100580147b0852b58b9005affc0401c0f024d605a
01310810014d31100f014d31100c0d014c31200b014d31b80235400a4e53
264e4e1813014d40b8ffe840260f014d26200f014d40264e4e2640030e1b
0810014d1b100f014d1b100c0d014c1b200b014d1bb8fff8b30b014d1bb8
022db500080b014d00b8ffe8b40f024d000eb8ffe0b30f014d0eb8fff0b3
0f014d0eb8ffc040130c014d0e3b400f014d3b400c0d014c2f3b0111b8ff
c0b30f014d11b8ffc0400a0c0d014c3b113b111636b8010b400a49532cf3
202005495316b8010bb10556003fed3f12392fed3910ed1139392f2f2b2b
5d2b2b012f2b2b2bd42b2be12b2b2b2b2b1217392f2f2f2b2b2b11123910
e12b2b2b2b31305d2b1b400c0f3b010b033b113b11164936b8010b400d6c
53202cf36c20200549530516b8010bb26c055600183f2b3f12392f2b392b
1139392f2f5f5e5d30315901140e0223222e0635343633321e0233323e02
35342e022323222e0235343e023333323e0235342e0223220e0223222e02
35343e0633321e0215140e0207151e0303923e74aa6b4171583a0f080603
0e0d0935536f44426444222b53794d7b080f0b07060b0e0971426949271a
3451353a614c320a070b0703020608133a556f405a885b2d203e5a3b436f
502d0172598f6637151d1f0e0e141d15241c202520223e55323758402207
101a1513190f07224059372849361f232823050f1b160f17110e13242318
2e5475473d6951390b020735506b>QPENPH+Calibri AddT42Char 
QPENPH+Calibri /CharStrings get begin
/three 1007 def
end
QPENPH+Calibri /Encoding get
dup 51 /three put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/QPENPH+Calibri*1 
[32{/.notdef}rp /space 15{/.notdef}rp /zero /one /two /three /four 
2{/.notdef}rp /seven /eight 12{/.notdef}rp /E 10{/.notdef}rp /P 18{/.notdef}rp 
/c 5{/.notdef}rp /i /.notdef /k 7{/.notdef}rp /s /t 
6{/.notdef}rp /braceleft /.notdef /braceright 130{/.notdef}rp]
QPENPH+Calibri nf
QPENPH+Calibri*1 [24.025 0 0 -24.025 0 0 ]msf
461.058 43.18 mo
(3)sh
QPENPI+Calibri,Italic*1 [18.025 0 0 -18.025 0 0 ]msf
415.348 62.71 mo
(Activation)
[10.4905 7.49841 6.03848 3.71307 8.23743 8.9946 6.03848 4.45209 8.99451 0 ]xsh
QPENPI+Calibri,Italic*1 [18.025 0 0 -18.025 0 0 ]msf
489.398 62.71 mo
(:)sh
QPENPH+Calibri*1 [18.025 0 0 -18.025 0 0 ]msf
415.348 80.74 mo
(   )
[3.74921 4.48813 0 ]xsh
QPENPH+Calibri*1 [18.025 0 0 -18.025 0 0 ]msf
427.558 80.74 mo
({)sh
QPENPH+Calibri*1 [18.025 0 0 -18.025 0 0 ]msf
433.228 80.74 mo
(t)sh
QPENPH+Calibri*1 [18.025 0 0 -18.025 0 0 ]msf
439.258 80.74 mo
(3)sh
QPENPH+Calibri*1 [18.025 0 0 -18.025 0 0 ]msf
448.408 80.74 mo
(})sh
QPENPI+Calibri,Italic*1 [18.025 0 0 -18.025 0 0 ]msf
415.348 98.76 mo
(Offset)
[11.9868 5.24509 5.24521 7.48047 8.25537 0 ]xsh
QPENPI+Calibri,Italic*1 [18.025 0 0 -18.025 0 0 ]msf
459.778 98.76 mo
(: )
[4.49979 0 ]xsh
QPENPH+Calibri*1 [18.025 0 0 -18.025 0 0 ]msf
423.585 116.78 mo
( )sh
QPENPH+Calibri*1 [18.025 0 0 -18.025 0 0 ]msf
427.558 116.78 mo
(11 )
[9.02475 9.02475 0 ]xsh
QPENPH+Calibri*1 [18.025 0 0 -18.025 0 0 ]msf
449.908 116.78 mo
(ticks)
[6.03848 4.45209 7.49847 8.20142 0 ]xsh
1 lc
1 lj
[1.5 3 ] 0 dsh
216.018 144.57 mo
216.018 217.43 li
@
350.308 142.55 mo
350.858 217.43 li
@
453.768 142.55 mo
454.288 217.34 li
@
[] 0 dsh
552.348 217.31 mo
602.798 166.86 li
@
%ADOBeginSubsetFont: WGJAAA+Calibri AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal QPENPH+Calibri gcheck setglobal} if
3 936 38 <000100acfffa0354050e00270083b0852b58b10713b8ffe8b310014d13b8
fff0b30f014d13b8fff0b30d014d13b8fff6b30c014d13b8ffe8b30b014d
13b80211b50d1d001e1d07b8010cb313131906b80128b322511955003f3f
ed12392fed012f2fc41139e12b2b2b2b2b3231301bb11307b8010cb56c13
13192206b80128b46c2251195500183f3f2b12392f2b30315901140e0223
211121321e0215140e02232111140e0223222e02351134363321321e0203
54040a0d07fe2601c0070d0a04040a0d07fe400814201a18221408291702
46070d0a0404c4131c1108fe4807101b15131b1109fde5070d070505070d
0704ae271f08121d>QPENPH+Calibri AddT42Char 
3 5466 258 <0002005cffed033f03ca0033004000f6b0852b5840200f421f422f42030b
0917340c0c014d34100d014d34180b014d34100f10014c34b801f7400e00
27270f00010c00100f014d003ab8fff0b30c014d3ab8ffe8b30d014d3ab8
ffe8b30b014d3ab8ffe8b40f10014c3ab8020840141117c500341034023b
c0340100340134342e412ab8011b400fd022012222041dea2e4a3ddc0c4d
04002f3fed3fed12392f5ded1112392f5d715e5ded012fe12b2b2b2bc42b
5e5d392f10e12b2b2b2b323931305e5d1b400d0b17013417c56c34342e41
222ab8011b40166c00220116042222042e1dea6c2e4a0c3ddc6c0c4d0400
182f3f2b3f2b12392f5f5e5d2b1112392f2b5d3031592514060623222626
3535060623222e0235343e02333335342e0223220e0223222e0235343e04
33321e02150723220e0215141633323637033f101c1b1a1f0e3b91514773
512d3e74a8697c16314e393d6149310c080c0904071b4256663461885426
a48d4464421f5950416f3d180c0c06060c0c5a3f46254666414c704a2546
3450351b1d231d0810190f191d1a231d132c557e54c4172d3f2946534244
>QPENPH+Calibri AddT42Char 
3 7302 282 <00020060ffed039c056d0026003900bcb0852b58401f3f3b010b1b39100d
014d390a0c014d391010014d39100f014d39180b014d39bb01f90000002f
ffe0b30d014d2fb8ffe8b310014d2fb8fff0b30f014d2fb8fff0b30c014d
2fb8ffe8b30b014d2fb8020a400a1321460b39271b040e2ab80105b2184a
34b80104b30e4d054c003f3fed3fed1217393f012fe12b2b2b2b2bd4e12b
2b2b2b2b323931305d1b400a21460b39271b040e182ab80105b46c184a0e
34b80104b46c0e4d054c00183f3f2b3f2b1217393f30315925140e022322
2e023535060623222e0235343e023332161711343e0233321e0215032626
23220e0215141e0233323e0237039c07111c14151c120847995b638c5728
3262915f4f834007141f1819201209a6437d443f58371915345641213d40
462719080c070404070c08774d564d83b16274bb84474543020b070d0705
05070d07fd4553573c627c404482653d122a4331>QPENPH+Calibri AddT42Char 
3 7652 286 <0002005dffed039903ca002b003400eab0852b58402a2f363f366f360313
200d014d13200f014d1313212c100c014d2c180b014d2c100d014d2c100f
10014c2cb801f9b5442ba42b022bb8fff0b50f014d2b3404b8ffe0b30d01
4d04b8ffeeb30c014d04b8ffe0b30b014d04b8ffe8b40f10014c04b8020a
4021212cc78004900402c00401d0040104041c2fdc264a18ea600e700e02
0e09ea1c4d003ffdd45ded3fed12392f5d7172ed012fe12b2b2b2b32dd2b
5de12b2b2b2b12392f2b2b31305d1b4022042cc76c76040104041c262fdc
6c264a0e18ea6c000e100e020f030e1c09ea6c1c4d00183f2bc45f5e5d2b
3f2b12392f5d2b3031590114062321141e0233323e0233321e0215140e06
23222e0235343e0233321e021527362623220e020703992719fdb21e4670
514064492f0c070b06030203070b365671406fa7723a3c71a0636a95602d
a60379773d5c3e2202020227214b78562e151a15070e19120d130f0c0b19
18133e7ab87a74b9814544739b581382942e4c653700>QPENPH+Calibri AddT42Char 
3 13096 367 <00010099fffa013e057100150051b0852b58b73f174f176f170300b8fff0
b30d014d00b8fff6b30c014d00b8ffe8b30b014d00b8fff0b40f10014c00
b801f8b40a1046054c003f3f012fe12b2b2b2b31305d1bb31046054c0018
3f3f30315925140e0223222e023511343e0233321e0215013e0812201918
201307071320181920120819080b080404080b080538080c080404080c08
>QPENPH+Calibri AddT42Char 
3 13246 374 <00010099fffa03a003ca003200b8b0852b58400f12100b014d13100b014d
3f34012a13b8fff0b310014d13b8fff0b30f014d13b8fff0b30d014d13b8
fff6b30c014d13b8ffe8b30b014d13b801f8401b1e0b1010014d0b100d01
4d0b100f014d0b0a0c014d0b180b014d0bb801f8b700400c014d001e10b8
0106400a2d4a2a192449194c054c003f3f3f12393fed012f2f2be12b2b2b
2b2b10e12b2b2b2b2b3931305d002b2b1bb12d10b80106400b6c2d4a2a19
2449194c054c00183f3f3f12393f2b30315925140e0223222e023511342e
022322060711140e0223222e023511343e0233321e021515363633321e02
1503a00812201819201208182e49303e7c44081220191820130706121c17
161d10074c974d5a7b4c2119080b080404080b08020f4d5e44245855fd8b
080b080404080b080384080b090303090b0877554f3d66896000>QPENPH+Calibri AddT42Char 
4 1474 455 <00010022fe94037c03bc00240071b0852b58b9001bfff040350b014d371b
01291b0118180b014d261801260e360e022709011a400b014d3a1a011938
0b014d3b19011f49190a13490a4b044f004b003f3f3f3f12393f31305d2b
5d2b015d5d5d2b5d5d2b1b400c1f49190a13490a4b044f004b00183f3f3f
3f12393f3031592103060623222e023713262627012634363633321e0217
0133133e023332161614070233780631321a201102067c091003febf0810
241e1e22140905010103f8061122201c241106feb51011050c140e013904
120a035c15180e0503080f0dfd2e02d6130b05050e181200>QPENPH+Calibri AddT42Char 
QPENPH+Calibri /CharStrings get begin
/F 38 def
/a 258 def
/d 282 def
/e 286 def
/l 367 def
/n 374 def
/y 455 def
end
QPENPH+Calibri /Encoding get
dup 70 /F put
dup 97 /a put
dup 100 /d put
dup 101 /e put
dup 108 /l put
dup 110 /n put
dup 121 /y put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/QPENPH+Calibri*1 
[32{/.notdef}rp /space 15{/.notdef}rp /zero /one /two /three /four 
2{/.notdef}rp /seven /eight 12{/.notdef}rp /E /F 9{/.notdef}rp /P 
16{/.notdef}rp /a /.notdef /c /d /e 3{/.notdef}rp /i 
/.notdef /k /l /.notdef /n 4{/.notdef}rp /s /t 
4{/.notdef}rp /y /.notdef /braceleft /.notdef /braceright 130{/.notdef}rp]
QPENPH+Calibri nf
QPENPH+Calibri*1 [18.025 0 0 -18.025 0 0 ]msf
578.178 160.48 mo
(Final delay )
[8.27344 4.45209 8.99445 8.97644 3.74921 4.48816 8.99432 8.9765 4.50616 8.25549 8.23749 0 
]xsh
%ADOBeginSubsetFont: WGJAAA+Calibri AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal QPENPH+Calibri gcheck setglobal} if
5 7586 1089 <0002005e0138039d0349000d001b003eb0852b58b4000e07150bbc010a00
040011010a0018002fedd6ed012f33cd3231301bb1040bb8010ab46c0418
1811b8010ab16c1800182f2b10c62b303159011406232122263534363321
32161114062321222635343633213216039d170ffd0c0f16141102f41214
170ffd0c0f16141102f412140303281f1f28242222fe57281e1e28252222
>QPENPH+Calibri AddT42Char 
QPENPH+Calibri /CharStrings get begin
/equal 1089 def
end
QPENPH+Calibri /Encoding get
dup 61 /equal put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/QPENPH+Calibri*1 
[32{/.notdef}rp /space 15{/.notdef}rp /zero /one /two /three /four 
2{/.notdef}rp /seven /eight 4{/.notdef}rp /equal 7{/.notdef}rp /E /F 
9{/.notdef}rp /P 16{/.notdef}rp /a /.notdef /c /d /e 
3{/.notdef}rp /i /.notdef /k /l /.notdef /n 4{/.notdef}rp 
/s /t 4{/.notdef}rp /y /.notdef /braceleft /.notdef /braceright 
130{/.notdef}rp]
QPENPH+Calibri nf
QPENPH+Calibri*1 [18.025 0 0 -18.025 0 0 ]msf
660.308 160.48 mo
(= )
[9.00006 0 ]xsh
%ADOBeginSubsetFont: WGJAAA+Calibri AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal QPENPH+Calibri gcheck setglobal} if
4 9362 970 <0002006bffed03bd05200034004800c6b0852b58b9004affc040170f024d
604a012b753f01663f01433f01343f01243f013fb8024340140c1c1c0c7a
35016a35014b35013a35012b350135b80243b670000120000100b8ffe0b3
0f014d00b8ffe8b70f024d00300c010cb8fffa400a0f024d0c3aff303005
26b80100b2135944b80115b1055f003fed3fed12392fed012f2b5dd42b2b
5d5de15d5d5d5d5d12392f10e15d5d5d5d5d3231305d2b1b4009303aff6c
3030051326b80100b46c13590544b80115b26c055f00183f2b3f2b12392f
2b30315901140e0223222e0435343e0433321e0615140e0223222e022322
0e02073e0333321e0207342e0223220e0207141e0233323e0203bd346ca6
71517c5c3d2510122e4f77a66e254c402c0e07040201070b090b26364d33
5d865529031a414d563169905926ae17365a42254a453f1a213f5e3f405e
3e1d01a3559f7949284a6c8aa45e53aa9e8b673c090f120b0d0f130e121a
10080e110e4c80a95c0f1e180f396589603a5f42240d171f1281ae692d30
5165>QPENPH+Calibri AddT42Char 
5 2978 1010 <ffff006bffed03bd0520020603ca0000>QPENPH+Calibri AddT42Char 
QPENPH+Calibri /CharStrings get begin
/six 1010 def
end
QPENPH+Calibri /Encoding get
dup 54 /six put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/QPENPH+Calibri*1 
[32{/.notdef}rp /space 15{/.notdef}rp /zero /one /two /three /four 
/.notdef /six /seven /eight 4{/.notdef}rp /equal 7{/.notdef}rp /E 
/F 9{/.notdef}rp /P 16{/.notdef}rp /a /.notdef /c /d 
/e 3{/.notdef}rp /i /.notdef /k /l /.notdef /n 
4{/.notdef}rp /s /t 4{/.notdef}rp /y /.notdef /braceleft /.notdef 
/braceright 130{/.notdef}rp]
QPENPH+Calibri nf
QPENPH+Calibri*1 [18.025 0 0 -18.025 0 0 ]msf
673.348 160.48 mo
(6)sh
133.668 215.17 mo
98.8484 180.35 li
@
%ADOBeginSubsetFont: WGJAAA+Calibri AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal QPENPH+Calibri gcheck setglobal} if
3 1184 47 <000100acfffa0158051400150061b0852b58b73f174f17af170300b8ffe8
b310014d00b8fff0b30f014d00b8fff0b30d014d00b8fff6b30c014d00b8
ffe8b30b014d00ba0211000affc0b715014d0a10520555003f3f012f2be1
2b2b2b2b2b31305d1bb31052055500183f3f30315925140e0223222e0235
11343e0233321e02150158081421191822140809152117192114081a080c
070505070c0804da080c070505070c08>QPENPH+Calibri AddT42Char 
3 8034 296 <00010025fffa02860578003c0088b0852b58b2161000b8ffe0b40b014d00
1bb8fff0b30d014d1bb8fff0b40f10014c1bb8fff6b30c014d1bb8ffe8b3
0b014d1bb801f9b2302a25b8ffd040121011014c250aed36471a26ed3048
204c1048003f3f3fed323fed012f2bc433f12b2b2b2bc42b33c431301b40
11360aed6c36471a3026ed6c3048204c104800183f3f3f2b323f2b303159
01140e0223222e0223220e02151533321e02151406232311140e0223222e
02351123222635343e02333335343e0233321e0402860405080607151e29
1b2534200ec9080b0905120fc908132018182013087f101004080c087f23
486d4a2342240c0803050f13170e05090b091833513a6207111a132420fc
eb080b080404080b0803152024131a11075d5e8756290d0f0c131b00>QPENPH+Calibri AddT42Char 
3 13572 381 <0002005affed03de03ca0013002700c9b0852b58401c3f29012812012911
01260d01260c012608012607012a03012902011eb8ffe8b310014d1eb8ff
f0b30f014d1eb8ffe0b30d014d1eb8ffeeb30c014d1eb8ffe8b30b014d1e
b8020a401e2f0a010a141810014d14100f014d14200d014d14120c014d14
180b014d14ba020a0000ffc0b70f004d7000010019b80101b20f4a23b801
02b1054d003fed3fed012f5d2be12b2b2b2b2b2f5de12b2b2b2b2b31305d
5d5d5d5d5d5d5d5d1bb10f19b80101b46c0f4a0523b80102b26c054d0018
3f2b3f2b30315901140e0223222e0235343e0233321e0207342e0223220e
0215141e0233323e0203de3a73ad726fa56e363973ac736fa56e37ae1b3e
6a4f496944211b3f6a4f486a442001e56eb9864b427eb4726eb9864a427e
b47c49826239345f824d4a826139345e8200>QPENPH+Calibri AddT42Char 
QPENPH+Calibri /CharStrings get begin
/I 47 def
/f 296 def
/o 381 def
end
QPENPH+Calibri /Encoding get
dup 73 /I put
dup 102 /f put
dup 111 /o put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/QPENPH+Calibri*1 
[32{/.notdef}rp /space 15{/.notdef}rp /zero /one /two /three /four 
/.notdef /six /seven /eight 4{/.notdef}rp /equal 7{/.notdef}rp /E 
/F 2{/.notdef}rp /I 6{/.notdef}rp /P 16{/.notdef}rp /a /.notdef 
/c /d /e /f 2{/.notdef}rp /i /.notdef /k 
/l /.notdef /n /o 3{/.notdef}rp /s /t 4{/.notdef}rp 
/y /.notdef /braceleft /.notdef /braceright 130{/.notdef}rp]
QPENPH+Calibri nf
QPENPH+Calibri*1 [18.025 0 0 -18.025 0 0 ]msf
13.7784 172.19 mo
(Initial offset )
[4.54228 9.73341 3.76717 6.0385 4.48808 8.27354 4.50618 3.7672 9.75145 5.28119 5.2812 7.49849 
8.97647 6.0385 0 ]xsh
QPENPH+Calibri*1 [18.025 0 0 -18.025 0 0 ]msf
105.558 172.19 mo
(= )
[9.00008 0 ]xsh
QPENPH+Calibri*1 [18.025 0 0 -18.025 0 0 ]msf
118.598 172.19 mo
(4)sh
QPENPH+Calibri*1 [18.025 0 0 -18.025 0 0 ]msf
716.778 310.71 mo
(ticks)
[6.03851 4.45209 7.51654 8.25549 0 ]xsh
79.5984 302.4 mo
79.5984 315.82 li
@
2.25 lw
80.7084 302.91 mo
685.848 302.91 li
@
684.658 298.14 mo
698.968 302.91 li
684.658 307.68 li
684.658 298.14 li
cp
ef
1.5 lw
146.208 302.4 mo
146.208 316.57 li
@
111.718 302.4 mo
111.718 316.57 li
@
181.638 302.4 mo
181.638 316.57 li
@
283.218 302.4 mo
283.218 316.57 li
@
249.678 302.4 mo
249.678 316.57 li
@
316.758 302.4 mo
316.758 316.57 li
@
388.098 303.03 mo
388.098 316.57 li
@
423.058 303.03 mo
423.058 316.57 li
@
592.198 302.6 mo
592.198 316.15 li
@
522.268 302.6 mo
522.268 316.78 li
@
487.788 302.6 mo
487.788 316.78 li
@
556.288 302.6 mo
556.288 316.78 li
@
629.048 302.56 mo
629.048 316.1 li
@
666.368 302.56 mo
666.368 316.1 li
@
[1.5 3 ] 0 dsh
453.298 253.62 mo
453.768 302.91 li
@
350.038 253.62 mo
350.508 302.91 li
@
216.398 253.21 mo
216.868 302.5 li
@
216.018 170.17 mo
216.018 199.01 li
216.018 170.17 li
cp
350.768 170.17 mo
350.768 195.62 li
350.768 170.17 li
cp
.658473 .297063 0 0 cmyk
ef
2.25 lw
[] 0 dsh
216.018 170.17 mo
216.018 199.01 li
216.018 170.17 li
cp
350.768 170.17 mo
350.768 195.62 li
350.768 170.17 li
cp
283.398 188.17 mo
227.158 188.17 li
283.398 188.17 mo
339.628 188.17 li
1 /0 /CSD get_res sepcs
1 sep
@
228.168 192.22 mo
216.018 188.17 li
228.168 184.12 li
228.168 192.22 li
cp
ef
338.618 184.12 mo
350.768 188.17 li
338.618 192.22 li
338.618 184.12 li
cp
ef
253.888 183.67 mo
312.907 183.67 li
312.907 162.07 li
253.888 162.07 li
cp
1 /0 /CSD get_res sepcs
0 sep
ef
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: WGJAAA+Calibri AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal QPENPH+Calibri gcheck setglobal} if
3 382 24 <000200ac0000048f050e0012001f0098b0852b58401d3f2101131810014d
13100f014d13140d014d13120c014d13180b014d13bb02320000001affe8
b310014d1ab8fff0b30f014d1ab8fff0b30d014d1ab8fff6b30c014d1ab8
ffe8b30b014d1abb021100090018010cb20e511bb80126b10554003fed3f
ed012fe12b2b2b2b2bd4e12b2b2b2b2b31305d1bb10e18b8010cb46c0e51
051bb80126b26c055400183f2b3f2b30315901140e022321222635113436
3321321e0207342e0223231133323e02048f56a5f0a6feee172929170125
a8e89d51b5346faa86afb17caa7239029aa8fba5521f270482271f57a3e8
9969b5844afc113e80c1>QPENPH+Calibri AddT42Char 
QPENPH+Calibri /CharStrings get begin
/D 24 def
end
QPENPH+Calibri /Encoding get
dup 68 /D put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/QPENPH+Calibri*1 
[32{/.notdef}rp /space 15{/.notdef}rp /zero /one /two /three /four 
/.notdef /six /seven /eight 4{/.notdef}rp /equal 6{/.notdef}rp /D 
/E /F 2{/.notdef}rp /I 6{/.notdef}rp /P 16{/.notdef}rp /a 
/.notdef /c /d /e /f 2{/.notdef}rp /i /.notdef 
/k /l /.notdef /n /o 3{/.notdef}rp /s /t 
4{/.notdef}rp /y /.notdef /braceleft /.notdef /braceright 130{/.notdef}rp]
QPENPH+Calibri nf
QPENPH+Calibri*1 [18 0 0 -18 0 0 ]msf
254.158 178.71 mo
(Delay)
[11.2321 8.96402 3.77994 8.98206 0 ]xsh
QPENPH+Calibri*1 [18 0 0 -18 0 0 ]msf
295.128 178.71 mo
(=)sh
1 /0 /CSD get_res sepcs
1 sep
QPENPH+Calibri*1 [18 0 0 -18 0 0 ]msf
304.108 178.71 mo
(4)sh
350.788 170.15 mo
350.788 198.99 li
350.788 170.15 li
cp
454.208 170.15 mo
454.208 197.69 li
454.208 170.15 li
cp
.658473 .297063 0 0 cmyk
ef
350.788 170.15 mo
350.788 198.99 li
350.788 170.15 li
cp
454.208 170.15 mo
454.208 197.69 li
454.208 170.15 li
cp
402.498 188.15 mo
361.928 188.15 li
402.498 188.15 mo
443.078 188.15 li
1 /0 /CSD get_res sepcs
1 sep
@
362.938 192.2 mo
350.788 188.15 li
362.938 184.1 li
362.938 192.2 li
cp
ef
442.058 184.1 mo
454.208 188.15 li
442.058 192.2 li
442.058 184.1 li
cp
ef
372.988 183.64 mo
432.007 183.64 li
432.007 162.04 li
372.988 162.04 li
cp
1 /0 /CSD get_res sepcs
0 sep
ef
1 /0 /CSD get_res sepcs
1 sep
QPENPH+Calibri*1 [18 0 0 -18 0 0 ]msf
373.348 178.68 mo
(Delay)
[11.2501 9.00003 3.77991 9.00009 0 ]xsh
QPENPH+Calibri*1 [18 0 0 -18 0 0 ]msf
414.328 178.68 mo
(=)sh
QPENPH+Calibri*1 [18 0 0 -18 0 0 ]msf
423.308 178.68 mo
(3)sh
1.5 lw
217.078 304.03 mo
217.078 318.2 li
@
350.498 302.5 mo
350.498 316.68 li
@
453.968 302.91 mo
453.968 317.08 li
@
grestore
grestore
grestore
pgrs
%%PageTrailer
[
[/CSA [/0 /1 ]]
[/CSD [/0 ]]
] del_res
/QPENPI+Calibri,Italic*1 uf
/QPENPI+Calibri,Italic uf
/HIBBAA+Calibri,Italic uf
/QPENPH+Calibri*1 uf
/QPENPH+Calibri uf
/WGJAAA+Calibri uf
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/restore_mysetup gx
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Utils begin
[/EMC pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EOF
